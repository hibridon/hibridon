# MOLPRO utilities/sgi.conf $Revision: 2002.3 $

set $machine

if [ "$3" = "unix-iris" ]; then

  if [ x$compflev = x ]; then compflev=90; fi
  if [ x$compflev = x77 ]; then compflev=90; echo "sorry, but Fortran 77 no longer supported"; fi
  if [ $compflev = 90 ]; then
    ftcflags="sgif90 $ftcflags"
  fi

f77versionfull=`f${compflev} -version 2>&1 |sed -e 's/^.*Version *//'`
majorversion=`echo $f77versionfull|sed -e 's/\..*$//'`
minorversion=`echo $f77versionfull|sed -e 's/^[0-9]*\.//' -e 's/\..*$//'`
f77version=$majorversion.$minorversion


# f90 modules generate uppercase in filenames: NAME.mod
makedepend_options=-u

echo "f${compflev} version is $f77version (more exactly, $f77versionfull)"
static=-static
linkopt="-mp"
i64=-i8
opt="-O3"
if [ x$4 = xunix-r8000 ]; then
  opt="-O3 -WK,-r=3 -OPT:IEEE_arithmetic=3" 
fi
copt="$opt"
seek=.001 speed=3000000
  

cdefs=-D`uname`
if test "$2" = "unix-i4" ; then
  cc="cc -G0 -64 -mips4 $cdefs"
#hjw nblas=3 yields significant speedup!
  nblas=3
  fortran="f${compflev} -G0 -64 -mips4 -macro_expand"
# old  f_opt1="util/driver.f casvb/casvb_molpro.f"
# old  f_opt2="casvb/casvb_ci.f opt/frequencies.f forces/drvmp2.f argos/binput.f dtraf/fiddle.f multi/mucsf.f util/util.f util/transform.f prop/propa.f cfit/cfit_util.f"
  if [ x$f77version = x7.1 ]; then
    f_opt1="util/driver.f casvb/casvb_ci.f util/util.f ccsd/ucckext.f ccsd/ccdiis.f"
    f_opt2='blas/matrix.f prop/propa.f Molcas/ptrans.f util/transform.f' 
  elif [ x$f77version = x7.2 ]; then
    f_opt1="util/driver.f opt/frequencies.f casvb/casvb_ci.f util/util.f ccsd/ucckext.f ccsd/ccdiis.f"
    f_opt2="Molcas/dmpinf.f prop/propa.f util/transform.f"
  else
# 7.3 and anything to follow, maybe
    f_opt1="util/driver.f opt/frequencies.f casvb/casvb_ci.f util/util.f ccsd/ucckext.f ccsd/ccdiis.f"
    f_opt2="Molcas/dmpinf.f prop/propa.f util/transform.f util/rebas.f blas/matrix.f cfit/cfit_util.f"
  fi
  libraries="-lblas"
  BLASLIB="-lblas"
fi
if test "$2" = "unix-i8" ; then
  cc="cc -G0 -64 -mips4 -i8 -DI64 $cdefs"
  fortran="f${compflev} -G0 -64 -mips4 -macro_expand -i8"
# old  f_opt1="util/driver.f casvb/casvb_molpro.f"
# old  f_opt2="casvb/casvb_ci.f opt/frequencies.f forces/drvmp2.f argos/binput.f dtraf/fiddle.f multi/mucsf.f util/transform.f prop/propa.f cfit/cfit_util.f"
  if [ x$f77version = x7.1 ]; then
    f_opt1="util/driver.f casvb/casvb_ci.f ccsd/ucckext.f ccsd/ccdiis.f"
    f_opt2='blas/matrix.f prop/propa.f Molcas/ptrans.f util/transform.f'
  elif [ x$f77version = x7.2 ]; then
    f_opt1="util/driver.f opt/frequencies.f casvb/casvb_ci.f ccsd/ucckext.f ccsd/ccdiis.f"
    f_opt2="Molcas/dmpinf.f prop/propa.f util/transform.f"
  else
# 7.3 and anything to follow, maybe
    f_opt1="util/driver.f opt/frequencies.f casvb/casvb_ci.f ccsd/ucckext.f ccsd/ccdiis.f"
    f_opt2="Molcas/dmpinf.f prop/propa.f util/transform.f util/rebas.f blas/matrix.f cfit/cfit_util.f"
  fi
#hjw nblas=4 now works and is faster than nblas=0
  nblas=4
  #libraries="-lblas"
fi

if [ "x$2" = "xunix-i8" ]; then
# check for nasty -i8/constants bug 608953
  cat <<EOF > sgii8.f
      namx=99999
      call sreibw (namx)
      call sreibw (99999)
      end
      subroutine sreibw (namx)
      save iold
      data iold/0/
      if (iold.eq.0) then
       iold=namx
      else
       if (iold.eq.namx) write (6,*) 'OK'
      end if
      end
EOF
  f${compflev} -i8 -64 -G0 sgii8.f
  if [ "x`./a.out`" != "x OK" ]; then
    echo There is a problem with 8-byte integer constant handling by the compiler
    echo This may be related to SGI bug 608953, which is fixed by patch 3265
    echo You will need to get the compiler fixed so that the following program runs correctly
    cat sgii8.f
    rm -f sgii8.f
    exit 1;
  fi
  rm -f sgii8.f
fi
fi
