1 HELP
 
This is the help facility for Hibridon. This is based on a tree
structure analagous to the implementation of "HELP" under the VAX/VMS
operating system. To get a list of possible keywords at the current
level, type '?'
 
To get information about a keyword at the current level, type the keyword
followed by return. If that keyword has sublevels, you will see a list of
additional keywords.

For an introduction to Close-Coupled methods for inelastic scattering, see
the keyword, INTRO
 
Execution of the Hibridon package is controlled by the Hibridon driver.
For a description of the commands to the driver, see the keyword COMMANDS
 
The scattering calculation is controlled by
 
  system independent parameters (see keyword PARAMS)
  system dependent parameters (see keyword SYSTEM)
  logical flags (see keyword FLAGS)
  input, output, and job names (see keyword FILES)
 
Information on the system dependent BASIS, POT, and SYSDAT subroutines
can be obtained by entering SYSTEM and the appropriate keyword.
 
The keywords at level 1 are:  HELP, INTRO, COMMANDS, PARAMS, SYSTEM,
                              FLAGS, FILES, LINKING

To get information on keywords at level 2, you can also type "help
keyword".  In general, to get information on a keyword in leveln, you can
either step to that level, or type
 
help keyword(level2) keyword(level3) ... keyword(leveln). Examples:
 
help subroutine sysdat help basis 13_pi
 
To go back a level, type a null line (this will eventually return you to
the Hibridon prompt)
 
Current Revision of this help library:  17-Aug-2009.  Applicable version of
Hibridon:  4.3
 
1 INTRO
The Close-Coupled (CC) equations

	The CC equations arise whenever one describes the scattering of
systems with internal degrees of freedom.  These equations were introduced
into the field of molecular collisions in 1960 by Arthurs and
Dalgarno.(1,2) An excellent description of these equations and the role
they play in the quantum theory of inelastic collisions is given in a
recent review article by Secrest.(3)  In this Introduction we'll assume
that you have a basic familiarity with quantum scattering theory and with
the CC equations.

	In the close coupled treatment of both scattering and
photodissociation, the scattering wavefunction is expanded in a complete
set of internal states of the system, usually constructed as direct
products of the internal states of one (or both) fragments, multiplied by
angular functions which describe the rotation of one collision partner
about the other. Let us designate these internal states as Phi(r) where r
designates the internal coordinates.  Each internal state is called a
channel.  The full scattering wavefunction is written as
                 Psi(R, r) = Sigma[ F(R) Phi(r) ]  (1)
 
Each column of the F(R) matrix defines the expansion coefficients for
collisions in which the collision partners start out in the particular
initial state whose index is that of the selected column.

Substitution of the expansion (1) into the Schr&ouml;dinger equation,
premultiplication by one of the internal states, and integration over
<i><b>r</i></b> gives rise to a set of coupled ordinary differential
equations for the expansion coefficients <b>F</b> (<b><i>R</i></b>).

	The general structure of these coupled second-order
differential equations is expressed by the matrix equation

 	[1 d2/dR2  + W(R)] F(R) = 0 .  (2)

Here 1 designates the identity matrix, R is the interparticle
distance, and the matrix W(R) is given by
 
  	W(R) = k^2 - el^2 - (2 m / h^2 ) V(R) ,  (3)
  
where h designates Planck's constant divided by 2pi, m is the reduced
mass of the collision system and k^2 and el^2  designate, respectively,
the (diagonal) matrices of the wavevector and the relative orbital angular
momentum of the collision partners. We have

	(k^2)ii = (2 m/ h^22) (E - ei) ,  (4)

where E is the total energy and ei is the internal
energy of the ith channel.  Also, we have

	(el^2)ii = h^2 eli (eli + 1)/ (2 m R^2) ,  (5)

where eli is the relative orbital angular momentum in the
ith channel.  In Eq. (3) the matrix V(R) is the (full, symmetric) matrix
of the coupling potential.
	Diagonalization of the W(R) matrix yields the diagonal matrix of
adiabatic wavevectors k(R).  The eigenvectors define the locally adiabatic
states, which are transformations of the internal states used to expand
the scattering wavefunction, Phi(r). If C(R) designates the matrix of
eigenvectors, column ordered, then the diagonal matrix of adiabatic
energies is defined as

                         e(R) = C(R)-tranpose V(R) C(R)   .   (6)

	One obtains numerically the matrix of solutions F(R) by outward
propagation. You start this propagation at a value of the interparticle
distance R = Rstart which lies well inside the innermost classical turning
point. Once you have propagated F(R) out to a value of R which is so large
that the potential V(R) is negligible, compared to the wavevectors k^2,
you can then match F(R) to the known asymptotic form and obtain the S
matrix. This has to be done over and over at many values of the total
angular momentum Jtot.  In a semiclassical description the total angular
momentum corresponds to the impact parameter. From the S matrix at all
these values of Jtot, you can calculate differential and integral cross
sections.(2,3)

Wavefunction and Fluxes

	In addition to the determination of cross sections, which depend
on the asymptotic form of the expansion coefficients F(R) in Eq. (1), the
Hibridon code allows you determine the R dependence of these coefficients.
In addition, one can also determine the flux associated with the
scattering and photodissociation wavefunctions, which is a more meaningful
physical quantity.  For a further discussion see Refs. 4 and 5.

Close-Coupling methods

	The determination of differential and/or integral cross
sections involves three steps:

a.      The development of subroutines to calculate the potential matrix
        V(R) for a particular collision system.
b.      Solution of the CC equations to obtain and store the S matrix
        elements.
c.      The subsequent calculation of differential and/or integral cross
        sections for the transitions which interest you.

The major part of this manual is devoted to the description of a complex
family of subroutines for solution of the CC equations - step b above.

	Historically, there have been many algorithms developed to solve
these equations.  These algorithms can be grouped into two categories:

a.      solution-following methods.  In these methods you approximate the
        matrix of solutions F(R) by a power series and then solve Eq. (1)
        exactly. This is similar in spirit to the usual numerical
        techniques for solution of ordinary differential equations
        (Runge-Kutta, Euler, Adams-Moulton).
b.      potential-following methods.  In these methods you approximate the
        matrix W(R) by a series of constant or linear segments.  In these
        local regions the approximated CC equations can be solved exactly.

	In solution-following methods the solution is approximated while
the potential is retained exactly.  On the other hand, in
potential-following methods the potential is approximated but the solution
(to this approximate potential) is exact.

	No one method is superior at all values of the internuclear
separation.  Rather, it is best to combine a solution-following method at
short-range (R small), where most intermolecular potentials vary rapidly,
with a potential-following method at longer range, where the potential
varies more slowly but where for many problems the solution can be highly
oscillatory. This combination of two methods is called a hybrid
integrator.

	This user's manual describes a particular hybrid
integrator - the Hibridon code.The solution following method used at short
range is based on the log-derivative propagator of Johnson,(6-8) as
modified recently by Manolopoulos.(9)  The potential-following method used
at long-range is based on the linear-reference potential of Gordon,(10,11)
as modified recently by Alexander and Manolopoulos.(12,13) The Hibridon
code combines two very fast algorithms for solution of the CC equations
with great numerical stability. To a large degree the numerical stability
is obtained by propagation of the logarithmic derivative of the solution
matrix F(R), namely

 	Y(R) = F'(R) F(R)-1

rather than the solution matrix itself.

References

 1. A. Arthurs and A. Dalgarno, Proc. Roy. Soc. (London Ser.) A256, 540
   (1960).
 2. W. A. Lester, Jr., Meth. Comput. Phys. 10, 211 (1971).
 3. D. Secrest, in Atom-Molecule Collision Theory: A Guide for the
    Experimentalist, edited by R. B. Bernstein (Plenum, New York, l979)
    p. 265.
 4. M. H. Alexander, J. Chem. Phys. 95, 8931 (1991); 96, 6672 (1992).
 5. D. E. Manolopoulos and M. H. Alexander, J. Chem. Phys. 97, 2527
    (1992); M. H. Alexander, C. Rist, and D. E. Manolopoulos, J. Chem.
    Phys. 97, 4836 (1992).
 6. B. R. Johnson, J. Comput. Phys. 13, 445 (1973).
 7. B. R. Johnson, Proceedings of the NRCC Workshop on Algorithms and
    Computer Codes in Atomic and Molecular Scattering Theory, edited by L. D.
    Thomas (Lawrence Berkeley Laboratory, CA Report LBL-9501 l979)
    pp. 86-92 (Vol. I) and p. 52 (Vol. II).
 8. F. Mrugala and D. Secrest, J. Chem. Phys. 78, 5954 (1983).
 9. D. E. Manolopoulos, J. Chem. Phys. 85, 6425 (1986).
 10. R. G. Gordon, Meth. Comput. Phys. 10, 81 (1971).
 11. R. G. Gordon, J. Chem. Phys. 51, 14 (1969).
 12. M. H. Alexander, J. Chem. Phys. 81, 4510 (1984).
 13. M. H. Alexander and D. E. Manolopoulos, J. Chem. Phys. 86, 2044 (1987).

2 PARAMS

        Overview of integration parameters

	In order to carry out scattering calculations on a particular
system you must first decide on the values of the parameters which
control:

 a.  The starting point of the integration of the coupled equations.  This
is set by the parameter RSTART

As the total angular momentum (JTOT) increases, the classical turning
point will also increase.  As this occurs, the program automatically
adjusts rstart to remain a constant distance inside the innermost
classical turning point.

 b.  The accuracy of the numerical integration

   In the LOGD propagation the accuracy is controlled by the parameter
      SPAC, which sets the step size.

   In the AIRY propagation the accuracy is controlled by two parameters:
       TOLAI, which determines how large can be the maximum of the diagonal and
              off-diagonal terms which are neglected.
       RINCR, which sets the point beyond which the step size is 
              allowed to increase

 c. The point at which the switch is made from the LOGD to the AIRY
propagator.  This is set by the parameter RENDLD.

   As RSTART increases, at subsequent values of JTOT, the value of RENDLD
increases accordingly, so that the distance covered by the LOGD propagator
remains constant.  If, however, you are not using the AIRY propagator
(flag AIRYFL = .false.), then the program does not change RENDLD at higher
values of JTOT.

 d. The ending point of the integration. This is set by the parameter
RENDAI.

 e. The maximum value of the partial wave index needed (maximum value of
the impact parameter) and the partial wave grid size.  This is set by the
parameters JTOT2 and JTOTD.

 f. The number of rotational levels required in the channel expansion

To set these parameters, use the OPTIMIZE command and procede as follows:

      First, disable the AIRY propagation by setting AIRYFL = .false. In
this step you will adjust the two parameters that control the LOGD
integration.  OPTIMIZE checks for convergence of the square of T matrix
elements.  The only levels checked are those which are explicity
designated in the level lists JOUT and INDOUT.  Make sure these parameters
are set correctly to include a representative set of levels for your
problem.  Set the total angular momentum JTOT1 to be small.  Set JTOT2 =
JTOT1, and JTOTD = 1.

      Then set RSTART sufficiently small that the integration is starting
inside the classically forbidden region.  Set RENDLD to be roughly 2 bohr
outside the innermost classical turning point, which you can estimate
using the command TURN.  Optimize first SPAC as follows:

       OPT,SPAC,{valmax},{valmin},0.7

where {valmax} is the initial value, typically 0.5 times the deBroglie
wavelength (which can be found using the command DEBROGLI), and {valmin}
is typically 0.05*valmax.

When you have found a reasonable value of SPAC save the parameters (using
the command SAVE) and then procede to adjust the value of RSTART as
follows

       OPT,RSTART,{valmax},{valmin},1,-0.25

where {valmax} = innermost turning point - 0.2 bohr
      {valmin} = {valmax} - 1.5 bohr

when this is complete save the optimized value of RSTART.

      Now, you can adjust the parameters that control the AIRY
integration. Set AIRYFL = .true., TOLAI = 1.0, and RENDAI equal to a value
at which you expect the coupling potential to be asymptotically weak (for
problems with long-range potentials that vary only as R^-6, RENDAI should
be typically 20 - 30 bohr).

First adjust FSTFAC, which controls the relative size of the AIRY steps to
the LOGD steps, as follows

      OPT,FSTFAC,{valmax},{valmin},0.8

with, typically, {valmax} = 20, {valmin} = 2

Then adjust RENDAI as follows

      OPT,RENDAI,{valmin},{valmax},1,3

where, typically, {valmin} = 15, {valmax} = 40 .  For long-range
potentials (dipole-dipole, charge-quadrupole, charge-dipole coupling these
values will have to be much larger).

Then adjust TOLAI as follows:

      OPT,TOLAI,{valmax},1,1,{step}

where, typically {valmax} = 1.5 - 2 and {step} = -0.05.  TOLAI controls
the rate at which step sizes increase in the AIRY propagation.  This is
very system dependent; typical values are 1 .le. TOLAI .le. 1.2

At this point, you need to set RENDLD, the integration switching point.
The goal is to minimize the cpu time spent in propagating the log-
derivative matrix from RSTART to RENDAI. Since the LOGD propagator uses a
constant step size, its "speed" - how long it takes to propagate the
log-derivative matrix over a given distance - is constant.  For a given
interval width, the AIRY propagator involves significantly more matrix
operations and is hence slower than the LOGD propagator.  In general the
speed ratio is about 6:1 in favor of the LOGD propagator on scalar
machines, but drops to less than 3:1 on vector machines with fast matrix
multiply library routines. However, in the AIRY propagation the interval
widths increase with R, so that the speed becomes faster as R increases.
Eventually, the AIRY propagator will become faster than the LOGD
propagator, which uses constant step sizes.

The total time will be proportional to

	NL + 6 NA (NL + 3 NA, on vector machines) ,

where NL designates the number of steps in the LOGD propagation and NA
designates the number of intervals in the AIRY propagation.  For a given
value of the parameter spac, NL will be directly proportional to RENDLD.
Thus to minimize the total cpu time you need to decrease RENDLD (thereby
decreasing NL) while at the same time trying to minimize the total sum NL+
f*NA, where f=6 for scalar machines and 3 for vector machines).  You can
accomplish this as follows:

   The scattering program prints out NL and NA.  First decrease RENDLD,
reoptimize the AIRY parameters, as described above, and see if the sum
NL+f*NA (or the total cpu time) decreases.  If so, continue to decrease
RENDLD. Otherwise, increase RENDLD.

In general, you don't need to search for a precise minimum in the function
(NL + f * NA) since the number of intervals used in the AIRY propagation
will vary substantially at different values of JTOT. For systems with
small deBroglie wavelengths (high mass, high collision energy) the minimal
cpu time will correspond to using the LOGD propagator over only a short
range (0.5-2 Bohr).  For systems with large deBroglie wavelengths
(collisions involving H2 or He, low collision energy), you will even want
to use the LOGD propagator over a longer range. In some cases you may want
to use only the LOGD integrator (set AIRYFL=.false.) , or only the AIRY
integrator (set LOGDFL=.false.).

2 TOTAL_J

Determining the maximum partial waves and the partial wave step size
	After you have determined the optimal control parameters for both
the LOGD and AIRY propagation, you need now to decide how many values of
JTOT (partial waves) are necessary to ensure accurate cross sections.
This is set by the parameter JTOT2.  As Jtot increases, all the elements
of the T matrix will eventually become equal to zero (or equal to the the
unit matrix in the case of collisions of a molecule with a surface).  The
value of JTOT beyond which T^2 has reached this asymptotic limit, to
within whatever tolerance you decide, can be used for the parameter JTOT2.
Typically you can stop whenever all the T^2 elements are less than 0.001.
This number is only a guideline; for a given problem you may want (or
need) greater or lesser accuracy.
	
	Integral cross sections are computed by a sum over many
partial waves. For inelastic transitions it is usually not necessary to
carry out calculations at every partial wave; the integral cross sections
can be obtained accurately by interpolation.  The interpolation step size
is set by the parameter JTOTD.

	These two parameters (JTOT2 and JTOTD) can be determined as
follows:  You have already determined how far the integration should go.
This is the parameter RENDAI.  A conservative estimate of the maximum
value of JTOT, which we denote JEST, is

	JEST = [(2mE)^1/2 / h ] * RENDAI

where m is the reduced collision mass, h designates Planck's
constant divided by 2pi and E is the total energy.  You want the quantity
in square brackets to be in Bohr-1.  Obviously, you need to round off JEST
to an integer (or half-integer, in the case of systems of even spin
multiplicity).

Now, carry out a series of scattering calculations varying JTOTD. As an
initial guess choose JTOTD = JTOT2 / 20. Subsequent calculations can be
done with values of jtotd obtained by successively increasing (or
decreasing) this initial value by 20%. Comparison of the resulting
integral cross sections will allow you to determine the optimal value of
JTOTD. Typically, you will want to find the largest value of jtotd which
will ensure 2-3 figure accuracy in the integral cross sections. It may be
that you can attain your desired accuracy only by summing over all partial
waves (JTOTD = 1).  This will certainly be the case if
	(a) only few partial waves contribute to the cross sections of
interest
	(b) resonances are present, which will result in rapid
fluctuations in the partial cross sections, or
	(c) you are interested in elastic processes, differential cross
sections or M-state resolved cross sections, which need as input the S
matrix at every value of Jtot.

	If your scattering problem involves only a relatively few number
of channels, you can probably save a lot of time by skipping all this work
and just letting JTOTD=1.
 
1 PARAMS

The scattering calculation is controlled by GENERAL (system independent)
and SYSTEM parameters (those which are specific to a particular collision
system).

The GENERAL (system independent) parameters are

ENERG     FSTFAC    INDOUT    IPRINT    JOUT      JTOT1     JTOT2
JTOTD     JLPAR     LSCREEN   NERG      NIOUT     NNOUT     NUMAX
NUMIN     NUD       RCUT      RENDAI    RENDLD    RINCR     RSTART
SPAC      TOLAI     XMU

 To change values of parameters, enter the command
 
       PARAMETER1=VAL1,PARAMETER2=VAL2  etc.
 
different parameters can be separated by commas or by semicolons
 
Note that values for the parameters ENERG, INDOUT, and JOUT must be
terminated by a backslash (\) if other PARAMETER=VAL strings follow,
e.g.
 
       ENERG=1000,2000\AIRYFL=T
 
The Hibridon input parser is not case sensitive, so parameters can be
entered in either upper or lower case.  Parameters may be abbreviated,
although you will be asked to re-enter the parameter if there is an
ambiguity.

The default parameters are those for the collision of N2 with Ar, which is
used a test case.
 
2 DEFAULTS
 
The default parameters are those appropriate to collisions of N2 with Ar,
namely
 
    *** Parameters:
JTOT1  =  20        JTOT2  =  20        JTOTD  =  20        JLPAR  =   1
NERG   =   1        NUMAX  =   0        NUMIN  =   0        NUD    =   1
LSCREEN=  48        IPRINT =   0
FSTFAC =  15.00     RINCR  =  8.000     RCUT   =  30.00     RENDAI =  25.00
RENDLD =  8.000     RSTART =  5.600     SPAC   =  .1500     TOLAI  =  1.150
XMU    =  16.47
 
2 GENERAL

The general (system independent) parameters control the accuracy and range
of the scattering calculation

3 ENERG
 
The values of the collision energy at which the scattering calcuation
will be run are specified by the input line
 
           ENERG = {energy1},{energy2}...{energyN}\
 
If other input data occurs on the same line, then the string of energies
must be terminated by a backslash.  Note that if the length of the array
of energies is greater than the current value of NERG, then NERG is reset
accordingly.  The maximum number of energies cannot exceed 25.

If other input data occurs on the same line, then the string of energies must 
be terminated by a backslash.  Note that if the length of the array of energies 
is greater than the current value of NERG, then NERG is reset accordingly.  
The maximum number of energies cannot exceed 25.

If the first energy is negative, then the calculations are to be preformed on a regular grid of
energies, specified by

           ENERG = {negative number},{energy1},{energ2},{nerg}
 
where
           energy1:  The initial energy
           energy2:  The final energy
           nerg:     The number of energies (less than or equal to 25)

The spacing for the grid of energies is determined as

           delta_e=(energ2-energ1)/nerg

This spacing is then rounded to the nearest 0.01 cm-1, so that the final energy becomes

           e_final=e_initial + (nerg-1)*delta_e

which may not be exactly equal to the final energy which you initially specified.

In all cases, the energy values are reordered in decreasing order, starting with the highest value.
 
3 FSTFAC
 
The parameter FSTFAC is the ratio between the first interval size in the
AIRY integration, and the value of SPAC, the step-size in the LOGD
integration. Specifically,
 
           DRNOW (first interval) = FSTFAC * SPAC
 
The default value is FSTFAC=1.

3 INDOUT
 
INDOUT is an array containing the values of the quantum numbers (in
addition to the array JOUT) for which

    S-matrix elements will be printed out if the flag WRSMAT is set
       .TRUE.
    Integral cross sections will be printed out by the command INTCRS
    Partial cross sections will be printed out by the command PARTC

The length of the array INDOUT is given by the absolute value of the
parameter NIOUT.

If WRSMAT is .TRUE., then
 
  If NINOUT is POSITIVE, then the only S-matrix elements which will be
  saved are those for which BOTH the initial and final values of the
  additional quantum numbers correspond to one of the values in the 
  array INDOUT
 
  If NIOUT is NEGATIVE, any column of the S-matrix for which the initial
  value of the additional quantum number is included in the array INDOUT
  will be printed
 
For the printing of integral or partial cross sections, which is
controlled by the commands INTCRS and PARTC, the sign of NIOUT is of no
importance
 
Changing or setting the INDOUT array is done by the command
 
           INDOUT,NIOUT,indout(1),indout(2).....indout(NIOUT)
 
  e.g.     INDOUT,3,indout(1),indout(2),indout(3)
 
If the number of values of indout entered is less than NIOUT, then
NIOUT is reset automatically. The string of input values should be
terminated with a backslash (\) if other commands follow on the same
input line.
  
3 IPRINT

IPRINT is a general print control parameter which can vary from -1 to 2.
In some of the basis subroutines the amount of diagnostic printing is
controlled by IPRINT with the understanding that
           IPRINT = -1 : no print
           IPRINT =  0 : minimal print
           IPRINT =  1 : moderate diagnostic print
           IPRINT =  2 : full scale diagnostics

If the flag NOPRIN is set equal to .true., then IPRINT is automatically
set equal to -1

At present IPRINT effects printing as follows:

     BASIS routines: with the flag BASTST = .true. and IPRINT = 1,
        only the number of non-zero coupling matrix elements will
        be printed.  To printout the matrix elements themselves, set
        IPRINT = 2

     Printing of integral cross sections:  With the flag PRXSEC set true
        for CS calculations, integral cross sections will be printed out
        only for J-initial and/or J-final .le. NUMAX.  Setting IPRINT =
        2 forces printing of all the cross sections, even those which are
        not converged with respect to the sum over the projection index nu


3 JTOT1
 
JTOT1 is the initial value of the total angular momentum in a CC
calculation or the the orbital angular momentum (L-bar) in a CS
calculation.  For collisions involving a molecule with half- integer spin
(flag FLAGHF=.true.) then the true total angular momentum is equal to
JTOT+1/2.  For collisions of a molecule with an uncorrugated surface, you
should set JTOT1=0.
 
To set or change the value of JTOT1 see information on the INP, SAVE, or 
SET commands.
 
3 JTOT2
 
JTOT2 is the final value of the total angular momentum in a CC
calculation or the orbital angular momentum (L-bar) in a CS calculation.
For collisions involving a molecule with half- integer spin (flag
FLAGHF=.true.) then the true total angular momentum is equal to JTOT+1/2.
For collisions of a molecule with an uncorrugated surface, you should set
JTOT2=0.
 
To set or change the value of JTOT2 see see information on the INP, SAVE, or 
SET commands.
 
3 JTOTD
 
JTOTD is the step size for the total angular momentum in a CC calculation
or the orbital angular momentum (L-bar) in  a CS calculation. Scattering
calculations are performed at every JTOTD value of JTOT (or L-bar) lying
between (and including) JTOT1 and JTOT2.  For collisions involving a
molecule with half-integer spin (flag FLAGHF=.true.) then the total
angular momentum is half integer  (although L-bar remains integer). In
this case the true values of JTOT range from JTOT1+1/2 to JTOT2+1/2 in
steps of JTOTD.
 
If the flags WRXSEC and/or PRXSEC are .true., the the program accumulates
the contribution to the integral cross sections due to all partial waves
lying between JTOT1 and JTOT2.  If JTOT1=1, this is done by adding the
degeneracy weighted sums of the squares of the T matrix at each partial
wave.  If, however, JTOT>1, then a Simpson's rule  scheme is used to
interpolate the missing T-matrix elements in this sum.
 
For collisions of a molecule with an uncorrugated surface, you should set
JTOTD=0.
 
To set or change the value of JTOTD  see information on the INP, SAVE, or 
SET commands..
 
3 JLPAR

In the CC formulation, there is no coupling between channels whose
internal wavefunction have opposite total parity.  JLPAR is the index
which selects the parity of the channels which are included in a CC
calculation.

If JLPAR=+1 or -1, then

for molecules in electronic states of odd multiplicity (integer spin) only
those channels for which
                      J - S - s + L - JTOT
              eps (-1)                      = JLPAR
 
are included in the channel basis.  For molecules in electronic states of
even multiplicity (half-integer spin) only those channels for which
 
                      J - S - s + L - JTOT - 1/2
              eps (-1)                           = JLPAR
 
are included in the channel basis.  Here
 
       eps = symmetry index of molecular state in Hund's case (a)
        S  = total spin
        s  = 1 for sigma-minus states, 0 otherwise
        L  = orbital angular momentum
 
Setting JLPAR = 0 in a CC calculation will ensure that the calculation is
done first for JLPAR = 1, and subsequently for JLPAR = -1.
 
3 JOUT
 
JOUT is an array containing the values of the rotational quantum number
for which
    S-matrix elements will be printed out if the flag WRSMAT is set
       .TRUE.
    Integral cross sections will be printed out by the command INTCRS
    Partial cross sections will be printed out by the command PARTC

The length of the array JOUT is given by the absolute value of the
parameter NNOUT.

If WRSMAT is .TRUE., then
 
  If NNOUT is POSITIVE, then the only S-matrix elements which will be
  saved are those for which BOTH the initial and final rotational quantum
   numbers correspond to one of the values in the array JOUT
 
  If NNOUT is NEGATIVE, any column of the S-matrix for which the initial
  rotational quantum number is included in the array JOUT will be printed
 
For the printing of integral or partial cross sections, which is
controlled by the commands INTCRS and PARTC, the sign of NNOUT is of no
importance
 
Changing or setting the JOUT array is done by the command
 
           JOUT,NNOUT,jout(1),jout(2).....jout(NNOUT)
 
  e.g.     JOUT,3,jout(1),jout(2),jout(3)
 
If the number of values of jout entered is less than NNOUT, then NNOUT is
reset automatically. The string of input values should be terminated with
a backslash (\) if other commands follow on the same input line.
 
3 LSCREEN

LSCREEN is the number of lines on your terminal screen.  This parameter
should be equal to the number of rows as revealed by the UNIX command

          stty all

or to the size of the page as revealed by the VMS command

          SHOW TERMINAL

LSCREEN must be set correctly for the Hibridon online help facility.

3 NERG
 
NERG is the number of total energies at which the calculation is to be
performed.  Both the log-derivative and AIRY propagation are significantly
faster at the 2nd and subsequent energies.  Thus if cross sections are
desired over a range of energies, it is advantageous to set NERG>1.
 
The maximum value of NERG is controlled by a PARAMETER statement in the
subroutine LOGAIR (/src/himain.f) and can not exceed 10 (because of
restrictions imposed by the length of the names of the logical units
reserved for storing the partial and integral cross sections and selected
S-matrix elements).  If NERG>1, then three scratch files (units 10-12)
are opened to store the required energy independent matrices as well as
the channel quantum numbers.
 
The value of NERG can be changed with the command
 
          NERG={newvalue}
 
If {newvalue} is larger than the value of NERG currently stored, then you
will be warned to increase accordingly the array of energies at which the
calculations are to be performed.  This can be done with the command
 
          ENERG={energy1},{energy2}...{energyn}\
 
where n is the new value of NERG.  The string of input values must be
terminated with a backslash if other input occurs on the same line.

3 NIOUT
 
The parameter NIOUT sets the length of the array INDOUT which contains 
the values of the  quantum number(s) (in addition to the array JOUT)
for which

    S-matrix elements will be printed out if the flag WRSMAT is set
       .TRUE.
    Integral cross sections will be printed out by the command INTCRS
    Partial cross sections will be printed out by the command PARTC
 
The length of this array is given by the absolute value of the parameter
NIOUT.
 
If NIOUT is POSITIVE, then the only S-matrix elements which will be saved
are those for which BOTH the initial and final additional quantum numbers
correspond to one of the value in the array INDOUT
 
If NIOUT is NEGATIVE, any column of the S-matrix for which the initial
additional quantum number is included in the array INDOUT will be printed
 
Changing or setting the value of NIOUT can be done only by setting the
INDOUT parameter as follows
 
           INDOUT,NIOUT,indout(1),indout(2).....indout(NIOUT)
 
  e.g.     INDOUT,3,indout(1),indout(2),indout(3)
 
If the number of values of jout entered is less than NIOUT, then NIOUT is
reset automatically. The string of input values should be terminated with
a backslash (\) if other commands follow on the same input line.

3 NNOUT
 
The parameter NNOUT sets the length of the array JOUT which contains the
values of the rotational quantum number for which

    S-matrix elements will be printed out if the flag WRSMAT is set
       .TRUE.
    Integral cross sections will be printed out by the command INTCRS
    Partial cross sections will be printed out by the command PARTC
 
The length of this array is given by the absolute value of the parameter
NNOUT.
 
If NNOUT is POSITIVE, then the only S-matrix elements which will be saved
are those for which BOTH the initial and final rotational quantum numbers
correspond to one of the value in the array JOUT
 
If NNOUT is NEGATIVE, any column of the S-matrix for which the initial
rotational quantum number is included in the array JOUT will be printed
 
Changing or setting the value of NNOUT can be done onlybe setting the
JOUT parameter as follows
 
           JOUT,NNOUT,jout(1),jout(2).....jout(NNOUT)
 
  e.g.     JOUT,3,jout(1),jout(2),jout(3)
 
If the number of values of jout entered is less than NNOUT, then NNOUT is
reset automatically. The string of input values should be terminated with
a backslash (\) if other commands follow on the same input line.

3 NUD
 
NUD is the step size for the angular momentum projection in a CS
calculation. Scattering calculations are performed at every NUD value of
NU lying between (and including) NUMIN and NUMAX.  For collisions
involving a molecule with half-integer  spin (flag FLAGHF=.true.) then the
total angular momentum and its projection is half-integer (although the
parameter NU remains integer but is now equal to the projection minus 1/2).
In this case the values of the projection quantum number range from
NUMIN+1/2 to NUMAX+1/2 in steps of NUD.
 
If the flags WRXSEC and/or PRXSEC are .TRUE., then the program
accumulates the contribution to the integral cross sections due to all
partial waves lying between JTOT1 and JTOT2.  If JTOTD=1, this is done by
adding the degeneracy weighted sums of the squares of the T matrix at each
partial wave. In a CS calculation the program similarly accumulates the
contribution to the integral cross sections due to all partial waves lying
between JTOT1 and JTOT2.  If NUD=1, this is done by summing, at each
partial wave, the squares of the T matrix for each value of the projection
index.  This yields a partial cross section. Summation of the partial
cross sections is then done to obtain the integral cross section. If,
however, NUD>1, then the partial cross sections for each calculated value
of NU are summed separately, to obtain integral cross sections indexed in
NU.  The final integral cross section is then obtain from a Simpson's rule
interpolation of these NU-indexed integral cross sections.
 
3 NUMAX
        For CS calculations the parameter NUMAX designates the maximum
value of the projection index nu.  For collisions involving molecules with
half-integer spin, the maximum value of nu is equal to NUMAX+1/2.  If you
are interested in cross sections out of or into a level with rotational
quantum number j, you must set NUMAX at least equal to j.  For CC
calculations the parameter NUMAX can be given any value, but is then set
to 0 by the program.
 
To set or change the value of NUMAX see  information on the INP, SAVE, or 
SET commands.
 
3 NUMIN
 
For CS calculations the parameter NUMIN designates the minimum value of
the projection index nu.  For collisions involving molecules with
half-integer spin, the minimum value of nu is equal to NUMIN+1/2.  NUMIN
should be a positive number (or zero), since the CS S matrices for
negative nu can be related to those for positive nu by symmetry and thus
need not be computed.  If you set NUMIN=0, then you will compute correctly
cross sections for all j->j' transitions with j and j' less than or equal
to NUMAX.  For CC calculations the parameter NUMIN can be given any value,
but is then set to 0 by the program.
 
To set or change the value of NUMIN see the keywords INP, SAVE, or SET 
in the online help
  
3 RCUT

In a typical scattering calculation, a large channel basis is needed only
at small values of Jtot.   As Jtot increases, the centrifugal barrier
prevents the collision partners from penetrating into the strong coupling
region, so the effective distortion of the asymptotic Hamiltonian is much
less.  Considerable time can be saved by dropping channels as Jtot
increases.

This is done in the Hibridon code by means of the parameter RCUT, as
follows:

In the subroutine basis, the centrifugal barrier in each channel,
evaluated at R=RCUT,

	h^2 eli (eli + 1) / (2 m RCUT^2)

where eli is the orbital angular momentum of the ith
channel,  is compared to the internal energy of the channel, ei. If the
centrifugal barrier at R=RCUT is greater than ei, then the channel is
still closed at R=RCUT.  If any of the channels which are open
asymptotically are found to be closed at R=RCUT, then these channels as
well as all the closed channels are dropped from the channel basis.

We have found this to be an effective and simple way of dropping channels
at large Jtot.  The rapidity by which the channels are dropped is
controlled by the magnitude of RCUT.  Obviously, if RCUT is taken equal to
RENDAI - the ending point of the integration - then no channels will ever
be dropped.  A good rule of thumb is to chose initially a small value for
RCUT in the range RENDAI/3 to RENDAI/2 and then increase RCUT only if
necessary.
 
3 RENDAI
 
RENDAI is the end point for the integration, the point at which the S
matrix is determined.  If AIRYFL = .false., then RENDAI is set equal to
RENDLD.
 
3 RENDLD
 
RENDLD is the step size (sector width) in the log-derivative integration.
If LOGDFL = .false., then RENDLD is set equal to RSTART.
 
3 RSTART
 
RSTART is the starting point of the integration.  If the flag LOGDFL is
.FALSE., then the entire integration, from RSTART to RENDAI, is done using
the Airy propagator.  Normally, LOGDFL = .TRUE., and the Log-Derivative
propagator is used from RSTART to RENDLD, and then the Airy propagator
from RENDLD to RENDAI

The parameter FSTFAC controls the ratio between the step size in the
log-derivative integration (given by the parameter SPAC and the step size
in the Airy integration.
 
3 SPAC
 
SPAC is the interval (sector) width in the log-derivative integration.
In fact, the range from RSTART to RENDLD is divided into N steps, where

     N = Int( (RENDLD - RSTART)/SPAC )  + 1
 
Propagation is done using the Manolopoulos propagator [D. E. Manolopoulos
j.chem.phys., 85, 6425 (1986)].  Typically SPAC should be on the order
of 0.1 - 0.25 times the deBroglie wavelength for the system, which can be
determined by the command DEBROGLI.  The interval width SPAC scales as the
square root of the collision energy.
 
3 TOLAI
 
The key parameter TOLAI controls the interval size in the AIRY
propagation. If TOLAI is .ge. 1, then the width of the next interval is
set to be a constant multiple of the present interval size, namely
 
      DRNOW(n+1) = DRNOW(n) * TOLAI
 
Thus, to ensure constant step sizes in the AIRY propagation, set TOLAI =1.
By setting TOLAI .gt. 1, the interval sizes will be monotonically
increasing, so that you will use larger step sizes at long range, where
the potential presumably varies more slowly.  Values of TOLAI ranging
from 1.1 to 1.3 are appropriate for most calculations.
 
If, however, the control parameter TOLAI is set to be .lt. 1, then the
interval sizes are adjusted using crude estimates of the error intoduced
by the linear approximation to the W matrix (see Chapter of the Hibrion
User's Guide or M. H. Alexander, J. Chem. Phys. 81,4510).  These estimates
are designated COFF and CDIAG.  The width of the next interval is adjusted
according to the following alogrithm:
 
      DRNOW(n+1) = DRNOW(n) * (TOLAI/CMAX) ** (1/3)
 
where CMAX=max(COFF,CDIAG). If CMAX < TOLAI, then the interval width is
increased, if CMAX > TOLAI, the interval width is decreased.
 
      In this case (TOLAI .lt. 1) decreasing the value of TOLAI should
increase the accuracy of the integration, although there is no quantitive
relation between the value of TOLAI and the desired accuracy in the S
matrix.
 
      To set or change the value of TOLAI, enter the command
 
            TOLAI= newvalue
 
The default value is TOLAI=1, which forces constant interval sizes in the
AIRY propagation.
 
3 XMU
 
XMU is the collision reduced mass in atomic mass units (C12=1).  Note
that for the collision between an atom A of mass ma and a molecule BC of
mass mbc the collision reduced mass is mu = ma mbc / ( ma + mbc)
 
2 INPUT

All the parameters needed by the Hibridon code are assigned default
values appropriate to the rotationally inelastic collision of Ar with
N2.  You can either redefine the full set of input parameters by setting
them one by one as described in more detail in the PARAMS help file, or
read in a previously defined set of parameters, as described in more
detail below.

Once the general and system parameters have been set, then can be saved
using the SAVE<

        SAVE,{inputfile}

where {inputfile} designates the name of the file in which the parameters
will be stored.  The variable {inputfile} can be lower or upper case, but
is converted internally so that the first character is upper case and all
subsequent characters are lower case. Executing the command

        SAVE

with {inputfile} left blank, will save (overwrite) the current parameters
to the current input file.  The default value of the variable
{inputfile} is Inpt.

To use, in a subsequent calculation, a preexisting set of parameters,
execute the command
 
       INPUT={inputfile}

See also the help files SHOW and CHECK.
 
2 SYSTEM

In addition to the general parameters, input parameters must be supplied
to define the particular collision system to be treated and to control the
choice of channels and internal energies.  Currently the Hibridon package
can accomodate the following collision systems:


    1.  Singlet Sigma Molecule + Spherical Atom
    2.  Doublet Sigma Molecule + Spherical Atom
    3.  Double Pi Molecule + Spherical Atom
    4.  Doublet Pi / Doublet Sigma Molecule + Spherical Atom
    5.  Singlet, Doublet, or Triplet Pi Molecule + Spherical Atom
    6.  Symmetric Top Molecule + Spherical Atom
    7.  Atom in Singlet and/or Triplet P state + Spherical Atom
    8.  1Sigma molecule + 1Sigma molecule
    9.  symmetric top + linear molecule
    10. Collisions of two atoms each in a 2P electronic state
    11. Singlet delta molecule + spherical atom
    12. An atom in a 2P electronic state and a homonuclear diatomic

To view the list of parameters required in these cases, enter the commands

       BASISTYP=n (where n is one of the above numbers)
       SHOW

See also the help under the heading
       SYSTEM BASIS 3 1SIGMA

A general reference for the classic case of collisions of a Singlet Sigma
Molecule with a Spherical Atom is W. A. Lester, Jr., Meth. Comput. Phys.
 10, 211 (1971).

3 2SIGMA

A general reference for the theory of collisions of a molecule in a
Doublet Sigma State with a Spherical Atom is M. H. Alexander, J. Chem.
Phys. 76, 3637 (1982).

The integer system dependent variables are, as follows:

       NRMAX:   maximum case (b) rotational angular momenta N
       NPAR:    number of symmetry doublets included (npar=2 will ensure
                both spin doublets)
       ISYM:    if isym=+1, then the electronic symmetry is sigma-plus
                if isym=-1, then the electronic symmetry is sigma-minus
       IGU:     if igu=+1, then the inversion symmetry is gerade
                if igu=-1, then the inversion symmetry is ungerade
       ISA:     s/a symmetry index, if the molecule is homonuclear
       N0_MAX:  not used

The real system dependent variables are, as follows:

       BROT:    rotational constant
       GSR:     spin-rotation constant
       DROT:    centrifugal distortion constant
       HROT:    second centrifugal distortion constant

3 2PI

A general reference for the theory of collisions of a molecule in a
Doublet Sigma State with a Spherical Atom is M. H. Alexander, J. Chem.
Phys. 76, 5974 (1982).

3 2PI_2SIG 

A general reference for the theory of collisions of a molecule
in a either a Doublet Sigma or a Doublet Pi State with a Spherical Atom is
M. H. Alexander and G. C. Corey, J. Chem. Phys. 84, 100 (1986).

3 SYM_TOP

A general reference for the theory of collisions of a symmetric top
molecule with a Spherical Atom is S. Green, J. Chem. Phys. 64, 3463
(1976); 67, 816 (1979).

3 1_3_P

General references for the theory of collisions of a P state atom in
either a singlet or triplet state with a spherical atom are: M. H.
Alexander, J. E. Straub, and T. Orlikowski, Phys. Rev. A 28, 73 (1983); M.
H. Alexander and B. Pouilly, J. Chem. Phys. 90, 5373 (1989); B. Pouilly
and M. H. Alexander, J. Chem. Phys. 86, 4790 (1987).

3 1SG_1SG

General references for the theory of collisions of two molecules in
singlet-sigma states are: M. H. Alexander and A. E. DePristo, J. Chem.
Phys. 65, 5009 (1976); A. E. DePristo and M. H. Alexander, ibid., 66 1334
(1977); M. H. Alexander, ibid., 73, 5135 (1980)

3 LIN_SYMTOP

A general reference for the theory of collisions of a
symmetric top molecule with a Linear Atom is: C. Rist, M. H. Alexander,
and P. Valiron, J. Chem. Phys. 98, 4662 (1993)

3 2PATOMS

A general reference for the theory of collisions of two atoms one is a 2S
and the second in a 2P electronic state is: M. H. Alexander, B. Pouilly, 
T. Duhoo, J. Chem. Phys. 99, 1752 (1993).

3 1DELTA

A general reference for the theory of collisions of a molecule in
a singlet delta state with a spherical atom is: D. G. Sauder, D.
Patel-Misra, and P. J. Dagdigian, J. Chem. Phys.  91, 5316 (1989)

3 LIN_2PATM

A general reference for the theory of collisions of a linear
molecule with an atom in a 2P electronic state is: M.-L. Dubernet and J.
M. Hutson, J. Chem. Phys. 101, 1939 (1994)


1 SYSTEM
 
The subroutine SYSDAT controls the I/O of all system dependent parameters
as well as the parameters NTERM, LAMMIN, LAMMAX, and MPROJ.  Currently the
Hibridon package contains SYSDAT subroutines for collisions of a
structureless target with molecules in 1 Sigma, 2 Sigma, 2 Pi, 1-3 Pi
electronic states, as well as coupled 2 Sigma and 2 Pi states, and with an
atom in a 1P and/or 3P electronic state.
 
2 LAMMAX
 
In most scattering problems the potential is expanded as
 
     V(R,theta) = V00(R) + Sum1 [ V-lambda(R) function1(theta)]
                         + Sum2 [ V-lambda(R) function2(theta)] + ...
 
where function{i}(theta) can be ordinary or associated Legendre
polynomials, spherical harmonics, etc. The number of different sums is
given by the parameter NTERM (see the entry in this help library).  For
each different sum the minimum value of the expansion index is given by
LAMMIN(i), the maximum values of the expansion index, by LAMMAX(i), and
the order of the associated Legendre polynomials (or spherical harmonics)
by MPROJ(i).  The values of LAMMAX cannot be changed; for any given system
it should be set in the loapot subroutine.
 
2 LAMMIN
 
In most scattering problems the potential is expanded as
 
     V(R,theta) = V00(R) + Sum1 [ V-lambda(R) function1(theta)]
                         + Sum2 [ V-lambda(R) function2(theta)] + ...
 
where function{i}(theta) can be ordinary or associated Legendre
polynomials, spherical harmonics, etc. The number of different sums is
given by the parameter NTERM (see the entry in this help library).  For
each different sum the minimum value of the expansion index is given by
LAMMIN(i), the maximum values of the expansion index, by LAMMAX(i), and
the order of the associated Legendre polynomials (or spherical harmonics)
by MPROJ(i).  The values of LAMMAX cannot be changed; for any given system
it should be set in the loapot subroutine.
 
2 MPROJ
 
In most scattering problems the potential is expanded as
 
     V(R,theta) = V00(R) + Sum1 [ V-lambda(R) function1(theta)]
                         + Sum2 [ V-lambda(R) function2(theta)] + ...
 
where function{i}(theta) can be ordinary or associated Legendre
polynomials, spherical harmonics, etc. The number of different sums is
given by the parameter NTERM (see the entry in this help library).  For
each different sum the minimum value of the expansion index is given by
LAMMIN(i), the maximum values of the expansion index, by LAMMAX(i), and
the order of the associated Legendre polynomials (or spherical harmonics)
by MPROJ(i).  The values of MPROJ cannot be changed; for any given system
they are set in the system input subroutine (sy1sg, sy2sg, ...)
 
2 BASIS
 
3 1_Sigma
 
The basis subroutine BA1SG determines the channel list, quantum numbers,
internal energies, and coupling matrix elements for collisions of a
molecule in a 1-Sigma electronic state with a structureless atom.  For a
reference see W. A. Lester, Jr., Meth. Comput. Phys. 10, 211 (1971).

To print out the list of system dependent parameters, enter
     BASISTY=1 and then
     SHOW then typing
     save=test.inp will print out a sample input file called Test.inp,
which you can then examine

the definition of the system dependent parameters is as follows:
     NTERM (the number of potential surfaces involved:  this should be 1
            in this case).  This parameter can not be changed
     VIBMN: vibrational quantum number of lowest included vibrational
            level
     VIBMX: vibrational quantum number of highest included vibrational
            level

            (for a pure rotational problem, set VIBMN and VIBMX equal
             to 1 then follow input data for each vibrational level, as
follows:
     BROT, DROT, HROT:  rotational constants for each vibrational level
                   E(j)=brot*j*(j+1)-drot*[j*(j+1)]^2+hrot*[j*(j+1)]^3
     EVIB: vibrational term (energy of j=0 level) for this vibrational
           manifold

3 2_Sigma
 
3 1,2,3_PI3 3 2_Pi
 
The basis subroutine BA2PI determines the channel list, quantum numbers,
internal energies, and coupling matrix elements for collisions of a
molecule in a 2-Pi electronic state with a structureless atom.  The
molecular Hamiltonian is that given in M. H. Alexander and G. C. Corey, J.
Chem. Phys. 84, 100 (1986); the coupling potential matrix elements are
given in M. H. Alexander, Chem. Phys. 92, 337 (1985).

To print out the list of system dependent parameters, enter
     BASISTY=3 and then
     SHOW then typing
     save=test.inp will print out a sample input file called Test.inp,
which you can then examine

the definition of the system dependent parameters is as follows:
     NTERM (the number of potential surfaces involved:  this should be 2
            in this case).  This parameter can not be changed
     JMAX:  the maximum rotational quantum number: this is an integer,
            the actual range of j is 0.5 .le. j .le. JMAX+0.5
     IGU:   permutation inversion symmetry of electronic state
              IGU=1 for gerade states, IGU=-1 for ungerade states
              for heteronuclear molecules IGU should be +1
     ISA:   s/a label for molecular states. if ihomo=.true. then only
              s states will be included if ISA=1 and only a states if
              ISA=-1
     NPAR:  number of symmetry doublets included (NPAR=2 will ensure
              both lambda doublets; NPAR=1, just eps=1 levels, NPAR=-1,
              just eps=-1 levels
     BROT:  rotational constant in cm-1
     ASO:   spin-orbit constant in cm-1
     P, Q:  lambda-doubling constants cm-1

then follow input data for each vibrational level, as follows: 3 1-3_P The
basis subroutine BA13P determines the channel list, quantum numbers,
internal energies, and coupling matrix elements for collisions of an atom
in a 1P and/or 3P electronic state with a structureless atom. General
references are: M. H. Alexander, J. E. Straub, and T. Orlikowski, Phys.
Rev. A 28, 73 (1983) B. Pouilly and M. H. Alexander, J. Chem. Phys. 86,
4790 (1987). M. H. Alexander and B. Pouilly, J. Chem. Phys. 90, 5373
(1989)

To print out the list of system dependent parameters, enter
     BASISTY=7 and then
     SHOW then typing
     save=test.inp will print out a sample input file called Test.inp,
which you can then examine

the definition of the system dependent parameters is as follows:
     NTERM (the number of potential surfaces involved:  this should be 1
            in this case).  This parameter can not be changed
     NSTATE:   number of electronic states included
               0:   just singlet state
               1:   just triplet state
               2:   both singlet and triplet state

     IPOL:     selects whether 1P1e states are combined to form
               proper 1Pie and 1Sigmae combinations [see B. Pouilly
               and M. H. Alexander, Chem. Phys. 145, 191 (1990)]
               0:   normal case, no linear combinations made
               1:   linear combinations made (just for JLPAR = -1)

     E-3P0, E-3P1, E-3P2:  energies of 3P spin-orbit levels
     E-1P1:    energy of 1P level relative to lower 3P levels
     
     now follow parameters for morse-spline-van der waals description
        of potential curves; see B. Pouilly and M. H. Alexander,
        J. Chem. Phys. 86, 4790 (1987).

     DE(3PI), DE(3SG), DE(1PI), DE(1SG):  Morse De
     RE(3PI), RE(3SG), RE(1PI), RE(1SG):  Morse Re
     BE(3PI), BE(3SG), BE(1PI), BE(1SG):  Morse Beta
     RL(3PI), RL(3SG), RL(1PI), RL(1SG):  Onset of Long-range behavior
     C(3PI), C(3SG), C(1PI), C(1SG):      Coefficent of R-6

     CMIX:     extent of mixing between 1P1 and 3P1 levels; the mixing
               angle in a 2x2 rotation is theta=acos(CMIX)
 
3 2_SigPi
 
 
2 SUBROUTINES
 
3 SYSDAT
 
The first line of the subroutine SYSDAT must be
 
      subroutine sysdat (irpot, readpt, iread)
 
The following instructions must be followed in order to interface your
SYSDAT subroutine with the rest of the program
 
the program must create the following four common blocks:
 
      common /cobspt/ lammin(20), lammax(20), mproj(10)
 
      common /cosysr/ isrcod, rvar1, rvar2, ... rvar{isrcod} where isrcod
is the total number of real system specific variables
 
      common /cosysi/ nscode, isicod, nterm, ivar1, ivar2, ivar3, ivar4,
                      ... ivar{isicod-1}
 
where isicod is the total number of integer system specific variables,
including nterm, but exclusive of lammin, lammax, and mproj.  nscod is the
total number of system specific variables including lammin, lammax, and
mproj. Thus nscod = isrcod + isicod + 3.
 
      common/cosys/ scod(nscod)
 
which contains the names (in upper case) of all the system dependent
variables, including, specifically, LAMMAX, LAMMIN, MPROJ, NTERM, in the
characater*8 array scod. The length of this array must be dimensioned
nscod.
 
The elements of the SCOD array must be defined in the SYSDAT subroutine
as follows
 
       SCOD(1) = 'NTERM'
       SCOD(2) = '{IVAR1}',  where {IVAR1} is the name of the first integer
                             system dependent variable
       SCOD(3) = '{IVAR2}'
       SCOD(isicod) = '{RVAR(isicod-1)}'  the last system dependentinteger
                                          variable exclusive of NTERM
       SCOD(isicod+1) = '{RVAR1}'  where {RVAR1} is the name of the first
                                   real system dependent variable
       SCOD(isicod=2) = '{RVAR2}'
       SCOD(isicod+isrcod) = '{RVAR(isrcod)}'  the last real system
                                               dependent variable
       SCOD(isicod+isrcod+1) = SCOD(nscod-2) = 'LAMMIN'
       SCOD(isicod+isrcod+2) = SCOD(nscod-1) = 'LAMMAX'
       SCOD(isicod+isrcod+3) = SCOD(nscod) = 'MPROJ'
 
 
 
After reading these instructions and examining the SYSDAT subroutines
for supplied with the Hibridon package, you should be able to write a
SYSDAT subroutine for other systems.
 
3 BASIS
 
For available basis routines, see SYSTEM BASIS. If you are clever, you
can add other basis routines.
 
1 FLAGS

The scattering calculation is controlled by a number of logical
flags
 
2 CHANGING 

To change values of flags, enter the command
 
       FLAG1=VAL1,FLAG2=VAL2  etc.
 
different flags can be separated by commas or by semicolons
 
The Hibridon input driver is not case sensitive, so flags can be entered
in either upper or lower case.  Flags may be abbreviated, although you
will have to re-enter the flag if there is an ambiguity.
 
2 DEFAULTS
 
The default flags are:
 
AIRYFL=T    BASTST=F    BATCH =F    BOUNDC=F    CHLIST=T    CSFLAG=F    
FLAGHF=F    FLAGSU=F    IHOMO =T    IPOS  =F    LOGDFL=T    NOPRIN=F    
NUCROS=F    PHOTOF=F    PRAIRY=F    PRLOGD=F    PRPART=F    PRSMAT=F    
PRT2=  T    PRXSEC=T    READPT=F    RSFLAG=F    T2TEST=F    TWOMOL=F    
WAVEFL=F    WRPART=F    WRSMAT=T    WRXSEC=F

2 AIRYFL
 
      The flag AIRYFL should be set
         .TRUE.  if the Airy integrator is to be used
         .FALSE. if the Airy integrator is not to be used
 
      If AIRYFL is .FALSE., then the parameters which govern the Airy
integration (AIRYFL, TOLAI, RINCR and RENDAI) are assigned the following
values:
 
        PRAIRY = .FALSE.
        TOLAI = 1.
        RINCR = 1.
        RENDAI = RENDLD
 
Note that the last assignment insures that if AIRYFL = .FALSE., then the
CC equations are integrated from RSTART to RENDLD only.
 
Warning:  do not set LOGDFL and AIRYFL both .FALSE.

2 BASTST
 
Setting the flag BASTST = .TRUE. allows the user to check the output of
the subroutine BASIS without carrying out a full integration of the
coupled equations. If BASTST = .TRUE., then after the command RUN, the
program returns control to the user after calling the subroutine BASIS.
 
N.B.  If the FLAG NOPRIN is set .TRUE. the output from BASTST may be 
not be complete

2 BATCH
 
To run the Hibridon package in batch mode, set up a run stream with BATCH
as the first line.  This supresses the input line query "Hibridon>". All
other commands will be read from the run stream and executed.   An example
would be:
 
       BATCH
       PRINTS,job1          print, into the log file, S matrices from the
                            file Job1.smt (see 'help' for the command
                            PRINTS)
       INP={input}          read parameters and flags from file {input}
       OUT={outfile}        file {outfile} will be opened as the output
                            file
       JOB={jobname}        S matrices, partial cross sections, integral
                            cross sections will be saved in files
                            {jobname}.ext where ext =.smt, pcs, ics, etc
       RSTART=3.5           reset the parameter RSTART
       RUN                  run a scattering calculation with the new
                            parameter set
       EXIT
 
 
Note that on many systems it may be necessary to specify a pathname as
well as a file name for {input}, {outfile}, {jobname} unless the
corresponding files are located in your current directory.

2 BOUND
The Hibridon code can determine energies and eigenvectors of
weakly-bound states as well as scattering and photodissociation cross
sections. This involves only a slight change in the methodology. To
determine bound-state energies, set 

      BOUNDC = .TRUE. 

This will invoke a variational calculation of all bound-state levels
using the distributed Gaussian method of I. P. Hamilton and J. C. Light 
[J. Chem. Phys.  84, 306 (1986)]. The R-dependence of the wavefunction will 
be expanded in a set of Gaussian functions, centered at R=Rm on a
regularly spaced grid, with a scale parameter alpha which is the same 
for each function.

This set of functions is defined by several of the Hibridon input
parameters, as follows: 

      R1: smallest value of Rm 
 
      R2: largest value of Rm 

      SPAC: spacing between successive values of Rm 

      C: parameter which determines the exponential scale factor (alpha) of 
      the distributed Gaussian functions, with  

      EIGMIN: lower limit on the minimum allowed eigenvalue of the overlap
      matrix. If the minimum eigeinvalue is less than this value, the
      parameter C should be increased. 

      DELR, DR: The matrix elements of W(R) are evaluated by a Simpson's
      rule integration extending from R1 - DELR to R2 + DELR in steps of
      DR. 

Reasonable starting values for these parameters are: 

      SPAC: 0.4 

      C: 0.5

      EIGMIN: 1.e-6 

      DELR: 1 

      DR: 0.1 

If the flag CSFLAG is .TRUE., then a bound-state calculation will be
carried out within the centrifugal decoupling approximation including only
channels for which the projection of the total angular momentum along R is 
equal to 
     NUMIN, (if FLAGHF = .FALSE.)

     NUMIN + 0.5, (if FLAGHF = .TRUE.) 


If BOUNDC = .FALSE. (the default), then a scattering or photodissociation
calculation is performed 

2 CHLIST
 
      If the flag CHLIST = .TRUE., then the channels included are listed
at every value of Jtot (or L-bar).  If CHLIST = .FALSE., then the channels
are listed only at the first value of Jtot. When the number of channels is
large, you will certainly want to suppress printing the list of channels.
 
2 CSFLAG
 
If CSFLAG = .true., then a coupled states calculation is performed.
Otherwise the close-coupling method is used.
 
2 FLAGHF
 
      The flag FLAGHF must be set .TRUE. if the angular momentum of the
molecule is half-integer.
 
2 FLAGSU
 
To treat collisions of a molecule with a surface set FLAGSU = .TRUE.  In
this case the squares of both the off-diagonal as well as the diagonal
elements of the T-matrix are equal to the squares of the corresponding
S-matrix elements.  FLAGSU should be set .FALSE. for all gas-phase
problems.
 
For collisions of molecules with surfaces, the orbital angular momentum
is zero, and doesn't couple with the molecular rotational angular
momentum. Thus if FLAGSU = .TRUE., then you must also set CSFLAG = .TRUE.,
JTOT1 = 0, and JTOT2 = 0.  Otherwise the program will abort with a
diagnostic message.
 
2 IHOMO
 
If IHOMO = .TRUE., then the calculation is assumed to involve a
homonuclear molecule.

2 IPOS

The flag IPOS controls the width of many of the matrices which are
printed out by the Hibridon code.  If
      IPOS = .true., printed matrices will be formated for a 
              132 character display or printer
      IPOS = .false., printed matrices will be formated for an 
              80 character display or printer
 
2 LOGDFL
 
      The flag LOGDFL should be set
         .TRUE.  if the Logd integrator is to be used
         .FALSE. if the Logd integrator is not to be used
 
      If LOGDFL is .FALSE., then RENDLD is set equal to RSTART
      Thus the CC equations are integrated from RSTART to RENDAI

Note that the width of the first Airy interval is equal to SPAC*FSTFAC.
Thus, even if LOGDFL is set .FALSE., SPAC should be assigned a non-zero
value.

Warning:  do not set LOGDFL and AIRYFL both .FALSE.

2 NOPRIN
 
If NOPRIN = .TRUE., then most printing is suppressed.  This is useful in
production runs.  Note that setting NOPRIN = .t. also sets the print
control parameter IPRINT to -1
 
2 NUCROS

If NUCROS = .FALSE., then in coupled-states calculation all values
     of the projection index are summed for each value of L-bar
   NUCROS = .TRUE., then, the summation over the projection index
     is evaluated by interpolating at every NUD values

2 PHOTOF
 
If PHOTOF = .FALSE., then inelastic scattering boundary conditions are
assumed.
 
If PHOTOF = .TRUE., then photodissociation boundary conditions are
assumed.
 
4 BOUNDARY_CONDITIONS
 
Asmptotically, in the case of inelastic scattering, the wavefunction is
 
          exp[-i(kr-l pi/2)] - S exp[i(kr-l pi/2)]
 
whereas in the case of photodissociation,
 
          exp[-i(kr-l pi/2)] S - exp[i(kr-l pi/2)]
 
this is equivalent to, in the case of inelastic scattering
          - yl (1-Sr) + jl Si + i [-jl(1+sr)+yl si]
 
and, for photodissociation,
 
          yl (1-sr) + jl si + i [-jl(1+sr)-yl si]
 
2 PRAIRY
 
      If the flag PRAIRY is set .TRUE., then at each step of the Airy
integration the values of RNOW (the mid-point of the current interval),
DRNOW (the width of the current interval), CDIAG (the maximum estimated
diagonal correction), and COFF (the maximum estimated off-diagonal
correction) are printed out.  The definition of CDIAG and COFF is
explained in M. H. Alexander, J. Chem. Phys. 81, 4510 (1984).

2 PRLOGD
 
      If the flag PRLOGD is set .TRUE., then the log-derivative matrix is
printed out after both the Logd and Airy propagation steps.  Also the K
matrix is printed out prior to the determination of the S matrix.
 
2 PRPART
 
If PRPART = .TRUE., then partial cross sections will be printed out to
the regular output file (see the entry OUTPT in the Hibridon help
library). In the case of CS calculations the contribution of each value of
nu is also printed.  The columns of the printed matrix of partial cross
sections correpond to the initial state and the rows, to the final state.
 
Partial cross sections will be written only for transitions for which
BOTH the intial and final J are specified in the array JOUT and for which
BOTH the initial and final index are specified in the array INDOUT

The printing of partial cross sections to a separate file is controlled by
the flag WRPART.

 
2 PRSMAT
 
If PRSMAT = .TRUE., then the real and the imaginary S-matrix elements
will be printed out at the end of the regular output file. To print the S
matrix to a separate file, set the flag WRSMAT = .TRUE.
 
2 PRT2
 
If PRT2 = .TRUE., then the square modulus of the T matrix will be printed
out at the end of the regular output file.
 
2 PRXSEC
 
If PRXSEC = .TRUE., then integral cross sections will be printed out at
the end of the regular output file.  Integral cross sections are obtained
by summing over all partial cross sections from JTOT = JTOT1 to JTOT =
JTOT2, inclusive.  If JTOTD > 1, a trapezoidal interpolation scheme is
used to approximate this sum.  The columns of the printed matrix of
integral cross sections correspond to the initial state and the rows, to
the final state.
 
In the case of CS calculations the integral cross sections represent a
sum over all the values of the CS projection index nu lying between NUMIN
and NUMAX, inclusive.  Only transitions into and/or out of rotational
levels with J .le. NUMAX will be converged.  In general, cross sections
for only these transitions are printed.  However, setting IPRINT = 2
forces printing of all the cross sections, even those which are not
converged with respect to the sum over the projection index nu.
 
In the case of CC calculations, to obtain integral cross sections summed
over both values of the parity index JLPAR, set JLPAR = 0.
 
The printing of integral cross sections to a separate file is controlled
by the flag WRXSEC.

2 READPT

If READPT = .TRUE., then the potential subroutine is expecting to
read data stored in a file whose name is given on the last line of
the INPUT data file.

If READPT = .FALSE., then the last line of the INPUT data file is
ignored.
 
2 T2TEST
 
If T2TEST = .TRUE., then just the first 2 columns of the square modulus
of the T-matrix will be printed out at the end of the regular output file.
To print the square modulus of the full T-matrix to the regular output
file, set the flag PRT2 = .TRUE.
 
 
2 TWOMOL
 
      The flag TWOMOL should be set
        .TRUE.  if the collision involves two molecules, both with
internal
                structure.
        .FALSE. if the collision partner is a structureless particle.
 
2 WAVEFL
 
      If WAVEFL = .TRUE., then the transformation matrices are computed
for the subsequent determination of the scattering wavefunction.  These
are written to the file {jobname}.wfu.  Subsequent calculation of the
wavefunction is controlled by the command PSI.  Subsequent calculation of
the incoming and outgoing fluxes is controlled by the command FLUX.
 
      The total storage required is (Nlog + 2Nairy) x Nch^2 + 3Nairy x
Nch, where Nlog and Nairy are the number of LODG and AIRY integration
steps and Nch is the number of channels.
 
2 WRPART
 
If WRPART = .TRUE., then partial cross sections will be printed out to a
separate file {jobname}n.pcs where n designates the value of the energy,
e.g. at the first energy the partial cross sections will be in the file
{jobname}1.pcs, etc.  In the case of CS calculations the stored partial
cross sections are summed over all the values of the CS projection index
nu lying between NUMIN and NUMAX, inclusive.

Partial cross sections will be written only for transitions for which BOTH
the intial and final J are specified in the array JOUT and for which BOTH
the initial and final index are specified in the array INDOUT
 
Subsequent printing of partial cross sections contained in the file
{jobname}n.pcs can be accomplished with the command PARTC

      The printing of partial cross sections to the regular output file is
controlled by the flag PRPART.
 
2 WRSMAT
 
If WRSMAT = .TRUE., then selected (or all) S matrix elements will be
printed out to a separate file {jobname}n.smt, where n designated the
value of the energy, e.g. at the first energy the S-matrix elements will
be in the file {jobname}1.smt, etc.  The subset of S-matrix elements which
will be printed are defined by the set of rotational quantum numbers
contained in the array JOUT
 
If NNOUT is POSITIVE, then the only S-matrix elements which will be saved
are those for which BOTH the initial and final rotational quantum numbers
correspond to one of the value in the array JOUT
 
If NNOUT is NEGATIVE, any column of the S-matrix for which the initial
rotational quantum number is included in the array JOUT will be printed
 
2 WRXSEC
 
If WRXSEC = .TRUE., then integral cross sections will be printed out to a
separate file {jobname}n.ics where n designates the value of the energy,
e.g. at the first energy the integral cross sections will be in the file
{jobname}1.ics, etc.  Integral cross sections are obtained by summing over
all partial cross sections from JTOT = JTOT1 to JTOT = JTOT2, inclusive.
If JTOTD > 1, a Simpson's rule based interpolation scheme is used to
approximate this sum.
 
In the case of CS calculations the integral cross sections represent a
sum over all the values of the CS projection index nu lying between NUMIN
and NUMAX, inclusive.
 
In the case of CC calculations, to obtain integral cross sections summed
over both values of the parity index JLPAR, set JLPAR = 0.
 
The contents of the file {jobname}n.ics can be examined or printed using
the command PRINTC.
 
The printing of integral cross sections to the regular output file is
controlled by the flag PRXSEC.
 
 
1 FILES

All files created by the Hibridon package are given lower case names with
the first character in upper case.  This can be a possible source of
confusion under UNIX (or other case sensitive) operating systems.

2 INPUT
 
All the parameters are assigned default values.  To define the entire set
of parameters enter the command
 
       INPUT={inputfile}
 
where the file {inputfile} has been created using an editor or by the
SAVE command.  Note that the file name {inputfile} can be entered in
either lower or upper case, but is converted internally to lower case with
the first character in upper case.  If the file {inputfile} does not
exist, you will be so notified.
 
2 JOB
 
All files written during a calculation, except the main output file, are
designated {jobname}n.extension, where n denotes the energy at which the
calculation has been carried out (n=1 for first energy, n=2 for second
energy, etc.) and the file extension can be
 
       'ics' for integral cross sections (created if the flag WRXSEC is
             set .true. and a necessary prerequisite to the command
             PRINTC)
       'xsc' for selected integral cross sections (created by the command 
             PRINTC)
       'smt' for S matrix elements (created if the flag WRSMAT is .true.
             or by the command OPTIMIZE; a necessary prerequisite
             to the commands PRINTS and DIFCRS
       'dcs' for differential cross sections (created by the command DIFCRS)
       'pcs' for partial cross sections (see flag WRPART)
       'tcs' for tensor cross sections (as output of the command TENXSC)
       'psc' for selected partial cross sections (as output of the 
             command PARTC)
       'tcb' for a table of tensor cross sections (as output of the command
             TENXSC and necessary prerequisite for the command MRCRS)
       'mcs' for a table of m-resolved integral cross sections (as output
             of the command MRCRS)
       'wfu' for wavefunction transformation matrices (created if the flag 
             WAVEFL is set .true. and a necessary prerequisite to the commands
             FLUX, EADIAB, and PSI)
       'psi' for scattering wavefunction (created by the command PSI)
       'flx' for fluxes or adiabatic energies (as output of the commands FLUX
             and eadiab)
 
The jobname is set by the variable
 
       JOB={jobname},
 
where {jobname} is a character string (not in quotes). The default value
of {jobname} is Job.

Remember both {jobname} and the file extensions are converted internally
to lower case with the first character in upper case.

All of the above files are formatted, EXCEPT the .smt, .tcb, and .wfu
files which are unformatted (binary).

2 OUTPUT
 
The Hibridon code writes all output, except for the specialized files
discussed in the in the JOB help entry, to a main output file (fortran
logical unit 9, a sequential formatted file).  In addition some output is
directed to stdout (fortran logical unit 6).  The name of the main output
file is initally set to Outpt.  This name can be changed by the
command
 
       OUT={outname},
 
where {outname} is a character string (not in quotes).
 
N. B. On some machines existing output files will be overwritten unless
you give them a new name.

2 SAVE

Changes made to the currently accessed input file can be saved using the
command.
 
        SAVE

Similarly, the current set of parameters and flags can be saved to a new
file by the command

        SAVE={filename}
 
Remember, {filename} can be lower or upper case, but is converted
internally so that the first character is upper case and all subsequent
characters are lower case.

Initially the default inputfile is named Inpt
 
The SAVE command is useful for creating updated input data files.

1 COMMANDS
 
A number of commands are available to direct the operation of the
Hibridon code
 
2 CHECK
 
The command CHECK is used to check the input data for inconsistencies in
values of any parameters or flags.  Note that this is a necessary but not
sufficient test of the validity of your input data.
 
2 DEBROGLI
 
If you enter the command DEBROGLI, The deBroglie wavelength for your
system will be printed out. This is helpful in estimating the value of the
input parameter SPAC, which controls the accuracy of the LOGD integration
and which typically should be approx. 0.1 - 0.25 of the deBroglie
wavelength.
 
 
2 DIFFER
 
The command
 
          DIFFER,{jobnam1},{jobnam2},iprint,ienerg,threshold
 
requests a comparison of two S matrices, or of the the moduli of two S
matrices, the first in file {jobnam1}n.smt the second in file
{jobnam2}n.smt.  Here n denotes the value of the parameter ienerg (see
below).  In order to create these S-matrix files, you must have carried
out the prior calculation with the flag WRSMAT = .TRUE.
 
The amount of output is controlled by the parameter IPRINT, as follows:
 
      IPRINT=0, then only the values of the average relative and largest
                relative differences are printed.
      IPRINT=1, then the values of the average relative, average
                absolute, largest relative, and largest absolute
                differences are printed.
      IPRINT=2, all the S-matrix elements are printed followed by the
                values of the average relative, average absolute,
                largest relative, and largest absolute differences.
 
All S-matrix elements smaller than {thresh} are ignored in the
comparison. If {thresh} is a positive number (or zero), the comparison and
the output involves the moduli of the S-matrix elements. If {thresh} is
negative, the comparison and the output involve both the real and the
imaginary parts of the S matrix.
 
Both {filename1} and {filename2} must be specified
 
3 DEFAULT_VALUES
 
The default values for the comparison are:
      IPRINT=1      IENERG=1      THRESH=1.E-5
 
3 Example
 
As an example, the command
 
          DIFFER,oldjob,newjob,0,2
 
would request a comparison between the moduli of the S-matrices in files
oldjob2.smt and newjob2.smt
 
 
2 DIFCRS
 
To compute differential cross sections, product alignments, m-dependent
cross sections, and steric (oriented) cross sections using previously 
calculated S matrices, enter the command
 
          
DIFCRS,{jobname},j1,in1,j2,in2,ang1,ang2,dang,ienerg,jtotend,ipr,
                 mflag,stflag,alpha,beta
 
where
      {jobnam}:  the jobname under which the S-matrices have been
                 stored {jobname}n.smt.  Here n denotes the value of
                 the parameter ienerg (see below). These S matrices must
                 have been previously generated using JLPAR=0 (these
                 generates S matrices for both parities, JTOTD=1 (ensuring
                 the determination of S matrices at every partial wave),
                 and WRSMAT=T (ensuring that the S matrices are written to
                 file {jobname}.smt ).
                 The default value of {jobname} is the value you have set
                 by the command JOB, or, if no value has been set,
                 {jobname}=JOB
 
      j1, in1:   rotational quantum number and additional index for
                 the initial state
      j2, in2:   rotational quantum number and additional index for the
                 final state
      ang1,ang2: initial and final angle (in degrees)
      dang:      step size for scan through angles. N.B. the program is
                 limited to 360 different angles at one time
      ienerg:    the value of the energy for which the differential
                 cross section is computed. i.e. if ienerg=2, then the
                 second energy S-matrices [ {jobname}2.smt ] are used
      jtotend:   the maximum value of Jtot included in determining the
                 scattering amplitude.  N. B.  This can not be larger
                 than the variable JTOT2 used in the initial calculation
      ipr:       if ipr = 0 (the default) the degeneracy-averaged
                 differential cross and product alignments are calculated
                 but NOT printed to the normal output file
                 but only to the file {jobnam}n.dcs
                 if ipr .ne. 0, the differential cross sections and
                 product alignments are also printed to the normal output file
      mflag:     if mflag = 0 (the default) only the degeneracy-averaged
                 differential cross section and product alignment is calculated
                 if mflag .ne. 0, then all m->m' differential cross
                 sections are calculated and printed.  quantization is in 
                 the collision frame, where the initial relative
                 velocity vector defines the z axis. ALSO, if mflag
                 .ne.0 , the integral m->m' cross sections are 
                 determined, by integration from ang1 to ang2 in steps
                 of dang. 
      stflag:    stflag = 0 is the default.  if stflag .ne. 0, then
                 heads and tails steric cross sections are calculated
                 (see M. H. Alexander, Faraday Discuss. 113,  (1999).
                 This is only allowed if flaghf = .true. and ibasty = 3 
                 (doublet pi).  If stflag .ne. 0, then the following
                 two parameters must be defined:  
      alpha      parameters which define the mixture of e and f lamda-
      beta       doublet states in the "heads" or "tails" orientation.  
                 NB:  the "heads" state for mj-initial negative is 
                 defined as:  
                       | heads > = alpha |jme> - beta |jmf>
                 and for mj-positive as
                       | heads > = alpha |jme> + beta |jmf>
 
2 EADIAB
	The command EADIAB  requests the determination of the adiabatic
energies as a function of R.  These are defined by Eq. (6) of the INTRO
help file. The command line syntax
is

        FLUX,{jobname}
where:

{jobnam}:        The jobname under which the wavefunction information
                 from the previous calculation is stored, as the file
                 {jobname}.wfu<. In order to create this file, the
                 previous calculation must have been carried out with the
                 flags WAVEFL and AIRYFL both set .TRUE.

The only adiabatic energies which are written out are those which
correlate adiabatically at large R with the interal states of the
collision partners whose rotational angular momenta and additional indices
are specified in the arrays JOUT and INDOUT.

Specifically, adiabatic energies are given for each channel for which

         J(i) = JOUT(i)

and for which the vector element INDOUT(i) corresponds to the quantum
number L and the extra index IND of the desired channel packed into a
single array as follows:

         INDOUT(i) = sign[IND(i)]*[100  L(i) + abs(IND(i))]

The asymptotic energy ordering of the internal states can be determined
by running with the flag BASTST set .TRUE.

	The adiabatic energies are determined at all values of R lying
between RENDLD and RENDAI, with the grid size and spacing controlled by
the same parameters which govern the AIRY integration, namely SPAC,
FSTFAC, TOLAI, and RINCR.

	Highly localized avoided crossings of the adiabatic curves often
occur.  Use of a fine grid in R is the only way to interpret properly the
adiabatic energies in these cases

2 FLUX

     The command FLUX requests the determination of the collision or
photodissociation fluxes as a function of R using data stored during a
previous calculation.  For more details on the definition and
determination of the flux see:
 
M. H. Alexander, J. Chem. Phys. <b>95</b>, 8931 (1991); 96, 6672 (1992);
D. E. Manolopoulos and M. H. Alexander, J. Chem. Phys. 97, 2527 (1992); M.
H. Alexander, C. Rist, and D. E. Manolopoulos, J. Chem. Phys. 97, 4836
(1992).

The command line syntax is

    FLUX,{jobnam},IFLUX,{additional variables}

(upper or lower case), where the input parameters are:

{jobnam}:        The jobname under which the wavefunction information
                 from the previous calculation is stored, as the file
                 {jobname}.wfu<. In order to create this file, the
                 previous calculation must have been carried out with the
                 flags WAVEFL and AIRYFL both set .TRUE. 

IFLUX = 
                 1    for a determination of the fluxes in the diabatic
                      (asymptotic) basis
                -1    for a determination of the fluxes in the locally
                      adiabatic basis
                 2    for a determination of the adiabatic energies (see
                      also the command EADIAB)
                -2    for fluxes summed over the sign of the additional
                      channel index
                 3    for fluxes in coordinate space
                 4    for determination of the transformation matrix C(R), 
                      defined in Eq. (6) of the INTRO help file

   if IFLUX = -1,1,-2 then {additional variables} designates

     THRESH,IPRINT,DAMP,INITIAL-J,INITIAL-L,INITIAL-IND

THRESH:          if the local wavevector in any channel is less than
                 THRESH, then the wavefunction component associated with
                 this channel is killed off.  The default value of
                 THRESH is 0 for scattering calculations, and
                 -1.e+9 for photodissociation calculations
IPRINT:          Normally, fluxes are not printed inside of any
                 energetically closed region.  To print these out
                 set IPRINT not equal to zero.  The default value of
                 IPRINT is 0 for scattering and 1 for photodissociation
DAMP:            the damping factor for closed channel components (the
                 default value is one) 
INITIAL-J:       the rotational angular momentum of the initial channel
INITIAL-L:       the orbital angular momentum of the initial channel
INITIAL-IND:     the value of the additional index of the initial channel

n.b. for photodissociation calculations, the values of INITIAL-J,
        INITIAL-L, AND INITIAL-IND are ignored.

Thus the standard input for a photodissociation calculation would be
     FLUX,JOB,IFLUX

In addition, channel fluxes are printed out ONLY for those channels which
are specified in the arrays JOUT and INDOUT.

   if IFLUX = 3 then the {additional variables} are

    NR,RMIN,DR,THRESH,IPRINT,DAMP

NR:               abs(NR) is the number of coordinate space points at
                  which flux is to be determined
                  if NY > 0, then the calculated flux is a sum over the 
                    flux associated with all channels with positive values
                    of the additional index
                  if NY < 0, then the calculated flux is a sum over the 
                    flux associated with all channels with negative values
                    of the additional index
                 
RMIN:             minimum value of the internal coordinate 

DR:               step size in the internal coordinate

THRESH:           as defined above 
IPRINT:           as defined above
DAMP:             as defined above

Coordinate state fluxes will be determined for all values of the  internal
coordinate r ranging from RMIN to RMIN+(NR-1)DR


   if IFLUX = 4 then the {additional variables} are

R:                the value of R at which the asymptotic -> locally
                  adiabatic transformation matrix is to be printed

If R is negative, then the asymptotic -> locally adiabatic transformation
matrix is printed out at all values of R

2 INTCRS
The command INTCRS allows you to determine (and print out) integral cross
sections from a previously calculated set of S matrices which have been
written to file {jobname}n.smt

The command line syntax is
 
          INTCRS,{jobname},ienerg,JTOTF
 
where
      {jobnam}:  the jobname under which the S matrices have been stored
                 as {jobname}n.smt.  Here n denotes the value of the 
                 parameter ienerg (see below).  S matrix (.smt) files can
                 be generated by setting WRSMAT=.true.  The default value
                 of {jobname} is the value of the jobname you have set
                 with the command JOB =, or, if no value has been set,
                 then {jobname}=Job
      ienerg:    the value of the energy for which the integral cross
                 sections are to be computed. i.e. if ienerg=2, then the
                 second energy second energy S-matrix file {jobname}2.smt 
                 is used.  The default value of inerg is 1
 
      JTOTF:     the largest value of the total angular momentum used in
                 the determination of the integral cross sections.  If this
                 value is larger than the value of JTOT2 used to generate
                 the S matrices, then the range of values of JTOT used to
                 generate the integral cross sections extends only up to 
                 JTOT2
 
2 MINPOT
 
The command MINPOT invokes a simple search procedure to find the minimum
in the isotropic potential VV0(R).
 
2 MRCRS

The command MRCRS allows you to calculate m-state resolved integral
cross sections, as defined by Eqs. (14) and (28) of B. Follmeg, P. Rosmus, 
and H.-J.  Werner, J. Chem. Phys. 93, 4687 (1990).  The command line is

        MRCRS,JOB,IENERG (upper or lower case), where the input parameters are:
 
        JOB, IENERG:  The program searches for tensor cross sections in the 
              file Job{ienerg}.tcb, where IENERG is an integer
              IENERG=1,2,,etc.

This command must have been preceded by the command TENXSC, which
creates the table of tensor cross sections used. Note that the
m-resolved cross sections for a transition from rotational level J to J'
will be correct only if the parameter KMAX in the TENXSC command is

        KMAX .ge. J+J'

Also, MRCRS invokes the calculation of the m-state resolved cross
sections appropriate to a Legendre expansion of a cylindrically
symmetric  distribution of the relative velocity vectors with respect to 
the z-axis. Again, the calculated  Legendre terms will be correct only
for values of lambda (the Legendre index) which are .le. the parameter
LAMMAX in the previous invocation of TENXSC

The calculated m-resolved cross sections are printed out to the 
file Job{ienerg}.mcs as well as to the standard output
 
2 TESTPOT
2 OPTIMIZE
 
The OPTIMIZE command allows the user to determine easily optimal values
for the following system independent parameters which govern the accuracy of
the Hibridon code:
    
   FSTFAC, RCUT, RENDAI, RENDLD, RINCR, RSTART, SPAC, TOLAI

The command line syntax is:
 
       OPTIMIZE,{pname},IVAL,FVAL,FACT,STEP,ACCAV,ACCMX,THRESH
 
(upper or lower case), where the input parameters are:
 
{pname}:     Name of the parameter from the above list which is to be varied
IVAL:        Initial value of this parameter 
FVAL:        Final value of this parameter
FACT,STEP:   Variables which control the step size for the optimization.
             The value of the parameter PNAME is updated at each step
             following the equation
 
                 new value = (old value) * FACT + STEP 

ACCAV, ACCMAX,
THRESH:       The optimization is stopped when, for two subsequent runs,
              both the average percentage difference between the S matrices
              (or the moduli of the S -matrices) is smaller than ACCAV and
              the maximum percentage difference between the S matrices (or
              between the moduli of the S matrices) is smaller than ACCMAX.
              In this comparison all S-matrix elements of magnitude less 
              than THRESH are neglected.  If THRESH is positive, or zero, 
              then the comparison involves the moduli of the S-matrix 
              elements.  If THRESH is negative, then the comparison 
              involves both the real and imaginary parts of the S matrix.

      The optimization is performed only for JTOT=JTOT1.
 
      Values for PNAME, IVAL, and FVAL must be given.  If the other
values are ommitted, then default values are assigned as follows:

      ACCAV = 1, >ACCMAX = 5, THRESH = 1.E-5

If FACT and STEP are not defined, then FACT is set equal to
    2  if FVAL > IVAL
   0.5 if FVAL < IVAL

Values of the various input parameters may be omitted, but their place must
be preserved by commas if any of the subsequent parameters are to be given
values other than their default values.
 
2 PARTC
 
The command PARTC allows you to print out a subset of previously
calculated partial cross sections which have been determine and written to
file {jobname}n.pcs  The subset of partial cross sections which will be
printed to file {jobname}m.psc (note the different extensions) is
specified as follows:
  the rotational quantum number and additional index of the INITIAL state
    should be specified in the PARTC command, as described below
  the rotational quantum numbers and additional indices of both the
    INITIAL and FINAL states must be included in the arrays JOUT and
    INDOUT in the initial job used to create the {jobname}1.pcs file

The command line syntax is
 
          PARTC,{jobname},JI,INI,ienerg
 
where
      {jobnam}:  the jobname under which the partial cross sections
                 have been stored as {jobname}n.pcs.  Here n denotes the
                 value of the parameter ienerg (see below).  Partial
                 cross section (.pcs) files can be generated by setting
                 the control parameter WRPART=.true.  The default value
                 of {jobname} is the value of the jobname you have set
                 with the command JOB =, or, if no value has been set,
                 then {jobname}=Job
      JI:        rotational quantum number of initial state
      INI:       additional index of initial state
      ienerg:    the value of the energy for which the integral cross
                 sections are to be computed. i.e. if ienerg=2, then the
                 second energy second energy partial cross section file
                 {jobname}2.pcs are used.  The default value of inerg is 1
 
2 POT

In cases in which you need to input data from a file to calculate the
potential, you can do so by first writing a subroutine
LOAPOT(iunit,filname), in which a file named {filname} is opened on
logical unit {iunit} and subsequently read.  This subroutine must be then
linked with the hibridon code.

When you subsequently execute the hibridon code, you need only enter the
command
         POT={filname}

to cause the program to transfer control to LOAPOT so that the file
{filnam} can be read.  Control is then returned to the Hibridon driver.

 
2 PRINTC
 
The command PRINTC allows you to print out a subset of previously
calculated integral cross sections which have been written to file
{jobname}n.ics  The subset of integral cross sections which will be
printed corresponds to all transitions out of levels for which the
rotational quantum number is specified in the array JOUT and for which
the additional quantum index is specified in the array INDOUT. The
command line syntax is
          PRINTC,{jobname},iprint,iaver,ienerg
 
where
      {jobnam}:  the jobname under which the integral cross sections
                 have been stored as {jobname}n.ics.  Here n denotes the
                 value of the parameter ienerg (see below).  Integral
                 cross section (.ics) files can be generated by setting
                 the flag WRXSEC=.true.  The default value of {jobname} is
                 the value of the jobname you have set with the
                 instruction JOB =.  If no value has been set, the default value of
                {jobname} is Job
      iprint     < 0 if the subset of desired integral cross sections is
                 to be printed to the file {jobname}n.xsc.
                 >= 0, if subset of desired integral cross sections is
                 also to be printed to the main output file.
                 > 0, the list of channel energies is also printed to the
                 main output file.
                 The default value of iprint is 0
      iaver:     = 0 if the full matrix of integral cross sections is to
                 be printed.  The default value of iaver is 0
                 = 1 if the integral cross sections are to be summed over
                 positive and negative values of the additional quantum
                 index of the final state
                 = 2 if the integral cross sections are to be summed and
                 averaged over positive and negative values of the
                 additional quantum index of the initial and final states
 
                 NB, this summing and averaging is sure to work only if
                 there is an even number of open levels with alternating
                 values (positive and negative) of the quantum index
      ienerg:    the value of the energy for which the integral cross
                 sections are to be computed. i.e. if ienerg=2, then the
                 second energy S matrices {jobname}2.smt or second energy
                 integral cross section file {jobname}2.ics are used.  The
                 default value of inerg is 1
 
2 PRINTS
 
The command PRINTS allows you to print out S-matrix elements from a
previous calculation.  The command syntax is:
 
           PRINTS,JOB,JTOT1,JTOT2,JLPAR,IENERG
 
(upper or lower case), where the input parameters are:
 
JOB, IENERG:  The program searches for an S-matrix in the file
              Job{ienerg}.smt, where IENERG is an integer
              IENERG=1,2,,etc. JTOT1:        The first value of the total
angular momentum for which the
              S-matrix is printed JTOT2:        The last value of the
total angular momentum for which the
              S-matrix is printed JLPAR:        The parity label of the
desired S-matrix
 
The default input parameters are:
 
JOB:          The name of the current job, specified by the JOB={jobname}
              command, by default {jobname}="Job" 
IENERG:       1 
JTOT1:        The current value of JTOT1; use the command SHOW to display this
              value 
JTOT2:        JTOT1 
JLPAR:        The current value of JLPAR; use the command SHOW to display this
              value

2 PSI

     The command PSI  allows you to determine the scattering wavefunction
from data stored during a previous calculation.  Specifically this command
will determine and write out one column of the F(R) matrix defined in the
help file which describes the close coupling method. The command line
syntax is

            PSI,{jobname},,INITIAL-J,INITIAL-L,INITIAL-IND

(upper or lower case), where the input parameters are:

{jobname}        The program searches for stored wavefunction information
                 in the file {jobname}.wfu.  In order to create this file,
                 the previous run must have been done with the flags
                 WAVEFL and AIRYFL both set .TRUE. INITIAL-J:       the
rotational angular momentum of the incoming channel INITIAL-L:       the
orbital angular momentum of the incoming channel INITIAL-IND:     the
value of additional index for the incoming channel

The INITIAL-J, INITIAL-L, and INITIAL-IND indices specify which column of
the F(R) matrix is selected.  In addition, the only components (row
elements) of this column which are written out are those for which the
rotational angular momenta and additional indices are specified in the
arrays JOUT< and INDOUT

	All selected components of the scattering wavefunctions are
written to the file {jobnam}.psi.  The output is two successive matrices,
corresponding, respectively, to the real and imaginary parts of F(R).  The
rows correspond to the successive values of R and the columns, to the
components of F(R) which have been selected as described in the preceding
paragraph.

	The wavefunction is determined at all values of R lying between
RENDLD and RENDAI, with the grid size and spacing controlled by the same
parameters which govern the AIRY integration, namely SPAC, FSTFAC, TOLAI,
and RINCR.

2 READ
 
     The command READ causes all parameters and flags to be reread from
the file {input}.  The filename {input} is that which has been set by the
{input}={filename} command.
 
     This command is useful if you have changed any parameters and flags
and wish to restore a previous set.
 
2 QUIT
 
Terminate Hibridon
 
2 RUN
 
Start the calculation defined by the various parameters and flags
 
2 SAVE
 
Changes made to the currently accessed input file can be saved using the
command.
 
        SAVE

Conversely the current set of parameters and flags can be saved to a new
file by the command

        SAVE={filename}
 
Remember, {filename} can be lower or upper case, but is converted
internally to upper case.

Initially the default inputfile is named INPT
 
The SAVE command is useful for creating updated input data files.
 
2 SHOW
 
The command SHOW causes the current values of all parameters and flags to
be displayed on the screen
 
2 TENXSC

The command TENXSC allows you to calculate the tensor cross
sections defined by Eqs. (30) and (31) of B. Follmeg, P. Rosmus, and H.-J.
Werner, J. Chem. Phys. 93, 4687 (1990).  The command line is

        TENXSC,JOB,IENERG,LAMMAX,KMAX,IN1,IN2,JTOTMX,JMIN,JMAX (upper or lower
              case), where the input parameters are:
 
        JOB, IENERG:  The program searches for an S-matrix in the file
              Job{ienerg}.smt, where IENERG is an integer
              IENERG=1,2,,etc.
        LAMMAX: The maximum value of the anisotropic term in the velocity
              distribution (lower case lambda in the above article).
        KMAX:  The maximum value of the tensor index.  Only tensor cross
              sections with KI and KF .le. KMAX are calculated
        IN1, IN2: The initial and final values of the additional index
        JTOTMX: The maximum value included in the summation over total
              angular momentum (upper case J in Eqs. 30 and 31 of the
              above article) 
        JMIN, JMAX:   Tensor cross sections are computed for all values of the
              molecular rotational quantum number (lower case ji and jf
              in Eqs. 30 and 31 of the above article) ranging from JMIN
              to JMAX.

You can invoke the command TENXSC only if the file Job{ienerg}.smt
exists.  This file containes S-matrix elements which can be determined
by a prior calculations with
       
        WRITS=.true.

        JMIN ... JMAX included in the array JOUT

        IN1 and IN2 included in the array INDOUT

The calculated tensor cross sections are written to the file
Job{ienerg}.tcs as well as to the standard output

2 SYSCONF
The command SYSCONF prints out relevant details of your current cpu, ram, L2 cache, bus speed, and OS.
Currently, this command works only on Intel based cpu's.
 
2 TESTPOT
 
The command TESTPOT allows you to print out either the value of the
potential V(R,theta) for a given value of the arguments or the values of
V-lambda(R) for a given value of R.  You will be queried which type of
output you wish. Meaningful values of V(R,theta) will be given only if the
potential used is expanded as
 
     V(R,theta) = V00(R) + Sum{ VVL(R) Plambda[Cos(theta)] }
 
where Plambda is an ordinary Legendre polynomial and the sum extends from
LAMMIN(1) to min[LAMMAX(1),6].  In the case of a homonuclear molecule
(IHOMO=.true.), only even lambda terms are included in the sum.  The
functions V00(R) and VVL(R) are calculated by the subroutine POT.
 
After entering the command TESTPOT you will be prompted for the value of
nlam, which is the maximum number of anisotropic terms in the expansion of
the potential.
 
2 TURN
 
The command TURN invokes a simple search procedure to find the classical
turning point for the potential which is defined by the POT subroutine
which is linked in the currently executing scattering program.  This
information is useful in the determination of the starting point for the
integration of the coupled equation, RSTART.
 
      The turning point is estimated using the isotropic component of the
potential and a centrifugal barrier of
 
           JTOT1 * (JTOT1 + 1)/ (2 * XMU * R^2),
 
where XMU is the collision reduced mass in atomic units.  Thus, to
estimate the turning point of V(R) alone, without any centrifugal barrier,
set JTOT1=0 before entering the command TURN.

2 HYPXSC

The command HYPXSC allows you to calculate  hyperfine-resolved integral cross 
sections for collisions of spherical atoms with diatomic molecules in 
singlet-Sigma, doublet-Sigma, and doublet-Pi electronic states.  These integral 
cross sections are outputted to the file {jobname}n.hfx, where n is
the cardinal value of the energy (see below).  The hyperfine-resolved
cross sections are tabulated in columns as

          Energy, j_i, in_i, F_i, j_f, in_f, F_f, sigma

The command HYPXSC also creates the file {jobname}n.xms which contains integral cross
sections without hyperfine resolution tabulated in columns as

          Energy, j_i, in_i, j_f, in_f, sigma

This is similar to the fort.7 file created in MOLSCAT

The command line syntax is

          HYPXSC,{jobname},nucspin,ienerg

where
      {jobnam}:  the jobname under which the S-matrices have been stored as
                 {jobname}n.smt.  Here n denotes the value of the parameter 
                 ienerg (see below).  The S-matrix files can be generated by 
                 setting the flag WRSMAT = .true.  The value of {jobname} is 
                 set by the instruction JOB={jobname}. The default value of 
                 {jobname} is Job.
      
      nucspin:   variable designating the total nuclear spin I of the diatomic 
                 nucspin=2*I (0 for I=0, 1 for I=1/2, 2 for I=1 etc)

      ienerg:    the value of the energy for which the integral cross
                 sections are to be computed. i.e. if ienerg=2, then the
                 second energy S matrices {jobname}2.smt or second energy
                 integral cross section file {jobname}2.ics are used.  The
                 default value of inerg is 1.

N. B. At present, the command HYPXSC is operational only for collisions of spherical
atoms with diatomic molecules in singlet-Sigma, doublet-Sigma, and doublet-Pi electronic states. 
Also, the maximum value of nucspin is 6, which corresponds to I=3.


1 LINKING

To link an executable module you need only execute the command

       makehib {potname} {kmax}

where  
       {potname} is the name of the potential subroutine pot_{potname}.f,
       which describes the system under investigation and which must be
       located in the Hibridon subdirectory src/pot

       {kmax} is the numerical value of the maximum number of channels

The makehib command creates the executable module 
       bin/progs/hib_{potname}_kmax.

The  file h_{potname}.log contains a log of this link, which may be examined
in case of failure

For example,

       makehib arno 251

will create the executable module 

       bin/progs/hib_arno_251

Here is the terminal output from this command

potname is arn2
current directory is /Users/mha/hib43/bin/progs
compiling pot subroutine for hib_arn2_251 ...
potname is pot_arn2.f

making fortran converter ...

running fortran converter ...

compiling pot_arn2.f ...
pot_arn2 successfully compiled ...

hib_arn2_251 being created at date 12/25/07 07:30:18 EST with version 4.3

building  Hibridon v.4.3 with Fortran direct i/o routines ...

system parameters are:
System is OS X 10.4.11
Machine type is unix-darwin unix-ifort
C compiler is /usr/bin/cc -DNAME_LU
Fortran compiler is /opt/intel/fc/10.1.007/bin/ifort -O3 -save
Mathematical Libraries are:
-L/Library/Frameworks/Intel_MKL.framework/Versions/10.0.1.014/Libraries/32 -lmkl_intel -lmkl_intel_thread
-lmkl_core -lmkl_intel_thread -lmkl_core -lmkl_intel_thread -lmkl_core -lguide -lpthread
compiling hiversion ...

converting himain with kmax = 251

linking hib_arn2_251
  c-based direct i/o routines used

removing hiiolib*.o and (if present) hiunix.o from directory src ...

successful link; moving hib_arn2_251 to ../bin/progs ...

examine /Users/mha/hib43/h_arn2.log for diagnostic and/or error messages

N. B. Your link will be unsuccessful unless all the requisite .o and common 
files have been previously created.  See the installation instructions
contained in the file INSTALL in your top level hibridon directory.


