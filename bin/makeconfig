#!/bin/sh

# HIBRIDON makeconfig $Revision: 2003.1 $ --- set up default CONFIG file
# the PATH variable should be set to include the hibridon bin directory

bin=`hibriddir`/bin
PATH=$PATH:$bin
export PATH
cd $bin/..

no_opt='hinput.f himain.f hiversion.f';

if test ! -r $bin/machine.exe ; then echo makemachine ; $bin/makemachine; fi;
machine=`machine.exe`
echo "machine type is $machine" 
gmalloc=0 fortran=f77 copt=-O opt=-O opt1=-O debug=-g cnopt=" " noopt=" " static=" " \
i64=" " linkopt=" " profile="-p" libraries=" " seek=.001 speed=200000 cc=cc
if test "$machine" = "unix unix-i4 unix-sun" ; then
  sun_arch=`uname -m`
  gmalloc=0
  fortran="f77 "
  if test "$sun_arch" = "sun4u" ; then  # UltraSPARC
    opt="-fast -xarch=v8plusa -fsimple=2" copt="-fast -xarch=v8plusa -fsimple=2"
    libraries="-xlic_lib=sunperf -lsunmath"
    nblas=3
  elif test "$sun_arch" = "sun4us" ; then  # Fujitsu/HAL Sparc64_GP
    opt="-fast -xarch=v8plusa -fsimple=2" copt="-fast -xarch=v8plusa -fsimple=2"
    libraries="-lnsl -lxnet -L/usr/ucblib/libucb.a"
  else
    libraries="-lucb"
  fi
fi
if test "$machine" = "unix unix-ibm" || test "$machine" = "unix unix-i4 unix-ibm" ; then 
  compiler_level=0.0
  syslevel=`uname -vr |awk '{printf "%d.%d\n",$2,$1}'`
  sysmainlevel=`uname -vr |awk '{printf "%d\n",$2}'`
  if test $sysmainlevel = '4';then
    compiler_level=`lslpp -h -qcOu xlfcmp | awk -F: '/COMMIT/ {print $3}' | awk -F. '{printf "%d.%d\n", $1, $2}'`
  fi
  if test $syslevel = '3.2';then 
    compiler_level=`lslpp -h -qcOu xlfcmp.obj 2>/dev/null|awk -F:  '/COMPLETE/{print $4}'|head -1|awk -F. '{printf "%d.%d\n", $1, $2}'`
  fi
  opt=-O; opt1=-O
  if test $compiler_level = '2.3' -o $compiler_level = '3.2' ; then opt=-O3 ; fi
  if test $compiler_level = '3.1' ; then opt=-O2 ; fi
  if test $compiler_level = '7.1' ; then opt=-O3 ; fi
  fortran="xlf -NA16384 -NQ20000 -qcharlen=1024 -qdpc=e -qextname" debug=-g ;
  copt="-O3"
  static="-qsave"
  gmalloc=0
  machine="unix  unix-aix"
  extra='# AIX System Level: '$syslevel', xlf Compiler Level:  '$compiler_level
  if [ $sysmainlevel = '4' ]; then
     powerlevel=`lsattr -a type -l proc0 -E | awk '{print $2}'`
     if [ $powerlevel = 'POWER' ];
       then qpwr  =  '' ;
     elif [ $powerlevel = 'POWER2' ];
       then qpwr='2';
     else 
       qpwr='3';
     fi
     opt="$opt -qarch=pwr$qpwr"
     if [ $qpwr = '2' ] && [ -r /usr/lib/libesslp2.a ] 
       then machine="unix unix-ibm unix-blas3" libraries="$libraries -lesslp2";fi
     if [ $qpwr = '' ] && [ -r /usr/lib/libessl.a ] 
       then machine="unix unix-ibm unix-blas3" libraries="$libraries -lessl";fi
     if [ $qpwr = '3' ] && [ -r /usr/lib/libessl.a ] 
       then machine="unix unix-ibm unix-blas3" libraries="$libraries -lessl";fi
  fi
  if [ $sysmainlevel = '3' ]; then
     if [ -r /usr/lib/libessl.a]
        then machine="unix unix-ibm unix-blas3" libraries="$libraries -lessl";fi
  fi
  extra=$extra
fi
if test "$machine" = "unix unix-aix" ; then
   libraries="$libraries -lblas"
fi
if test "$machine" = "unix unix-sequent" ; then
  fortran="fortran -fpa -mp" opt=-O opt1=-O debug=-g ;
fi

if test "$machine" = "unix unix-convex" ; then
  fortran=fc noopt=-no opt=-O2 opt=-O debug=-g seek=0.0004 speed=800000 gmalloc=1;
fi

if test "$machine" = "unix unix-dec" ; then
  fortran=f77 noopt=-O0 opt="-O -real_size 64" opt1=-O debug=-g gmalloc=1;
  if test -r /usr/lib/libdxml.a;
  then machine="$machine unix-blas3" libraries="$libraries -ldxml";fi
  if test -r /usr/lib/libblas.a;
  then machine="$machine unix-blas3" libraries="$libraries -lblas";fi
fi

if test "$machine" = "unix unix-hp unix-hp300" ; then
  fortran="f77 -U +ffpa" opt="-O -R8" opt1="-O -R8" debug=-g gmalloc=1
fi;

if test "$machine" = "unix unix-i4 unix-hp unix-hp800" ; then
  # environment variable PA8000 can be set non-null in advance to force
  cpu=`uname -m`
  if test "$cpu" = "9000/780" ; then PA8000=1 ; fi
  if test "$cpu" = "9000/782" ; then PA8000=1 ; fi
  if test "$cpu" = "9000/785" ; then PA8000=1 ; fi
  osver=`uname -r|sed -e 's/^[A-Z]\.//'`
  osver9=`echo $osver 9 10 | awk '{if ($1 >= $2 && $1 < $3)  print 1}'`
  osver10=`echo $osver 10 11 | awk '{if ($1 >= $2 && $1 < $3) print 1}'`
  osver11=`echo $osver 11 12  | awk '{if ($1 >= $2 && $1 < $3) print 1}'`
  if [ "x$PA8000" != "x" ]; then
   ccextra="-Dhpux_pa8000" 
   if [ "x$osver10" = "x1" ]; then   
    echo "*** Compiling for PA8000 architecture, HP-UX 10.20" 
    fortran="fort77 +DA2.0 +DS2.0 " opt="+O2"   opt1="+O" debug=-g static=-K libraries="$libraries -lm " profile=-G;
    cc="cc $ccextra +DA2.0 +DS2.0" copt='+O2' fopt1="+O" copt1="+O1" fopt2="+O2 +Olibcalls +Odataprefetch" copt2="+O2"
   fi 
   if [ "x$osver11" = "x1" ]; then
    echo "*** Compiling for PA8000 architecture, HP-UX 11.00" 
    fortran="fort77 +DA2.0 +DS2.0 " opt="+O2" opt1="+O" debug=-g static=-K libraries="$libraries -lm " profile=-G;
    cc="cc $ccextra +DA2.0 +DS2.0" copt='+O2' fopt1="+O" copt1="+O1" fopt2="+O2 +Olibcalls +Odataprefetch" copt2="+O2"
   fi
    if [ -r /opt/mlib/lib/pa2.0/libveclib.a ]; then
      libraries="-L/opt/mlib/lib/pa2.0 -lveclib"
      machine="$machine unix-blas3"
      if [ -r /opt/mlib/lib/pa2.0/liblapack.a ]; then
         libraries="-L/opt/mlib/lib/pa2.0 -lveclib -llapack"
      fi
    fi
  else
    if [ "x$osver10" = "x1" ]; then
      echo "*** Compiling for PA7000 architecture, HP-UX 10.20" 
# HP-UX 10.x
      fortran="fort77 " opt="+O2" opt1="+O" debug=-g static=-K libraries="$libraries -lm " profile=-G;
      cc="cc " copt='+O2' fopt1="+O1" copt1="+O1" fopt2="+O2 +Olibcalls +Odataprefetch" copt2="+O2"
      if [ -r /opt/mlib/lib/pa1.1/libveclib.a ]; then
        libraries="-L/opt/mlib/lib/pa1.1 -lveclib"
        machine="$machine unix-blas3"
      fi
    fi
# HP-UX 9.0x
    if [ "x$osver9" = "x1" ]; then
      echo "*** Compiling for PA7000 architecture, HP-UX 9.0x" 
      cc="$cc "
      fortran="fort77 +U77" opt=-O opt1="" debug=-g static=-K libraries="$libraries -lBSD -lvec -lm -lU77" profile=-G;
      if [ -r /opt/mlib/lib/pa1.1/libveclib.a ]; then
        libraries="-L/opt/mlib/lib/pa1.1 -lveclib"
        machine="$machine unix-blas3"
      fi
    fi
  fi
fi
if test "$machine" = "cray cray-unicos cray-ymp" ; then
  fortran="cf77 -Wf'-dp '" opt=" " opt1=" "  debug="-g"  static="-Wf'-a static'" i64="-Wf'-i 64'" ;
fi

if test "$machine" = "cray cray-unicos cray-c90" ; then
  fortran="cf77 -Wf'-dp '" opt=" " opt1=" " debug="-g"  static="-Wf'-a static'" i64="-Wf'-i 64'" ;
fi

if test "$machine" = "cray cray-unicos cray-2"   ; then
  fortran="cf77 -Wf'-dp -eP '" opt=" " opt1=" " debug="-Wf'-ez'"  static="-Wf'-a static'" i64="-Wf'-i 64'" ;
fi

if test "$machine" = "unix unix-nec" ; then
  fortran="f77sx -pvctl noassume" opt=-O opt1=-O debug="-g -NO -Ni -Nv" noopt="-NO -Nv" linkopt="-l -t";
fi

if test "$machine" = "unix unix-iris"|| test "$machine" = "unix unix-i4 unix-iris" ; then
  fortran="f77 -mips2 -static" opt="-O2 -r8" opt1="-O2 -r8" ;
  machine="$machine unix-blas3"
  libraries="-lblas "
fi

if test "$machine" = "unix unix-iris unix-r8000" ; then
  cc="cc -G0"
  fortran="f77 -G0 -OPT:roundoff=3:IEEE_arithmetic=3:fast_sqrt=OFF -TENV:X=3 -static"
  static=-static
  seek=.001 speed=2000000
  i64=-i8
  opt="-O3"
  opt="-O"
  copt="-O3"
  cnopt="-O0"
  machine="$machine unix-blas3"
  libraries="-lfastm -lblas "
fi
# following for old sgi machines only
# if test "$machine" = "unix unix-iris" ; then fortran="f77 -G 0 -static" opt=-O2 opt=-O; fi;

if test "$machine" = "unix unix-fujitsu" ; then
  fortran="frt -Abe" opt="-Wv,-pa" debug="-Wv, -ad" noopt="-Wv,-sc -Ob" opt1="-Wv,-pa" linkopt="-J -t -lm";
  extra='FUJITSU_TYPE=VPX
# If your Fujitsu is VPP not VPX, change the above to VPP,
# uncomment the following, and comment out corresponding stanzas below
# CC=fccpx
# FC="frtpx -Ab"
# FOPT=" "
# FDEBUG="-Wv,-ad"
# CDEBUG="-Wv,-ad"
# FNOPT="-Wv,-sc -Ob"
# LINKOPT="-t -lm"'
fi
# reduce machine type
machine=`echo $machine|sed "s/unix //"`

# save old CONFIG file if necessary
if test -r CONFIG ; then mv CONFIG CONFIG.BAK; echo old CONFIG saved as CONFIG.BAK; fi

date=`date` version=`cat VERSION`
cat <<! >CONFIG
# HIBRIDON CONFIG generated at $date for release $version
#               for architecture $machine

$extra
# Machine type ..
MACH="$machine"
# Compilers ..
CC="$cc"
FC="$fortran"
# C defines
# nb	SEEK is disk seek speed in seconds
#	SPEED is disk transfer rate in 8 bytes/second
CDEF="-DSEEK=$seek -DSPEED=$speed"
# compiler optimisation
COPT="$copt"
FOPT="$opt"
FOPT1="$opt1"
# compiler explicit no optimisation
CNOPT="$cnopt"
FNOPT="$noopt"
# compiler debug flag
CDEBUG="$debug"
FDEBUG="$debug"
# static variables
FSTATIC="$static"
# 64-bit integers (deferred implementation)
FI64="$i64"
# profiling
FPROFILE="$profile"
CPROFILE="$profile"
# additional libraries and link options
LIBS="$libraries"
LINKOPT="$linkopt"
# files in src/ to be compiled without optimization
NO_OPT="$no_opt"
# use malloc replacement?
GMALLOC="$gmalloc"
!

echo "CONFIG file created (`hibriddir`/CONFIG)"
echo "  please inspect and edit if necessary before proceeding"
export FC
