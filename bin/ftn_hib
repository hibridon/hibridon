#!/bin/sh
#  HIBRIDON ftn $Revision: 2009.1 $ --- Compile fortran source
# ftn [-N] [-P] [-O] [-O*] [-g] [-d] [-n] [-link] [-l lib] [-L libpath]
#     [-o file] [files...]
# -N omit compilation if object file is newer than source
# -d or -g for debugging
# -O  for optimization (default)
# +O* or -O* for optimization (overwrites default)
# -W* proprocessor options, directly passed
# -n no optimization
# -P run molpro preprocessor (ftc)
# -link link objects (default a.out)
# -l, -L options of ld
# -o file name of executable file (triggers -link)
# 
# for cray:
# -static: all variables static
# -i64:  64 bit integers
# -i filename

basedir=`hibriddir`
bin=$HOME/bin
PATH=$PATH:$bin
export PATH
if test -r $bin/echo ; then echo=$bin/echo ; else echo=echo ; fi

. $basedir/CONFIG

HIB_FFLAGS="$FSTATIC $FI64"

option=$FOPT link="no" preprocess=0 extraopt=" " out="a.out" list=" " newcheck="no"
while test $#argv ; do
  case $1 in
   +OP*) extraopt="$extraopt $1"; shift; continue;;
   -O) option=$FOPT; shift; continue;;
   -O*) option="$1"; shift; continue;;
   +O*) option="$1"; shift; continue;;
   -n) option=$FNOPT; shift; continue;;
   -d) option="$FDEBUG $FNOPT"; shift; continue;;
   -g) option="$FDEBUG $FNOPT"; shift; continue;;
   -pfa) extraopt="$extraopt -pfa keep"; shift; continue;;
   -P) preprocess=1; shift; continue;;
   -p) option="$option $FPROFILE "; shift; continue;;
   -p*) option="$option $1"; shift; continue;;
   -link) link="yes"; shift; continue;;
   -c) link="no"; shift; continue;;
   -N) newcheck="yes"; shift; continue;;
   -o) out=$2 link="yes"; shift; shift; continue;;
   -W*) extraopt="$extraopt $1"; shift; continue;;
   -static) extraopt="$extraopt $FSTATIC"; shift; continue;;
   -i64) extraopt="$extraopt $FI64"; shift; continue;;
   -mp) extraopt="$extraopt -mp"; shift; continue;;
   -i) linkopt="-Wl'-i $2'"; shift; shift; continue;;
   -l*|-L*) LIBS="$LIBS $1";  shift; continue;;
   -*) $echo $0 $*;$echo "Usage: ftn [-N] [-P] [-O*] [-g] [-d] [-p*] [-n] [-link] [-static] -[i64] [-o file] [-l lib] [-L libpath] [files...]" ; exit 1;;
   *) break;;
  esac
done
if test $preprocess != 0 ; then
  if test ! -r $bin/ftc ; then $echo making preprocessor ;makeftc ; fi;
fi
for i in $*
do
  base=`basename $i`
  if test $i != $base ; then dirni=`echo $i|sed "s/\/$base//"` ;else dirni=. ; fi
  basef=`basename $i .f`
  baseo=`basename $i .o`
  if test "$baseo" != "$base"; then
    if test "$dirni" != "." ; then baseo="$dirni/$baseo"; fi
    list="$list $baseo.o"
    continue;
  fi
  filei=$basef'.f'
  fileo=$basef'.o'
  logfi=$basef'.log'
  if test "$dirni" != "." ; then fileo=$dirni/$fileo ; cd $dirni; fi
  list="$list $fileo"
  if test "$newcheck" = "yes" ; then
    if test -r $fileo ; then if test x`find . -name $filei -newer $fileo -print` = x ; then continue; fi; fi
  fi
#  $echo -n "compiling ${filei} ... "
  $echo  "compiling ${filei} ... "
  if test -r $logfi ; then rm $logfi ; fi
  if test $preprocess != 0 ; then $echo -n "preprocessing ... " ;ftc $filei ;fi
  $echo $FC -c $HIB_FFLAGS $extraopt $option $file
  eval "$FC -c $HIB_FFLAGS $extraopt $option $filei"
  if test $? != 0 ; then $echo failed: ; cat $logfi; rm -f `basename $filei .f`.o ; exit 1; fi;
  $echo compilation done
done

if test "$link" = "yes" ; then
  if test -r $out ; then rm $out ; fi
  if test -r $out'.log' ; then rm $out'.log' ;fi
  basei=`basename $i .o`
  $echo linking $out
  $echo $FC  $HIB_FFLAGS $extraopt $option $LINKOPT -o $out $list $LIBS > $out.log 2>&1
  eval "$FC $HIB_FFLAGS $extraopt $option $LINKOPT -o $out $list $LIBS>> $out.log 2>&1"
fi
