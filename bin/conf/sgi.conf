# MOLPRO utilities/sgi.conf $Revision: 97.6 Patch(98.1): origin2000 origin2000_2 origin2000_3 sgi721 configure4 configure5 configure6 $
if test "$machine" = "unix unix-i4 unix-iris" ; then
  fortran="f77 -G0 -mips2" opt=-O2;
  cc="cc -mips2";
  f_opt1='direct/sofock.f'
  noopt='-O0'
  #libraries="-lblas"
fi

set $machine
if [ x$4 = xunix-r10000 -o x$4 = xunix-r8000 ]; then
# r8000 or r10000 processor
#  f77version=`/usr/sbin/versions -v ftn77_dev.sw|awk '/ ftn77_dev / {print $6}'`
  f77version=`/usr/sbin/versions -v ftn77_dev.sw|awk '/ ftn77_dev / {match($0,"Fortran 77"); str=substr($0,RSTART+RLENGTH);match(str,"7..");str2=substr(str,RSTART,RLENGTH);printf("%s\n",str2)}'`

((i=0))
for vers in $f77version; do 
if [ i -eq 0 ]; then
 f77tmp=$vers
fi
((i=i+1))
done

f77version=$f77tmp
  echo f77 version is $f77version
  static=-static
  linkopt="-mp"
  i64=-i8
  opt="-O3"
  if [ $4 = unix-r8000 ]; then
    opt="-O3 -WK,-r=3 -OPT:IEEE_arithmetic=3" 
  fi
  copt="$opt"
  seek=.001 speed=3000000

if test "$machine" = "unix unix-i4 unix-iris unix-r10000" ; then
  cc="cc -G0 -64 -mips4 -DR10000 -DIRIX64"
  fortran="f77 -G0 -64 -mips4"
  f_opt1="util/driver.f casvb/casvb_molpro.f"
  f_opt2="casvb/casvb_ci.f opt/frequencies.f forces/drvmp2.f argos/binput.f dtraf/fiddle.f multi/mucsf.f util/util.f util/transform.f prop/propa.f"
  if [ x$f77version = x7.1 ]; then f_opt1="util/driver.f casvb/casvb_ci.f"; f_opt2='blas/matrix.f prop/propa.f util/transform.f' ; fi
  libraries="-lblas"
fi
if test "$machine" = "unix unix-i8 unix-iris unix-r10000" ; then
  cc="cc -G0 -64 -mips4 -i8 -DR10000 -DI64 -DIRIX64"
  fortran="f77 -G0 -64 -mips4 -i8"
  f_opt1="util/driver.f casvb/casvb_molpro.f"
  f_opt2="casvb/casvb_ci.f opt/frequencies.f forces/drvmp2.f argos/binput.f dtraf/fiddle.f multi/mucsf.f util/transform.f prop/propa.f"
  if [ x$f77version = x7.1 ]; then f_opt1="util/driver.f casvb/casvb_ci.f"; f_opt2='blas/matrix.f prop/propa.f Molcas/ptrans.f util/transform.f' ; fi
  #libraries="-lblas"
fi
if test "$machine" = "unix unix-i4 unix-iris unix-r8000" ; then
  cc="cc -G0 -64 -mips4 -DR8000 -DIRIX64"
  fortran="f77 -G0 -64 -mips4"
  f_opt1='util/driver.f util/util.f casvb/casvb_ci.f util/wiop.f casvb/casvb_molpro.f'
  f_opt2='argos/binput.f argos/artwo1.f argos/artwo3.f argos/arpseu.f prop/prope.f lsint/lsint.f almlof/alminp.f scf/locali.f multi/muinit.f mrci/cicon.f dft/dftgrid.f opt/intc.f dft/dfti.f scf/hfma.f scf/scfpr0.f dtraf/fiddle.f sort/aosortv.f multi/mucsf.f mrci/cidcp.f forces/drvmp2.f util/transform.f prop/propa.f'
  libraries="-lblas"
# lfastm temporarily disabled due to bug for sqrt on power challenge
# libraries="-lfastm -lblas "
fi
if test "$machine" = "unix unix-i8 unix-iris unix-r8000" ; then
  cc="cc -G0 -64 -mips4 -i8 -DR8000 -DI64 -DIRIX64"
  fortran="f77 -G0 -64 -mips4 -i8"
  f_opt1='util/driver.f util/util.f casvb/casvb_ci.f util/wiop.f casvb/casvb_molpro.f'
  f_opt2='argos/binput.f argos/artwo1.f argos/artwo3.f argos/arpseu.f lsint/lsint.f almlof/alminp.f scf/locali.f multi/muinit.f mrci/cicon.f mrci/cikext.f dft/dftgrid.f opt/intc.f dft/dfti.f scf/hfma.f scf/scfpr0.f dtraf/fiddle.f sort/aosortv.f multi/mucsf.f mrci/cidcp.f forces/drvmp2.f util/transform.f prop/propa.f'
  libraries=""
# lfastm temporarily disabled due to bug for sqrt on power challenge
# libraries="-lfastm -lblas "
fi
fi

if [ "x$2" = "xunix-i8" ] && [ "x$3" = "xunix-iris" ]; then
# check for nasty -i8/constants bug 608953
cat <<EOF > sgii8.f
      namx=99999
      call sreibw (namx)
      call sreibw (99999)
      end
      subroutine sreibw (namx)
      save iold
      data iold/0/
      if (iold.eq.0) then
       iold=namx
      else
       if (iold.eq.namx) write (6,*) 'OK'
      end if
      end
EOF
f77 -i8 -64 -G0 sgii8.f
if [ "x`a.out`" != "x OK" ]; then
  echo There is a problem with 8-byte integer constant handling by the compiler
  echo This may be related to SGI bug 608953, which is fixed by patch 3265
  echo You will need to get the compiler fixed so that the following program runs correctly
  cat sgii8.f
  rm -f sgii8.f
  exit 1;
fi
rm -f sgii8.f
fi
