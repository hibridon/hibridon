*  System:  H + N2(X) RCCSD(T)-F12a
*
*   calculation of potential energy curves by p.dagdigian
*   fitted to lam = 0:2:16 
*  
*   written by p. dagdigian
*   current revision date:  8-sep-2015
      include "common/syusr"
      include "common/bausr"
      include "common/ground"
* ------------------------------------------------------------------------
      subroutine driver
      implicit double precision (a-h,o-z)
      common /covvl/ vvl(33)
      include "common/parpot"
      econv=219474.6d0
      potnam='H-N2 RCCSD(T)-F12a'
      print *, potnam
1     print *, 'R (bohr):'
      read (5, *, end=99) r
      call pot(vv0,r)
      if (r.le.0.d0) goto 99
*     vlm coefficient is returned in atomic units (hartree)
*     convert from atomic units for printout
      write (6, 100) vv0*econv, (econv*vvl(i), i=1,8)
100   format(9(1pe16.8))
      goto 1
99    rr=3.0d0
      dr=0.1d0
      open (unit=12,file='hn2_vlms.dat')
      write(12,109)
109   format(' %R/bohr V00  ...')
      do i=1,250
        call pot(vv0,rr)
        write (12,110) rr,vv0*econv, (econv*vvl(j),j=1,8)
110     format(f7.2,9(1pe16.8))
        rr = rr + dr
      enddo
      close(12)
      end
* --------------------------------------------------------------------------
      subroutine loapot(iunit,filnam)
* --------------------------------------------------------------------------
      implicit double precision (a-h,o-z)
      character*(*) filnam
      include "common/parbas"
      include "common/parpot" 
      common /conlam/ nlam, nlammx, lamnum(2)
      common /cosysi/ nscode, isicod, nterm
      potnam='H-N2 RCCSD(T)-F12a'
      npot=1
      nterm=1
      lammin(1)=2
      lammax(1)=16
      mproj(1)=0
      ipotsy = 2
*
      ntv(1)=1
      ivcol(1,1)=0
      ivrow(1,1)=0
*  count number of anisotropic terms
      nlam = 0
      do il=lammin(1),lammax(1),ipotsy
        nlam = nlam + 1
      enddo
      nlammx = nlam
      return
      end
* --------------------------------------------------------------------------
      subroutine pot (vv0, r)


*  subroutine to calculate the r-dependent coefficients in the
*  collision of a homonuclear diatomic with a structureless target
*  in units of hartree for energy and bohr for distance

*  on return:
*  vv0 contains the isotropic term (n=0) in the potential
*  the coefficients for each angular term in the coupling potential
*  [ vvl(i) for i = 1, nlam ] are returned in common block /covvl/

*  variable in common block /conlam/
*    nlammx:    the maximum number of anisotropic terms
*    nlam:      the total number of angular coupling terms
*  variable in common block /covvl/
*    vvl        array to store r-dependence of each angular term in the
*               potential
* 
* author:  paul dagdigian
* latest revision date:  3-sep-2015
* ----------------------------------------------------------------------
      implicit double precision (a-h,o-z)
      logical ljunk, ihomo, csflag, lljunk
      include "common/parbas"
      dimension v(9)
      dimension csplin(37,9)
      dimension rr(37), vl(333),vec(37)
      common /colpar/ ljunk(5),csflag,lljunk(2),ihomo
      common /covvl/ vvl(8)
*
*  37 values or R
      data rr /
     +  2.000,  2.250,  2.500,  2.750,  3.000,
     +  3.250,  3.500,  3.750,  4.000,  4.250,
     +  4.500,  4.750,  5.000,  5.250,  5.500,
     +  5.750,  6.000,  6.250,  6.500,  6.750,
     +  7.000,  7.250,  7.500,  7.750,  8.000,
     +  8.500,  9.000,  9.500, 10.000, 10.500,
     + 11.000, 11.500, 12.000, 13.000, 14.000,
     + 15.000, 20.000 /
*  values of the vlam coefficients
      data vl /  
     +  3.7450469e+04,  1.9776972e+04,  1.2403622e+04,  9.3225402e+03,
     +  7.8867851e+03,  6.8457954e+03,  5.6249522e+03,  4.2727650e+03,
     +  3.0905360e+03,  2.1594396e+03,  1.4655551e+03,  9.6666857e+02,
     +  6.1774299e+02,  3.7970772e+02,  2.2123944e+02,  1.1846886e+02,
     +  5.3836854e+01,  1.4740418e+01, -7.6492703e+00, -1.9378944e+01,
     + -2.4520037e+01, -2.5753312e+01, -2.4808820e+01, -2.2771710e+01,
     + -2.0293398e+01, -1.5334905e+01, -1.1221633e+01, -8.1293293e+00,
     + -5.9000711e+00, -4.3177477e+00, -3.1985051e+00, -2.4026375e+00,
     + -1.8295515e+00, -1.1068851e+00, -7.0249983e-01, -4.6430755e-01,
     + -7.7467210e-02,
     +  5.8908051e+04,  1.4078824e+04, -1.9960469e+03, -4.3886828e+03,
     + -1.5899089e+03,  1.7459703e+03,  3.3997362e+03,  3.3531067e+03,
     +  2.7758773e+03,  2.1311429e+03,  1.5675136e+03,  1.1189511e+03,
     +  7.7924155e+02,  5.3070071e+02,  3.5364945e+02,  2.3027728e+02,
     +  1.4610310e+02,  8.9789021e+01,  5.2852302e+01,  2.9187422e+01,
     +  1.4454462e+01,  5.6144956e+00,  5.4400321e-01, -2.1672975e+00,
     + -3.4518046e+00, -3.8794911e+00, -3.2487895e+00, -2.4547932e+00,
     + -1.7788245e+00, -1.2671177e+00, -9.0181912e-01, -6.4183734e-01,
     + -4.6348936e-01, -2.4462660e-01, -1.3804550e-01, -9.0027101e-02,
     + -1.6417759e-02,
     +  6.6566513e+04,  3.4385611e+04,  1.8484264e+04,  9.9176540e+03,
     +  5.7975488e+03,  4.2077975e+03,  3.2902225e+03,  2.2283492e+03,
     +  1.4565557e+03,  9.5218191e+02,  6.2785227e+02,  4.1758765e+02,
     +  2.7892524e+02,  1.8639586e+02,  1.2426883e+02,  8.2438472e+01,
     +  5.4373183e+01,  3.5628086e+01,  2.3161354e+01,  1.4888246e+01,
     +  9.4485016e+00,  5.9140898e+00,  3.6473749e+00,  2.2235488e+00,
     +  1.3378516e+00,  4.6348703e-01,  1.5701954e-01,  4.6114310e-02,
     +  8.6956730e-03, -1.0882453e-02, -1.0814211e-02, -7.8795932e-03,
     + -7.8023242e-03, -7.4229557e-03,  1.5605285e-03,  1.6025643e-03,
     +  1.4261055e-03,
     +  1.2244962e+04,  4.2384693e+03,  3.2214238e+03,  3.5912500e+03,
     +  3.4832363e+03,  2.7644316e+03,  1.8201948e+03,  9.8224634e+02,
     +  5.1038452e+02,  2.6826808e+02,  1.4480889e+02,  8.0713337e+01,
     +  4.6544134e+01,  2.7626218e+01,  1.6812299e+01,  1.0436387e+01,
     +  6.5673974e+00,  4.1787874e+00,  2.6888114e+00,  1.7570524e+00,
     +  1.1731909e+00,  7.9468234e-01,  5.4479901e-01,  3.6509330e-01,
     +  2.4982593e-01,  1.0206186e-01,  2.7319354e-02,  6.6912953e-03,
     +  7.7877983e-03,  6.9169790e-03, -3.6821933e-03, -9.7347779e-03,
     + -5.5942227e-03, -3.6642096e-03, -5.1950644e-03,  2.8847034e-03,
     +  1.6983152e-03,
     +  1.7154155e+04,  9.0306416e+03,  4.7482497e+03,  2.8432654e+03,
     +  2.0729026e+03,  1.6175544e+03,  9.0691824e+02,  3.9832691e+02,
     +  1.7034008e+02,  7.4326497e+01,  3.3602964e+01,  1.5526537e+01,
     +  7.4534070e+00,  3.7405707e+00,  1.9193861e+00,  1.0223181e+00,
     +  5.5902850e-01,  3.0874673e-01,  1.7714242e-01,  1.0452991e-01,
     +  6.3235235e-02,  3.0293169e-02,  1.5907795e-02,  5.0399841e-03,
     + -7.5905376e-03, -1.7323793e-02, -2.0971530e-02, -1.5883634e-02,
     + -5.9389472e-03,  5.1123431e-04,  1.8965327e-03, -2.1402758e-03,
     +  2.5024733e-03,  6.1109785e-03,  3.3998870e-03, -5.8419691e-04,
     +  3.4155609e-05,
     + -2.8802494e+03, -3.0819187e+01,  2.2866926e+03,  2.8368859e+03,
     +  2.1251893e+03,  1.2007735e+03,  4.7551704e+02,  1.5633678e+02,
     +  5.3045963e+01,  1.9035222e+01,  7.2195584e+00,  2.8374661e+00,
     +  1.1143819e+00,  4.1976819e-01,  1.5203093e-01,  4.0481358e-02,
     + -2.1273441e-04, -1.4475907e-02, -1.1262038e-02, -5.7217555e-03,
     + -3.4436390e-03,  3.7801289e-03,  8.8061211e-03,  1.0156386e-02,
     +  1.1381356e-02,  7.2805539e-03,  1.4150699e-03, -1.4300263e-03,
     + -1.6191724e-03, -3.8366306e-03, -2.3871670e-03,  2.3713379e-04,
     +  1.4177474e-03, -4.4921739e-03, -4.4809803e-04, -3.3833497e-03,
     +  5.2538483e-03,
     +  1.1302615e+04,  6.5679067e+03,  3.7842966e+03,  2.8407913e+03,
     +  2.1487008e+03,  9.9092343e+02,  2.7419206e+02,  6.5330207e+01,
     +  1.6754458e+01,  4.8250534e+00,  1.4844790e+00,  4.7749401e-01,
     +  1.8784176e-01,  6.5837236e-02,  4.1238037e-02,  2.4656422e-02,
     +  1.3974905e-02,  1.0811274e-02,  2.1748547e-03,  1.7235709e-03,
     +  1.1038518e-02,  1.0252065e-02,  6.9245483e-03,  3.6312470e-04,
     +  3.5809860e-03, -1.6450707e-03,  5.1783477e-03,  4.1771651e-03,
     +  8.4929514e-04,  5.9571746e-03,  4.0883690e-03,  8.4118350e-03,
     +  1.0635318e-03, -3.6572453e-03,  4.7468064e-03,  6.4866419e-03,
     + -4.8986990e-03,
     + -2.5742319e+03,  1.4434404e+03,  3.6754933e+03,  3.6829984e+03,
     +  2.5919121e+03,  1.0581162e+03,  1.8478631e+02,  3.0552008e+01,
     +  5.7820313e+00,  1.1621205e+00,  3.8037744e-01,  7.4555504e-02,
     +  4.0427950e-03, -3.5267263e-03, -8.9294346e-03, -4.7186702e-03,
     + -1.0482284e-02, -4.1683089e-03, -2.2162119e-03,  5.9185343e-03,
     +  2.9403384e-03,  1.4032735e-03,  2.2615630e-03,  5.8160928e-03,
     +  2.6154067e-03, -2.0685287e-03, -2.5621393e-03, -1.0944300e-03,
     + -4.9092180e-03, -7.9812310e-04,  4.4212668e-03, -3.3939514e-03,
     + -7.2093517e-03, -1.5061752e-03, -2.1790276e-03,  1.4746394e-03,
     + -4.8673779e-03,
     +  1.1310592e+04,  8.2438120e+03,  6.3946795e+03,  5.5721732e+03,
     +  3.9155120e+03,  1.4509160e+03,  1.6306534e+02,  1.8111004e+01,
     +  2.4532432e+00,  3.9906005e-01,  1.3720495e-01,  2.4843197e-02,
     +  4.8931807e-03,  5.2670889e-03, -5.7230789e-03, -4.0590032e-03,
     + -1.8316406e-03, -6.2836495e-03,  7.8719048e-04, -2.2516442e-03,
     +  2.6597979e-03,  3.9380942e-03,  7.1208444e-04,  3.8505427e-04,
     + -6.3736581e-04,  2.3748684e-03,  3.5456973e-03, -5.0052621e-03,
     +  3.9311596e-03, -5.4470909e-03, -3.0669774e-03, -2.1795846e-04,
     + -1.5477738e-04,  4.8257922e-03, -1.2766470e-03, -5.6415973e-03,
     +  5.5586491e-03 /
*
* spline fit
      if (ifirst .eq. 0) then
* spline fit of the vl coefficients
         ind=1
         do ilam=1,9
           call dcopy(37,vl(ind),1,vec,1)
*    evaluate derivative at first point
           der1=(vec(2)-vec(1))/(rr(2)-rr(1))
           call dspline(rr,vec,37,der1,0d0,csplin(1,ilam))
           ind = ind + 37
         enddo
         ifirst = 1
       end if
* r^-6 fit to at R = 15 bohr for isotropic part of potential
       c6sum = -5.2883574764d+06
* switching function for long-range
       switch_lr=0.5*(tanh(0.5*(r - 18.d0)) + 1.d0)
* determine splined coefficients at R=r
       ind=1
       do ilam=1,9
         call dcopy(37,vl(ind),1,vec,1)
         call dsplint(rr,vec,csplin(1,ilam),37,r,vvx)
* kill anisotropic terms at large R
         vvx = (1.d0 - switch_lr)*vvx
         if (ilam.eq.1) then
* merge with asymptotic form
            vvx = vvx + switch_lr*c6sum/(r**6)
         endif
         v(ilam)=vvx
         call dcopy(37,vl(ind),1,vec,1)
         ind = ind + 37
       enddo
       call dcopy(8,v(2),1,vvl(1),1)
* convert to hartree
       econv=1.d0/219474.6d0
       call dscal(8,econv,vvl,1)
* isotropic term 
       vv0 = v(1)*econv
*
       return
       end
*===========================eof===============================