*  system:  ND3-He, CCSD(T)/F-12 calculations of Gubbels et al.
*  [JCP 136, 074301 (2012)], with the molecular center of mass
*  shifted for ND3 [Tkac et al., PCCP, to be published].
*
*  C3 axis of NH3 defined to lie along z axis.  One N-H bond lies
*
      include "common/syusr"
      include "common/ground"
      include "common/bausr"
c
* ------------------------------------------------------------------------
      subroutine driver
      implicit double precision (a-h,o-z)
      common /covvl/ vvl(25)
      include "common/parpot"
      integer i
      double precision PI, DEG, S4PI
      parameter (PI=3.14159265358979323846d0, DEG=PI/180d0,
     +  S4PI=2d0*dsqrt(PI))
      potnam='Gubbels/Tkac ND3-He PES'
      ec = 219474.6d0
      print *, potnam
1     print *, 'R (bohr):'
      read (5, *, end=99) r
*
* if r < 0, then output list of vlm's into a file (after 1st call)
      if (r .le. 0.d0) goto 99
      call pot(vv0,r)
      write (6, 100) vv0 * S4PI * ec, vvl * ec
100   format(' v',/,25(1pe12.4))
      goto 1
99    rr=3.5d0
      dr=0.5d0
      open (unit=12,file='nd3he_vlms.dat')
      write(12,109)
109   format(' R/bohr v00  v10  v20  v30  v40  v50  v60  v70',
     :   '  v80  v90  v10,0 v33  v43  v53  v63  v73  v83  v93',
     :   '  v10,3 v66  v76  v86  v96  v10,6 v99 v10,9')
      do i=1,40
        call pot(vv0,rr)
        write (12,110) rr, vv0 * S4PI, (vvl(j),j=1,25)
110     format(f7.2,23(1pe16.8))
        rr = rr + dr
      enddo
      close(12)
      end
! 99    end
c
* ------------------------------------------------------------------------
c
      subroutine loapot(iunit,filnam)
      implicit double precision (a-h,o-z)
      character*(*) filnam
      include "common/parbas"
      include "common/parpot" 
      common /conlam/ nlam, nlammx, lamnum(2)
      common /cosysi/ nscode, isicod, nterm
      potnam='Gubbels/Tkac ND3-He PES'
*
      nterm = 4
      mproj(1) = 0
      mproj(2) = 3
      mproj(3) = 6
      mproj(4) = 9
      lammin(1) = 1
      lammin(2) = 3
      lammin(3) = 6
      lammin(4) = 10
      lammax(1) = 10
      lammax(2) = 10
      lammax(3) = 10
      lammax(4) = 10
*
      ipotsy = 3
*
      ntv(1)=1
      ivcol(1,1)=0
      ivrow(1,1)=0
*  calculate total number of anisotropic terms
      nlam = 0
      do i=1,nterm
        lmin = lammin(i)
        lmax = lammax(i)
        do lb = lmin, lmax
          nlam = nlam + 1
        end do
      end do
      nlammx = nlam
      return
      end
* ----------------------------------------------------------------------
      subroutine pot (vv0, r)
*  subroutine to calculate the r-dependent coefficients
*  in atomic units (distance and energy)
* ----------------------------------------------------------------------
*  on entry:
*    r:          interparticle distance
*  on return:
*    vv0         contains isotropic term [ v00/sqrt(2) ]
*  variable in common block /covvl/
*    vvl:        vector of length 25 to store r-dependence of each term
*                in potential expansion
*    vvl(1-10):  expansion coefficients in Yl0 (l=1:10) of v(lam,0)
*    vvl(11-18): expansion coefficients in [Yl3 - Y(l,-3)] (l=3:10) of v(lam,3)
*    vvl(19-23): expansion coefficients in [Yl6 + Y(l,-6)] (l=6:10) of v(lam,6)
*    vvl(24-25): expansion coefficients in [Yl9 - Y(l,-9)] (l=9:10) of v(lam,9)
*  variable in common block /coloapot/
*    s4pi:       normalization factor for isotropic potential
*
* author:  paul dagdigian
* latest revision date:  17-oct-2013
* ----------------------------------------------------------------------
* this pes is a fit for 26 values of R, namely
* R = [3.5:0.5:11 12 13 15 20 30] plus 40 50 100 200 at long range
*
* 26 terms are employed in the angular fit
      implicit double precision (a-h,o-z)
      logical ljunk, ihomo, csflag, lljunk
      include "common/parbas"
      dimension v(26)
      dimension csplin(26,26)
      dimension rr(26), vl(676),vec(26)
      common /colpar/ ljunk(5),csflag,lljunk(2),ihomo
      common /covvl/ vvl(25)
* hyperbolic tangent scaling factor
      data alph /0.75d0/
      data rmax /12.d0/
* sqrt(4*pi)
      s4pi = 3.544907701811032d0
* here are the 26 values of R
      data rr/3.5d0,4d0,4.5d0,5d0,5.5d0,6d0,6.5d0,7d0,7.5d0,8d0,
     +  8.5d0,9d0,9.5d0,10d0,10.5d0,11d0,11.5d0,12d0,13d0,15d0,
     +  20d0,30.d0,
* long-range [-C6/R^6] points
     +  40.d0, 50.d0, 100.d0, 200.d0 /
* here are column ordered angular expansion coefficients (26 total) for the
* potential at each of 26 values of R (680 values)
      data vl/
     + 2.2018676e+04, 1.2596218e+04, 4.4411318e+03, 1.4178537e+03,
     + 3.6504640e+02, 2.9489200e+01, -5.7839800e+01, -6.6562900e+01,
     + -5.4792600e+01, -4.0822800e+01, -2.9373100e+01, -2.0959900e+01,
     + -1.5022400e+01, -1.0880000e+01, -7.9720000e+00, -5.9105000e+00,
     + -4.4359000e+00, -3.3732000e+00, -2.0320000e+00, -8.3650000e-01,
     + -1.4280000e-01, -1.2200000e-02, -2.2312500e-03, -5.8490900e-04,
     + -9.1392000e-06, -1.4280000e-07,
     + -2.1436971e+03, -7.4927970e+02, -1.5795650e+02, -7.2275700e+01,
     + -2.1485500e+01, -7.1089000e+00, -2.2265000e+00, -9.1850000e-01,
     + -5.3950000e-01, -4.1380000e-01, -3.4220000e-01, -2.7630000e-01,
     + -2.1210000e-01, -1.5650000e-01, -1.1290000e-01, -8.0300000e-02,
     + -5.6900000e-02, -4.0600000e-02, -2.3500000e-02, -1.0600000e-02,
     + -1.5000000e-03, -1.0000000e-04, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + -2.0142602e+03, -8.7595670e+02, -5.2283000e+01, 9.6894200e+01,
     + 8.9573600e+01, 5.4945700e+01, 2.8662600e+01, 1.3429000e+01,
     + 5.7026000e+00, 2.1069000e+00, 5.6980000e-01, -1.1600000e-02,
     + -1.8430000e-01, -2.0240000e-01, -1.7150000e-01, -1.3060000e-01,
     + -9.4400000e-02, -6.7700000e-02, -3.9200000e-02, -1.7300000e-02,
     + -2.8000000e-03, -2.0000000e-04, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + 3.3999041e+03, 1.9108060e+03, 7.1816150e+02, 2.6262990e+02,
     + 8.9419400e+01, 2.7509800e+01, 6.6196000e+00, 3.0450000e-01,
     + -1.1781000e+00, -1.2221000e+00, -9.4840000e-01, -6.7760000e-01,
     + -4.7360000e-01, -3.3190000e-01, -2.3300000e-01, -1.6430000e-01,
     + -1.1650000e-01, -8.3400000e-02, -4.5000000e-02, -1.5500000e-02,
     + -1.9000000e-03, -1.0000000e-04, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + 3.1900540e+02, 1.9600760e+02, 5.3172200e+01, 3.8250000e+00,
     + -4.8493000e+00, -4.5114000e+00, -2.7282000e+00, -1.4180000e+00,
     + -6.6950000e-01, -2.9210000e-01, -1.2020000e-01, -4.8100000e-02,
     + -1.8400000e-02, -5.3000000e-03, -8.0000000e-04, 2.0000000e-04,
     + 0.0000000e+00, -2.0000000e-04, -4.0000000e-04, -3.0000000e-04,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + -5.8545450e+02, -3.1322660e+02, -1.0585040e+02, -3.6319900e+01,
     + -1.1355400e+01, -3.1319000e+00, -6.2190000e-01, 1.7500000e-02,
     + 1.1430000e-01, 8.6100000e-02, 5.2800000e-02, 3.3200000e-02,
     + 2.2500000e-02, 1.6400000e-02, 1.1400000e-02, 7.4000000e-03,
     + 4.7000000e-03, 3.0000000e-03, 1.3000000e-03, 4.0000000e-04,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + 7.4574800e+01, 3.4361700e+01, 1.2346100e+01, 5.4200000e+00,
     + 2.2164000e+00, 8.8390000e-01, 3.4640000e-01, 1.3100000e-01,
     + 4.4000000e-02, 1.3300000e-02, 2.4000000e-03, -2.1000000e-03,
     + -3.6000000e-03, -3.2000000e-03, -2.0000000e-03, -9.0000000e-04,
     + -2.0000000e-04, 1.0000000e-04, 1.0000000e-04, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + 8.5356500e+01, 4.4133100e+01, 1.2917600e+01, 3.8789000e+00,
     + 1.0679000e+00, 2.3890000e-01, 2.9000000e-02, -5.9000000e-03,
     + -7.0000000e-04, 6.8000000e-03, 6.7000000e-03, 3.2000000e-03,
     + 1.1000000e-03, 4.0000000e-04, 1.0000000e-04, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + -3.1601000e+01, -1.4771300e+01, -3.8846000e+00, -1.3119000e+00,
     + -4.1590000e-01, -1.1810000e-01, -2.9300000e-02, -1.1300000e-02,
     + -1.1300000e-02, -1.2800000e-02, -9.1000000e-03, -3.6000000e-03,
     + -7.0000000e-04, -1.0000000e-04, 0.0000000e+00, -1.0000000e-04,
     + -1.0000000e-04, -1.0000000e-04, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + -9.3406000e+00, -4.6845000e+00, -1.0654000e+00, -2.3680000e-01,
     + -4.3300000e-02, -2.8000000e-03, 5.7000000e-03, 1.8000000e-03,
     + -3.5000000e-03, -4.7000000e-03, -2.5000000e-03, -3.0000000e-04,
     + 3.0000000e-04, 3.0000000e-04, 1.0000000e-04, 1.0000000e-04,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + 9.3118000e+00, 4.1187000e+00, 7.6550000e-01, 2.0020000e-01,
     + 4.8000000e-02, 5.2000000e-03, -4.0000000e-03, 5.3000000e-03,
     + 1.2600000e-02, 1.2500000e-02, 7.6000000e-03, 2.8000000e-03,
     + 8.0000000e-04, 4.0000000e-04, 3.0000000e-04, 2.0000000e-04,
     + 1.0000000e-04, 1.0000000e-04, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + 6.1912558e+03, 3.4851185e+03, 1.2856202e+03, 4.5293340e+02,
     + 1.4891110e+02, 4.3852900e+01, 9.9910000e+00, 3.1600000e-01,
     + -1.7385000e+00, -1.6914000e+00, -1.2455000e+00, -8.4560000e-01,
     + -5.6410000e-01, -3.8060000e-01, -2.5980000e-01, -1.7940000e-01,
     + -1.2530000e-01, -8.8700000e-02, -4.6300000e-02, -1.4700000e-02,
     + -1.6000000e-03, -1.0000000e-04, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + -2.0848385e+03, -1.1063426e+03, -4.0257920e+02, -1.4930880e+02,
     + -5.1550100e+01, -1.6605600e+01, -4.6012000e+00, -8.2460000e-01,
     + 1.9290000e-01, 3.5230000e-01, 2.9610000e-01, 2.1540000e-01,
     + 1.5310000e-01, 1.1060000e-01, 7.7400000e-02, 5.2600000e-02,
     + 3.5200000e-02, 2.3600000e-02, 1.1200000e-02, 3.1000000e-03,
     + 3.0000000e-04, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + -2.1717350e+02, -1.3090790e+02, -4.2129500e+01, -1.0774000e+01,
     + -1.9471000e+00, 1.7560000e-01, 4.3880000e-01, 3.2190000e-01,
     + 1.8300000e-01, 9.2100000e-02, 4.5100000e-02, 2.3100000e-02,
     + 1.2200000e-02, 7.0000000e-03, 4.5000000e-03, 3.1000000e-03,
     + 2.2000000e-03, 1.5000000e-03, 6.0000000e-04, 1.0000000e-04,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + 3.7158900e+02, 1.9470590e+02, 6.3478500e+01, 2.1420600e+01,
     + 6.8602000e+00, 2.0536000e+00, 5.4540000e-01, 1.0990000e-01,
     + 3.3000000e-03, -9.9000000e-03, -9.0000000e-03, -9.4000000e-03,
     + -9.8000000e-03, -9.4000000e-03, -6.7000000e-03, -3.6000000e-03,
     + -1.4000000e-03, -3.0000000e-04, 1.0000000e-04, -1.0000000e-04,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + -5.5902900e+01, -2.5836500e+01, -7.8461000e+00, -3.1407000e+00,
     + -1.1561000e+00, -4.1230000e-01, -1.4900000e-01, -5.9300000e-02,
     + -2.6600000e-02, -1.5100000e-02, -7.2000000e-03, -8.0000000e-04,
     + 2.0000000e-03, 1.8000000e-03, 9.0000000e-04, 2.0000000e-04,
     + -2.0000000e-04, -3.0000000e-04, -1.0000000e-04, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + -4.8840800e+01, -2.4546900e+01, -6.5330000e+00, -1.8848000e+00,
     + -5.1470000e-01, -1.1960000e-01, -2.0400000e-02, -6.8000000e-03,
     + -1.0400000e-02, -1.2100000e-02, -8.1000000e-03, -3.0000000e-03,
     + -6.0000000e-04, 0.0000000e+00, 2.0000000e-04, 1.0000000e-04,
     + 1.0000000e-04, 1.0000000e-04, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + 2.2641300e+01, 1.0198100e+01, 2.2786000e+00, 6.9110000e-01,
     + 1.8970000e-01, 3.6500000e-02, 6.3000000e-03, 1.0400000e-02,
     + 1.4800000e-02, 1.4700000e-02, 9.5000000e-03, 3.7000000e-03,
     + 1.0000000e-03, 5.0000000e-04, 4.0000000e-04, 3.0000000e-04,
     + 3.0000000e-04, 2.0000000e-04, 1.0000000e-04, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + 4.4439000e+00, 2.4721000e+00, 5.4040000e-01, 1.0250000e-01,
     + 1.3900000e-02, -3.4000000e-03, -6.9000000e-03, -1.9000000e-03,
     + 4.1000000e-03, 5.3000000e-03, 3.3000000e-03, 1.1000000e-03,
     + 2.0000000e-04, 0.0000000e+00, -1.0000000e-04, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + 4.1763510e+02, 2.2235230e+02, 7.5508100e+01, 2.5804000e+01,
     + 8.5135000e+00, 2.6703000e+00, 7.8130000e-01, 2.0620000e-01,
     + 4.0600000e-02, -5.0000000e-04, -9.6000000e-03, -1.0200000e-02,
     + -8.6000000e-03, -7.3000000e-03, -4.8000000e-03, -2.5000000e-03,
     + -9.0000000e-04, 0.0000000e+00, 1.0000000e-04, -1.0000000e-04,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + -1.7908520e+02, -9.0357600e+01, -2.7882800e+01, -9.4377000e+00,
     + -3.0883000e+00, -9.7400000e-01, -3.0640000e-01, -1.0490000e-01,
     + -4.1100000e-02, -2.1000000e-02, -8.7000000e-03, 1.0000000e-04,
     + 3.6000000e-03, 4.0000000e-03, 2.8000000e-03, 1.4000000e-03,
     + 4.0000000e-04, 0.0000000e+00, -1.0000000e-04, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + 9.1347000e+00, 3.3618000e+00, 7.7320000e-01, 4.0850000e-01,
     + 1.7920000e-01, 7.9400000e-02, 3.6600000e-02, 1.8200000e-02,
     + 9.6000000e-03, 6.7000000e-03, 4.3000000e-03, 1.8000000e-03,
     + 5.0000000e-04, 4.0000000e-04, 5.0000000e-04, 5.0000000e-04,
     + 5.0000000e-04, 4.0000000e-04, 1.0000000e-04, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + 2.6141500e+01, 1.2428200e+01, 2.9367000e+00, 8.2610000e-01,
     + 2.2460000e-01, 5.2500000e-02, 1.4600000e-02, 1.2500000e-02,
     + 1.3500000e-02, 1.2300000e-02, 7.6000000e-03, 2.8000000e-03,
     + 6.0000000e-04, 2.0000000e-04, 0.0000000e+00, 0.0000000e+00,
     + -1.0000000e-04, -1.0000000e-04, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + -1.0195000e+01, -4.3321000e+00, -7.9630000e-01, -2.2440000e-01,
     + -5.9500000e-02, -9.2000000e-03, -2.1000000e-03, -9.5000000e-03,
     + -1.1700000e-02, -1.0100000e-02, -6.2000000e-03, -2.6000000e-03,
     + -1.0000000e-03, -7.0000000e-04, -5.0000000e-04, -3.0000000e-04,
     + -2.0000000e-04, -1.0000000e-04, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + 2.7806200e+01, 1.3217500e+01, 3.2612000e+00, 9.4330000e-01,
     + 2.7890000e-01, 7.2600000e-02, 2.1800000e-02, 1.6400000e-02,
     + 1.0400000e-02, 6.1000000e-03, 3.9000000e-03, 2.7000000e-03,
     + 2.0000000e-03, 1.7000000e-03, 1.2000000e-03, 7.0000000e-04,
     + 4.0000000e-04, 2.0000000e-04, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00,
     + -1.6031900e+01, -7.2203000e+00, -1.4662000e+00, -3.9130000e-01,
     + -1.1000000e-01, -2.2300000e-02, -5.3000000e-03, -1.2200000e-02,
     + -1.2300000e-02, -9.1000000e-03, -5.3000000e-03, -2.6000000e-03,
     + -1.4000000e-03, -9.0000000e-04, -6.0000000e-04, -4.0000000e-04,
     + -3.0000000e-04, -2.0000000e-04, -1.0000000e-04, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,
     + 0.0000000e+00, 0.0000000e+00 /
*
* spline fit
      if (ifirst .eq. 0) then
* spline fit of the vl coefficients
         ind=1
         do ilam=1,26
           call dcopy(26,vl(ind),1,vec,1)
*    evaluate derivative at first point
           der1=(vec(2)-vec(1))/(rr(2)-rr(1))
           call dspline(rr,vec,26,der1,0d0,csplin(1,ilam))
           ind = ind + 26
         enddo
         ifirst = 1
       end if
* determine splined coefficients at R=r
       ind=1
       do ilam=1,26
         call dcopy(26,vl(ind),1,vec,1)
         call dsplint(rr,vec,csplin(1,ilam),26,r,vvx)
         v(ilam)=vvx
         call dcopy(26,vl(ind),1,vec,1)
         ind = ind + 26
       enddo
       call dcopy(25,v(2),1,vvl(1),1)
* convert to hartree
       econv=1.d0/219474.6d0
       call dscal(25,econv,vvl,1)
* and divide by sqrt(2) for mu > 0 terms for consistency
* of tesseral harmonics
       const = 1.d0/sqrt(2.d0)
       call dscal(15,const,vvl(11),1)
* isotropic term - divide by sqrt(4*pi)
       vv0 = v(1)*econv/s4pi
*
       if (r .gt. 200.d0) then
         vv0 = --9139200.d0/r**6*econv/s4pi
         call dscal(25,0.d0,vvl,1)
       end if
       return
       end
