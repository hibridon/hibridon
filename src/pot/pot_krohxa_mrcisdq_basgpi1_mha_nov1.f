*system:  routine for OH(A/X)-Kr system
*         with MRCISD+Q/AVTZDK M. Alexanders's PESs     
*         for basgpi1 basis routine
*
*   written by P.j.dagdigian (dec-2011)
*   modified by M. H. Alexander dec 2012 for MRCISD+Q PES
*
*   SET V1 TERMS TO ZERO AND DO NOT SHIFT VSIG ASYMPTOTIC ENERGY
*
*   this pot routine must be run with basgpi1 basis routine
*   (ibasty = 19) and is incompatiable with basgpi routine
*   (ibasty = 4)
*
*   divided V1 PES by sqrt(2).  see mha and corey, jcp 84, 100 (1986)
*
      subroutine driver
      implicit double precision (a-h,o-z)
      character *48 potnam
      logical csflag, ljunk, ihomo, lljunk
      include "common/parbas"
      common /colpar/ ljunk(5),csflag,lljunk(2),ihomo
      common /covvl/ vvl(39)
      common /covpot/ numvib,ivibpi(5)
      potnam='OH(A/X)-Kr Quenching Alexander-Klos MRCISDQ PESs'
      print *, potnam
*  consider only v=0 and 1 vib levels of 2pi state
      numvib = 1
      ivibpi(1)=0
      ivibpi(2)=1
      nterm=4 + 3*(numvib - 1)
      write (6,89) numvib, (ivibpi(i),i=1,numvpi)
89    format(' Number of 2pi vibrational levels =',i3/
     :  5x,'v =',10i3)
      print *
1      print *, ' r (bohr) '
      read (5, *, end=93) r
      if (r .lt. 0.d0) go to 93
      call pot(vv0,r)
      write (6,100) vvl
100   format(' vsig  ',13(pe16.8)/
     :  4(' vsum  ',13(1pe16.8),/,
     :  ' vdif  ',6(1pe16.8),/,
     :  ' v1    ',7(1pe16.8)/))
      goto 1
93    r=4
99    end
* --------------------------------------------------------------------------
      include "common/syusr"
      include "common/bausr"
      include "common/ground"
* --------------------------------------------------------------------------
      subroutine loapot(iunit,filnam)
      character*(*) filnam
      include "common/parbas"
      include "common/parpot"
      common /coselb/ ibasty
      common /covpot/ numvib,ivibpi(5)
      potnam='OH(A/X)-Kr Quenching Alexander-Klos MRCISDQ PESs'
      ibasty=19
      numvib=1
*  consider only v=0 and 1 vib level of 2pi state
      ivibpi(1)=0
      ivibpi(2)=1
      nterm=4 + 3*(numvib - 1)
*  for 2sigma state
      lammin(1)=0
      lammax(1)=12
      mproj(1)=0
*  for first 2pi level
      lammin(2)=0
      lammax(2)=12
      mproj(2)=0
      lammin(3)=2
      lammax(3)=7
      mproj(3)=2
      lammin(4)=1
      lammax(4)=7
      mproj(4)=1
*  for second 2pi level, if included
      lammin(5)=0
      lammax(5)=13
      mproj(5)=0
      lammin(6)=2
      lammax(6)=13
      mproj(6)=2
      lammin(7)=1
      lammax(7)=7
      mproj(7)=1
      return
      end
C---------------------------
      subroutine pot (vv0, r)
* ----------------------------------------------------------------------
*  subroutine to calculate the r-dependent coefficients 
*  in atomic units (distance and energy)
* ----------------------------------------------------------------------
*  on entry:
*    r:      interparticle distance
*  on return:
*    vv0      dummy term here
*  variable in common block /covvl/
*    vvl:     vector to store r-dependence of each term
*             in potential expansion
*    vvl(1:13) expansion of vsigma in d(l,0) terms, for l=0-12
*    vvl(14:26) expansion of vsum for pi(v=0) in d(l,0) terms for l=0:12
*    vvl(27:32) expansion of vdif for pi(v=0) in d(l,2) terms for l=2:7
*    vvl(33:39) expansion of v1 coupling of sigma to pi(v=0) in d(l,1) terms with l=1:7
*    and more terms if numvib > 0
*
* author:  paul dagdigian
* latest revision date:  24-jan-2012
* latest revision by millard alexander:  5-dec-2012
* ----------------------------------------------------------------------
* this pes is a fit to 30 points in R and 29 angles, namely
* R = [2.9:.1:4 4.25:.25:6.5 7:.5:8 9 12 20 30]
* theta=[2 5:5:50 60:10:130 135:5:175 178]
* the MRCI+Q values of the adiabatic V1Ap,V2ap MRCI+Q points as well
* as the calculated mixing angle chi determined by Molpro's DDR procedure were
* used to determined the three diabatic PES's Viap, Vsigma, Vsigmapi as follows:
* Vpiap=cos^2(chi)*V1Ap+sin^2(chi)V2Ap
* Vsigma=sin^2(chi)*V1ap+cos^2(chi)V2Ap
* Vsigma-pi=sin(chi)*cos(chi)*(V1Ap-V2Ap)
* Vdiff=0.5*(V1A2p-Vpiap)
* Vsum=0.5*(V1A2p+Vpiap)

* 13 terms (l=0-12) are used in the fit of Vsigma and Vsum in Legendre polynomials
*  7 terms (l=1-7) are used in the fit of Vsigma-pi in d1 reduced rotation matrix elements
*  6 terms (l=2-7) are used in the fit of Vdif in d2 reduced rotation matrix elements

      implicit double precision (a-h,o-z)
      logical ljunk, ihomo, csflag, lljunk
      include "common/parbas"
      dimension vsig(13), vsum(13), vdif(6),vsigpi(7)
      dimension csplin_sig(30,13),csplin_sum(30,13),csplin_dif(30,6),
     :          csplin_sigpi(30,7)
*     dimension d0(121),d1(81),d2(81),aa(121)
*     dimension xsig(11),xpi(11),x1(10),x2(9),kpvt(11),
*     :          qraux(11), work(121),rsd(11)
      dimension FCF(2) ! stores Franck-Condon factors
      dimension rr(30), vlsig(390),vlsum(390),vldif(180),
     : vlsigpi(210),vec(39)
      common /colpar/ ljunk(5),csflag,lljunk(2),ihomo
      common /covvl/ vvl(39)
      common /covpot/ numvib,ivibpi(5)

      data zero, one, half /0.d0,1.d0,0.5d0/
* hyperbolic tangent scaling factor
      data alph /1.2d0/
      data rmax /13d0/
* here are the values of R
      data rr/2.9d0,3d0,3.1d0,3.2d0,3.3d0,3.4d0,3.5d0,3.6d0,3.7d0,3.8d0,
     + 3.9d0,4d0,4.25d0,4.5d0,4.75d0,5d0,5.25d0,5.5d0,5.75d0,6d0,6.25d0,
     + 6.5d0,7d0,7.5d0,8d0,9d0,10d0,12d0,20d0,30d0/
* here are column ordered legendre expansion coefficients (l=0-12) for vsigma
* at each of 30 values of R (390 values)
      data vlsig/
     + 9.0097272d+4, 7.5488238d+4, 6.2198588d+4, 5.1081959d+4,
     + 4.2578869d+4, 3.5475703d+4, 2.9684406d+4, 2.4802260d+4,
     + 2.0703424d+4, 1.7201184d+4, 1.4223234d+4, 1.1734537d+4,
     + 7.1465518d+3, 4.2717290d+3, 2.4755368d+3, 1.3637694d+3,
     + 6.8392403d+2, 2.7751109d+2, 4.4541869d+1, -8.0989106d+1,
     + -1.4194888d+2, -1.6506505d+2, -1.5764908d+2, -1.2731361d+2,
     + -9.4230368d+1, -4.7683362d+1, -2.4672387d+1, -8.0319030d0,
     + -2.1947470d-1, 0d0, 7.4880712d+4, 6.2493619d+4,
     + 5.0779369d+4, 4.1032422d+4, 3.3336838d+4, 2.6990978d+4,
     + 2.1896060d+4, 1.7744448d+4, 1.4379670d+4, 1.1636688d+4,
     + 9.3199401d+3, 7.4140102d+3, 3.9528914d+3, 1.9047210d+3,
     + 7.5635151d+2, 1.6580443d+2, -1.0779428d+2, -2.1676500d+2,
     + -2.4163945d+2, -2.2837001d+2, -2.0108908d+2, -1.7109110d+2,
     + -1.1668540d+2, -7.6244630d+1, -5.5533381d+1, -2.3707448d+1,
     + -8.6036796d0, -2.0470069d0, 3.2175234d-8, 0d0, 5.8422993d+4,
     + 3.9841829d+4, 2.7883109d+4, 1.8626801d+4, 1.0442886d+4,
     + 4.2921764d+3, -3.4430093d+2, -3.3128210d+3, -5.2450025d+3,
     + -6.4341162d+3, -7.0856348d+3, -7.3234397d+3, -6.6822361d+3,
     + -5.3739574d+3, -4.0555879d+3, -2.9566887d+3, -2.1164745d+3,
     + -1.4988042d+3, -1.0563551d+3, -7.4314282d+2, -5.2263539d+2,
     + -3.6806439d+2, -1.8238140d+2, -9.3925082d+1, -4.9728964d+1,
     + -2.0978817d+1, -6.6287577d0, -1.6773441d0, 1.1892944d-8,
     + 0d0, 8.2171951d+4, 5.9720835d+4, 4.6540801d+4, 3.6774402d+4,
     + 2.8478936d+4, 2.2182778d+4, 1.6943644d+4, 1.3023575d+4,
     + 9.9498844d+3, 7.7314960d+3, 5.9270331d+3, 4.4758914d+3,
     + 2.0721796d+3, 7.0699894d+2, 6.3364914d0, -3.0217591d+2,
     + -3.9731236d+2, -3.8399937d+2, -3.3124899d+2, -2.6874140d+2,
     + -2.1054447d+2, -1.6152932d+2, -9.2489781d+1, -5.0969688d+1,
     + -2.2601216d+1, -1.2035320d+1, -4.2775698d0, -1.0286376d0,
     + -3.0353135d-8, 0d0, 7.7568184d+4, 6.0833814d+4,
     + 4.6624870d+4, 3.6086499d+4, 2.8709734d+4, 2.3208762d+4,
     + 1.8744895d+4, 1.4963504d+4, 1.1674745d+4, 8.9720288d+3,
     + 6.8515491d+3, 5.1914925d+3, 2.4763097d+3, 1.0270825d+3,
     + 3.1499170d+2, -1.5629192d+1, -1.4724648d+2, -1.7522698d+2,
     + -1.6315728d+2, -1.3713397d+2, -1.0972483d+2, -8.4425244d+1,
     + -4.5707552d+1, -1.7106560d+1, -9.2813951d0, -7.3354459d-2,
     + -1.0878799d0, -2.1344141d-1, 1.4469455d-8, 0d0,
     + 5.6525855d+4, 4.6847748d+4, 3.5101852d+4, 2.6077124d+4,
     + 2.0012104d+4, 1.5402244d+4, 1.2237322d+4, 9.2962014d+3,
     + 7.1402065d+3, 5.3945986d+3, 4.1840877d+3, 3.2640510d+3,
     + 1.6802429d+3, 8.2401184d+2, 3.7600749d+2, 1.4015293d+2,
     + 2.2523322d+1, -2.7722593d+1, -4.3635909d+1, -4.4502230d+1,
     + -3.9069823d+1, -3.1043955d+1, -1.8008129d+1, -1.5475182d+1,
     + -8.5808890d0, 6.2951255d0, -1.7629030d-1, 6.7981068d-2,
     + -2.4800982d-9, 0d0, 3.7997236d+4, 2.8980652d+4,
     + 2.0797459d+4, 1.5063639d+4, 1.0515407d+4, 7.1615702d+3,
     + 5.4813093d+3, 4.0732390d+3, 3.2221247d+3, 2.2664712d+3,
     + 1.7233606d+3, 1.3898409d+3, 7.8965240d+2, 4.4032604d+2,
     + 2.3595091d+2, 1.1282913d+2, 4.9555146d+1, 1.1125809d+1,
     + -5.1593727d0, -1.1053367d+1, -1.2314523d+1, -1.1790153d+1,
     + -1.1010151d+1, -9.3293999d0, -4.9257509d0, 7.5137370d0,
     + -1.5346883d-1, 7.4363311d-3, -3.2939302d-11, 0d0,
     + 2.5126860d+4, 1.7104777d+4, 1.2619507d+4, 9.2776917d+3,
     + 6.5923186d+3, 4.4547167d+3, 3.3250519d+3, 2.4933593d+3,
     + 2.0947927d+3, 1.5258585d+3, 1.1371396d+3, 8.2808767d+2,
     + 3.7548687d+2, 2.0547479d+2, 1.1315920d+2, 5.8452258d+1,
     + 3.3844129d+1, 1.2791743d+1, 2.3905588d0, -1.7491408d0,
     + -3.9357638d0, -4.3456541d0, -1.9175703d0, 6.4826578d0,
     + 3.5414898d0, 5.4929225d0, -8.8980601d-2, -6.4014633d-2,
     + 7.7275578d-10, 0d0, 1.6861604d+4, 1.0602341d+4,
     + 8.7354029d+3, 6.2992588d+3, 4.5332185d+3, 3.1465765d+3,
     + 2.0004274d+3, 1.4568531d+3, 1.1735742d+3, 7.4377208d+2,
     + 5.1667937d+2, 3.3376943d+2, 1.5981210d+2, 9.1586927d+1,
     + 4.5706022d+1, 2.4583567d+1, 1.6796161d+1, 9.0847540d0,
     + 3.8615851d0, 3.1282139d0, 3.0021436d0, 3.5790049d0,
     + 5.2930431d0, 1.3894617d0, 4.1800922d0, 1.3633770d0,
     + -7.9424359d-2, 4.7803344d-2, -1.6499950d-10, 0d0,
     + 1.1740702d+4, 6.8042738d+3, 5.2236387d+3, 4.2023088d+3,
     + 3.3756969d+3, 2.6334392d+3, 1.5598755d+3, 1.1343908d+3,
     + 7.3250384d+2, 6.1688204d+2, 4.2308291d+2, 2.6362663d+2,
     + 1.3104745d+2, 5.7310222d+1, 1.7020083d+1, 9.5416351d0,
     + 2.9354655d0, 6.4843793d0, 5.2606631d0, 4.8941467d0,
     + 4.7297527d0, 3.2621484d0, 4.7387904d-3, -5.4388680d0,
     + -1.9256425d0, -2.8020023d0, 1.1255405d-1, -9.6845684d-2,
     + 1.7714611d-10, 0d0, 7.9117271d+3, 5.4060795d+3,
     + 3.2851728d+3, 2.3243803d+3, 1.7925377d+3, 1.5707709d+3,
     + 8.8867661d+2, 6.6928581d+2, 2.9402008d+2, 2.6558116d+2,
     + 1.9117785d+2, 1.7766494d+2, 8.1762830d+1, 2.7026630d+1,
     + 1.6525614d0, 5.1176755d0, -1.5562571d0, 3.2886186d0,
     + 2.7012481d0, -1.9500245d-1, -1.0953304d0, -2.2592016d0,
     + -2.5916212d0, 3.1682944d0, -3.1703365d0, -4.5871509d0,
     + 5.3179571d-2, 3.2696386d-2, 1.4169124d-10, 0d0,
     + 6.3482884d+3, 5.3891241d+3, 3.2317636d+3, 1.7305062d+3,
     + 8.5776692d+2, 6.3883691d+2, 6.0300712d+2, 3.8003024d+2,
     + 2.1271275d+2, 2.0945947d+2, 1.3920608d+2, 1.1779405d+2,
     + 3.9035663d+1, 2.4769214d0, 3.6532021d0, 3.6359461d0,
     + 1.3137998d0, -1.3153155d0, -8.9393563d-1, -2.2783597d0,
     + -1.9922773d0, -1.0958994d0, -4.9109244d-1, 1.4437972d0,
     + 3.0153626d0, -3.4888413d0, -4.8584037d-2, 7.1193015d-2,
     + -2.8070054d-10, 0d0, 3.5981021d+3, 2.9950120d+3,
     + 1.7893580d+3, 1.1867527d+3, 7.5637663d+2, 2.8671234d+2,
     + 2.3286467d+2, 5.2379379d+1, 1.0002262d+2, -7.3074266d+1,
     + -3.6061771d+1, -2.6094477d+1, -9.9266725d0, -2.8299992d0,
     + 4.1752676d0, -9.4554011d-1, -4.2491601d-1, -3.4075509d0,
     + -1.6737998d0, -4.7745907d-1, 1.7518970d-1, 7.5271442d-1,
     + 1.5129914d0, -2.4489217d0, 3.9998487d0, -1.1520598d0,
     + -3.8585187d-2, -5.2332038d-2, 2.4303001d-10, 0d0/

* here are column ordered legendre expansion coefficients (l=0-12) for vsum
* at each of 30 values of R (390 values)
      data vlsum/
     + 8.2479276d+4, 6.6476650d+4, 5.2362759d+4, 4.0024526d+4,
     + 2.9071370d+4, 1.9734799d+4, 1.1555083d+4, 4.5400236d+3,
     + -1.4602700d+3, -6.5408460d+3, -1.0833848d+4, -1.4465983d+4,
     + -2.1234245d+4, -2.5628075d+4, -2.8447931d+4, -3.0237053d+4,
     + -3.1356803d+4, -3.2045984d+4, -3.2459926d+4, -3.2701523d+4,
     + -3.2836356d+4, -3.2906357d+4, -3.2948116d+4, -3.2938165d+4,
     + -3.2916331d+4, -3.2880434d+4, -3.2861202d+4, -3.2846035d+4,
     + -3.2838878d+4, -3.2838668d+4, 6.9705769d+4, 5.5790585d+4,
     + 4.4909408d+4, 3.6117827d+4, 2.9199735d+4, 2.3890510d+4,
     + 1.9626602d+4, 1.6193702d+4, 1.3395335d+4, 1.1093772d+4,
     + 9.2187794d+3, 7.6680837d+3, 4.8668848d+3, 3.0719904d+3,
     + 1.9186175d+3, 1.1757612d+3, 6.9693031d+2, 3.9295199d+2,
     + 2.0457338d+2, 9.0082219d+1, 2.3225685d+1, -1.3385074d+1,
     + -3.8528600d+1, -3.6722597d+1, -2.9939458d+1, -1.4744058d+1,
     + -6.4368111d0, -1.5328553d0, -4.2335656d-3, -3.6693819d-13,
     + 1.0598467d+5, 8.5129001d+4, 6.8904120d+4, 5.5988714d+4,
     + 4.5789593d+4, 3.7431802d+4, 3.0894573d+4, 2.5438416d+4,
     + 2.0990918d+4, 1.7363109d+4, 1.4390590d+4, 1.1948588d+4,
     + 7.4761065d+3, 4.6477880d+3, 2.8592490d+3, 1.7291821d+3,
     + 1.0156110d+3, 5.7118062d+2, 2.9962494d+2, 1.3800895d+2,
     + 4.5590466d+1, -3.9646449d0, -3.6851626d+1, -3.6113033d+1,
     + -2.7535282d+1, -1.4910080d+1, -6.8229442d0, -2.0350463d0,
     + -2.1548637d-2, 6.7878436d-13, 8.2905960d+4, 6.5373643d+4,
     + 5.1197292d+4, 4.0485585d+4, 3.2201287d+4, 2.5384122d+4,
     + 2.0310964d+4, 1.6245098d+4, 1.3072830d+4, 1.0491740d+4,
     + 8.4756025d+3, 6.8859121d+3, 4.1413737d+3, 2.5447669d+3,
     + 1.5747459d+3, 9.6742748d+2, 5.7979161d+2, 3.3563601d+2,
     + 1.8283047d+2, 9.0098229d+1, 3.5608813d+1, 5.2766082d0,
     + -1.6585232d+1, -1.6583882d+1, -1.0797475d+1, -6.6123409d0,
     + -3.0230416d0, -7.2209168d-1, 1.5223040d-2, -1.0532690d-12,
     + 6.6459109d+4, 5.0240628d+4, 3.7722005d+4, 2.8195384d+4,
     + 2.1375001d+4, 1.6048139d+4, 1.2058102d+4, 9.1641938d+3,
     + 7.1063306d+3, 5.5938297d+3, 4.4306620d+3, 3.5229328d+3,
     + 2.0112050d+3, 1.1785549d+3, 6.9742541d+2, 4.1213955d+2,
     + 2.3868717d+2, 1.3320712d+2, 6.8304099d+1, 3.0135302d+1,
     + 8.5239507d0, -2.7631558d0, -8.8260977d0, -5.4247934d0,
     + -3.7503984d0, -9.3951664d-1, -9.3167414d-1, -1.1811164d-1,
     + 2.3799936d-2, 9.4922637d-13, 5.4213912d+4, 3.9855088d+4,
     + 2.9728040d+4, 2.2035748d+4, 1.6261350d+4, 1.2239866d+4,
     + 9.0049285d+3, 6.8367903d+3, 5.1544624d+3, 3.9459077d+3,
     + 2.9936192d+3, 2.2680590d+3, 1.1773120d+3, 6.3033901d+2,
     + 3.4450086d+2, 1.9039486d+2, 1.0710310d+2, 5.8415241d+1,
     + 2.9385185d+1, 1.2915692d+1, 4.2837491d0, -3.0812054d-1,
     + -2.9412105d0, -3.7065759d0, -2.1592954d0, 1.6539155d0,
     + -1.3584737d-1, -7.6331463d-3, -3.0995971d-2, -1.9810672d-12,
     + 3.9938513d+4, 3.0156780d+4, 2.2691143d+4, 1.7167410d+4,
     + 1.2615636d+4, 9.5739419d+3, 7.0346454d+3, 5.2187363d+3,
     + 3.7743366d+3, 2.8630075d+3, 2.1381201d+3, 1.5666685d+3,
     + 7.3874772d+2, 3.5369743d+2, 1.7363545d+2, 8.8516415d+1,
     + 4.7251361d+1, 2.4766032d+1, 1.2573680d+1, 5.5520871d0,
     + 1.9562075d0, -5.4943466d-1, -2.8333842d0, -3.2303219d0,
     + -1.8280134d0, 1.9499054d0, -8.4908113d-2, -8.7992966d-2,
     + -1.5737255d-2, 2.1913063d-12, 2.7492274d+4, 2.0747577d+4,
     + 1.5261167d+4, 1.1240340d+4, 8.2092775d+3, 6.0278891d+3,
     + 4.4101902d+3, 3.1971714d+3, 2.2093191d+3, 1.6042855d+3,
     + 1.1716538d+3, 8.6833263d+2, 4.1701764d+2, 1.8641320d+2,
     + 8.4077222d+1, 4.0531440d+1, 2.0965746d+1, 1.0598269d+1,
     + 5.8753815d0, 2.9804425d0, 1.6002173d0, 7.9971624d-1,
     + 2.1951470d-1, 1.7843441d0, 8.7534946d-1, 1.4681032d0,
     + -8.2960875d-2, -2.3549938d-3, 4.1688645d-2, -2.5517763d-12,
     + 1.8335052d+4, 1.2786958d+4, 9.0011972d+3, 6.4508091d+3,
     + 4.8365663d+3, 3.5358939d+3, 2.6991916d+3, 1.9484153d+3,
     + 1.3612345d+3, 1.0224872d+3, 7.4687389d+2, 5.5872714d+2,
     + 2.4277773d+2, 9.8369092d+1, 4.1937162d+1, 1.8082460d+1,
     + 7.5994874d0, 3.3765380d0, 2.1673036d0, 1.5955564d0,
     + 1.6384422d0, 1.8534353d0, 1.8515273d0, 6.1632932d-1,
     + 1.2015401d0, 2.7054746d-1, -5.8792871d-3, 7.8226702d-3,
     + 2.3020062d-3, 3.1581540d-12, 1.1696417d+4, 7.6327853d+3,
     + 5.2754058d+3, 3.5014322d+3, 2.4956633d+3, 1.7573267d+3,
     + 1.3774391d+3, 9.5289682d+2, 7.3009705d+2, 4.8386826d+2,
     + 3.5430024d+2, 2.7193481d+2, 1.0770172d+2, 4.4534956d+1,
     + 2.1693687d+1, 9.0627629d0, 4.9951325d0, 3.2540396d0,
     + 2.4645655d0, 2.0063746d0, 1.5499843d0, 1.4393500d0,
     + 3.7323591d-1, -1.3143038d0, -4.7189655d-1, -7.2027018d-1,
     + 7.4017090d-3, -6.2910988d-2, -4.6059448d-2, -3.0314004d-12,
     + 7.4315736d+3, 4.7767474d+3, 3.2974691d+3, 2.0266049d+3,
     + 1.4896184d+3, 9.2248351d+2, 7.4378473d+2, 4.7050721d+2,
     + 4.1153531d+2, 2.8031049d+2, 1.9604503d+2, 1.1764402d+2,
     + 4.6080560d+1, 2.2204639d+1, 1.3287617d+1, 4.8125583d0,
     + 4.0469924d0, 3.3128714d0, 1.7393487d0, 8.6678288d-1,
     + -2.0021770d-1, -2.9926174d-1, -6.2236569d-1, 6.9542066d-1,
     + -8.9557696d-1, -1.2468422d0, 5.3797932d-2, 7.6425459d-2,
     + 1.4110310d-2, 2.9477406d-12, 6.1337383d+3, 4.2173546d+3,
     + 2.7819160d+3, 2.0025576d+3, 1.3240814d+3, 8.0331004d+2,
     + 4.8303804d+2, 3.2640429d+2, 2.3402661d+2, 1.4881642d+2,
     + 1.0391313d+2, 6.0534266d+1, 2.7839380d+1, 1.7487298d+1,
     + 5.6324783d0, 1.2534945d0, 6.3842191d-1, 4.9591273d-1,
     + -3.5684591d-1, -2.5529561d-1, -4.9227925d-1, -6.1678203d-1,
     + -2.1476465d-1, 3.5289138d-1, 8.8249760d-1, -9.4492006d-1,
     + 2.4572742d-2, 5.8776326d-3, 2.7355513d-2, -1.0842108d-11,
     + 3.6643403d+3, 2.6795748d+3, 1.7205086d+3, 1.2829987d+3,
     + 6.1038174d+2, 4.5779870d+2, 2.8111385d+2, 2.3902452d+2,
     + 1.1870850d+2, 1.5336221d+2, 9.7315771d+1, 6.7484060d+1,
     + 2.6059680d+1, 9.8646919d0, 1.2304909d0, 8.4070798d-1,
     + 3.2349654d-1, -2.3267007d-1, -4.2127877d-1, -1.5128243d-1,
     + 4.8916707d-2, -1.1452836d-1, 3.2224615d-1, -5.4263209d-1,
     + 1.1199372d0, -2.4395422d-1, -1.3138183d-2, -3.5861905d-2,
     + -1.4194853d-2, 1.0862939d-11/
     
* here are expansion coefficients for Vdif in terms of d2 matrix elements for l=2-7
*  (180 terms)
      data vldif/
     + 3.0501378d+4, 2.8091122d+4, 2.5841560d+4, 2.3420730d+4,
     + 2.1236842d+4, 1.8916737d+4, 1.6901016d+4, 1.4987227d+4,
     + 1.3229740d+4, 1.1588942d+4, 1.0081236d+4, 8.7409502d+3,
     + 5.9882188d+3, 4.0449181d+3, 2.7020493d+3, 1.7899750d+3,
     + 1.1764017d+3, 7.6863771d+2, 4.9809764d+2, 3.2061989d+2,
     + 2.0467589d+2, 1.2927366d+2, 5.0340750d+1, 1.9105034d+1,
     + 6.7200543d0, -1.2520563d0, -1.7561824d0, -6.9115943d-1,
     + 2.8468211d-2, 0d0, 2.3897687d+2, 9.9104119d+2, 4.8847062d+2,
     + 3.2793788d+2, 1.6670288d+2, -2.3968842d+2, -4.2311532d+2,
     + -5.2791843d+2, -5.4599599d+2, -5.4110360d+2, -5.0867483d+2,
     + -4.4606601d+2, -3.0868115d+2, -1.6703287d+2, -7.4450379d+1,
     + -2.1972351d+1, 6.0802414d0, 1.9570989d+1, 2.2884663d+1,
     + 2.2537689d+1, 2.0358644d+1, 1.7343681d+1, 1.1988670d+1,
     + 8.1212486d0, 7.8898481d0, 2.2131249d0, 1.1654830d-1,
     + -1.7333982d-2, -1.7477233d-2, 0d0, -4.4561287d+3,
     + -4.0024407d+3, -3.8732166d+3, -3.4580580d+3, -2.9220274d+3,
     + -2.5473804d+3, -2.2267241d+3, -1.7545924d+3, -1.3002160d+3,
     + -9.3722355d+2, -6.8660612d+2, -5.1402168d+2, -2.3977095d+2,
     + -9.0557281d+1, -2.3643438d+1, 4.9273018d0, 1.7164641d+1,
     + 2.1644381d+1, 2.0196781d+1, 1.7463005d+1, 1.4360246d+1,
     + 1.1087349d+1, 6.7939480d0, 5.8433553d0, 3.4570476d0,
     + 2.5142842d0, -4.8888527d-2, 1.4438246d-2, -2.4765839d-2,
     + 0d0, -7.5449582d+2, -1.5758103d+3, -1.6102881d+3,
     + -1.5353594d+3, -1.4607473d+3, -1.1529688d+3, -1.1209886d+3,
     + -8.6777028d+2, -7.2125532d+2, -4.9892151d+2, -3.8339453d+2,
     + -3.0365506d+2, -1.4176704d+2, -6.7406606d+1, -3.7000596d+1,
     + -2.3210921d+1, -1.0947877d+1, -5.1377020d0, -2.7524187d0,
     + -1.6071256d0, -6.1135109d-1, -1.8188591d-1, 8.2916986d-1,
     + -1.7780191d-1, -1.1428286d-1, 2.6301811d0, -1.0898552d-1,
     + -3.2290495d-2, 2.8028881d-2, 0d0, 9.7893238d+2,
     + 9.6012477d+2, 1.0615734d+3, 1.0341091d+3, 8.9645152d+2,
     + 9.9893584d+2, 8.9415427d+2, 8.3252765d+2, 6.3875454d+2,
     + 4.6644000d+2, 2.9691379d+2, 1.6085036d+2, 2.3045952d+1,
     + -1.1763313d+1, -1.3182504d+1, -1.1435636d+1, -6.2513507d0,
     + -2.9847014d0, -3.1527012d-1, 1.0714946d0, 1.5934656d0,
     + 1.6091829d0, 9.2889613d-1, 2.1998860d-1, 1.1892922d0,
     + 1.7334610d0, -4.5249747d-3, -1.7478507d-2, 1.4715046d-2,
     + 0d0, 6.9774817d+2, 7.9555679d+2, 7.7586004d+2, 6.2715183d+2,
     + 4.3730138d+2, 3.0785192d+2, 2.1758597d+2, 3.0379415d0,
     + -1.0543178d+2, -1.0563042d+2, -7.1196494d+1, -3.1743398d+1,
     + -6.0531860d0, -8.3010203d0, -8.0271587d0, -7.4515311d0,
     + -5.2522143d0, -4.3498215d0, -2.6336424d0, -1.5689330d0,
     + -1.0810809d0, -4.9239304d-1, 4.8981916d-1, 2.6456115d0,
     + 2.3506743d0, 1.4756190d-1, 2.2897398d-2, 7.7846216d-3,
     + -2.4309844d-2, 0d0/

* here are expansion coefficients for Vsigma-pi in terms of reduced d2 rotation
* matrix elements with l=1-7 (210 terms)
       data vlsigpi/
     + -5.7488093d+3, -8.0121750d+3, -7.1689704d+3, -7.2110176d+3,
     + -6.9839984d+3, -6.0555034d+3, -5.1560579d+3, -4.1710655d+3,
     + -3.4254430d+3, -2.6924997d+3, -2.1262128d+3, -1.7326793d+3,
     + -7.8644703d+2, -2.5012861d+2, 2.5151034d+1, 1.5069922d+2,
     + 2.0384404d+2, 2.1259928d+2, 2.0249423d+2, 1.5782398d+2,
     + 1.2062910d+2, 1.0387994d+2, 6.6920385d+1, 2.7819094d+1,
     + 1.7374994d+1, 1.0481083d+1, 6.9100332d0, 2.1409908d0,
     + 4.3920230d-2, 0d0, 3.7541069d+4, 3.6273585d+4, 3.4990304d+4,
     + 3.2864009d+4, 3.0368076d+4, 2.7976468d+4, 2.5166820d+4,
     + 2.2413639d+4, 1.9606904d+4, 1.7071466d+4, 1.4822774d+4,
     + 1.2737526d+4, 8.8446466d+3, 6.0210123d+3, 4.0621840d+3,
     + 2.7103694d+3, 1.8297754d+3, 1.2251156d+3, 8.4531201d+2,
     + 5.6710393d+2, 3.7495039d+2, 2.6344071d+2, 1.0622801d+2,
     + 3.6103816d+1, 1.7364956d+1, 3.5853937d0, 7.3456661d0,
     + 2.8745492d0, -3.3596195d-2, 0d0, 7.4644652d+2, 2.8385047d+3,
     + 2.2807025d+3, 2.5501535d+3, 2.5813183d+3, 2.2791174d+3,
     + 1.8367692d+3, 1.4018586d+3, 1.2163603d+3, 1.0050600d+3,
     + 9.5312376d+2, 9.6840336d+2, 8.9240593d+2, 7.2907731d+2,
     + 6.3010103d+2, 5.5883187d+2, 4.3197697d+2, 3.3684816d+2,
     + 2.8622042d+2, 2.4345379d+2, 1.8388062d+2, 1.4493821d+2,
     + 6.1888040d+1, 1.5600063d+1, 1.2588631d+1, 3.3496879d0,
     + -8.8580219d-1, 2.2571054d0, 2.1462604d-3, 0d0,
     + -6.7323956d+3, -7.4873768d+3, -7.7062329d+3, -7.3473180d+3,
     + -6.5799526d+3, -6.0154258d+3, -4.9231052d+3, -4.1258085d+3,
     + -3.3280486d+3, -2.7470897d+3, -2.1731255d+3, -1.4707067d+3,
     + -6.3308692d+2, -2.0433804d+2, 7.8858887d0, 1.3471973d+2,
     + 1.6199498d+2, 1.4542105d+2, 1.0720393d+2, 7.6522018d+1,
     + 4.1282131d+1, 4.5949003d+1, 1.9983518d+1, 1.5076948d+1,
     + 1.4301939d+1, -6.2873359d0, 6.5291927d-1, 1.1894361d-1,
     + -1.3362156d-3, 0d0, -1.2675226d+3, -3.6102442d+3,
     + -3.2231519d+3, -3.4333155d+3, -3.2927664d+3, -3.1140309d+3,
     + -2.2451171d+3, -1.5756967d+3, -9.6758002d+2, -6.9105270d+2,
     + -5.1001067d+2, -3.8388008d+2, -3.7556029d+2, -2.2730795d+2,
     + -1.0215888d+2, 2.3389492d0, 3.3282180d+1, 3.8166008d+1,
     + 1.3991060d+1, -1.8033126d+1, -3.5674213d+1, -5.7540430d+1,
     + -3.3170003d+1, -8.5345050d0, 7.3599160d0, 7.6777557d0,
     + -2.6949231d0, -8.2158114d-1, -1.5935774d-3, 0d0,
     + 1.3971087d+3, 1.9330194d+3, 1.7805927d+3, 1.7719320d+3,
     + 1.5060461d+3, 1.3207207d+3, 8.8076464d+2, 5.6662157d+2,
     + 4.7385704d+1, -1.6236422d+2, -1.9939486d+2, -3.1669121d+2,
     + -2.1423542d+2, -9.3965949d+1, -7.6988780d+1, -6.0976173d+1,
     + -1.9000238d+1, 1.1113386d+1, 2.1852683d+1, 5.1354835d-1,
     + 6.6512403d0, -1.4817117d+1, -3.2412965d0, -6.0734044d-1,
     + -8.8960109d0, -6.1189161d0, -7.3511817d0, -4.3345251d0,
     + -1.1893444d-3, 0d0, 9.4313516d+2, 2.2313545d+3,
     + 1.4339578d+3, 1.4235350d+3, 1.2152524d+3, 1.1111287d+3,
     + 4.6506048d+2, 2.7663783d+2, 2.1688904d+2, 2.2762936d+2,
     + 1.4468490d+2, 2.6236915d+1, 1.0122795d+2, 6.3424104d+1,
     + 2.7137159d+1, -4.6984660d0, 1.8414831d+1, 2.9668273d+1,
     + 3.1352456d+1, 2.2903286d+1, 3.4834226d+1, 3.5972718d+1,
     + 3.1389136d+1, 1.6444008d+1, -1.2284310d+1, -1.1478569d+1,
     + -3.7343945d0, -3.4003151d0, -6.2244605d-4, 0d0/      
      data ifirst /0/
* Here are Franck-Condon factors (as squares of the <Av=0|Xv=v'>
* overlap integrals) between transitions from vibrational
* state v=0 of A state
* to vibrational states v' of the X state:
* FCF_0_0 = 0.917664288481494
* FCF_0_1 = 0.0800257653502253
* FCF_0_2 =0.00227074305148058
* FCF_0_3 =3.83580435449925e-05
*Obtained from MRCISD+Q/AVQZ diatomic X and A potentials.
*J. Klos 2011 November
       FCF(1)=0.917664288481494D0
       FCF(2)=0.0800257653502253D0
* below 2 lines for debug only
*       FCF(1)=1.D0
*       FCF(2)=1.D0
* spline fit
      if (ifirst .eq. 0) then
* spline fit of the vsigma and vsum coefficients
* first add back asymptotic value to vsum, so that the interaction potential goes to zero at large r
         do ir=1,30
            vlsum(ir)=vlsum(ir)+3.283858485766032e+04
         enddo
         
         ind=1
         do ilam=1,13
            call dcopy(39,vlsum(ind),1,vec,1)
*    evaluate derivative at first point
            der1=(vec(2)-vec(1))/(rr(2)-rr(1))
            call dspline(rr,vec,30,der1,0d0,csplin_sum(1,ilam))
            call dcopy(39,vlsig(ind),1,vec,1)
*    evaluate derivative at first point
            der1=(vec(2)-vec(1))/(rr(2)-rr(1))
            call dspline(rr,vec,30,der1,0d0,csplin_sig(1,ilam))
            if (ilam.le.7) then
               call dcopy(39,vlsigpi(ind),1,vec,1)
*    evaluate derivative at first point
               der1=(vec(2)-vec(1))/(rr(2)-rr(1))
               call dspline(rr,vec,30,der1,0d0,csplin_sigpi(1,ilam))
            endif
            if (ilam.le.6) then
               call dcopy(39,vldif(ind),1,vec,1)
*    evaluate derivative at first point
               der1=(vec(2)-vec(1))/(rr(2)-rr(1))
               call dspline(rr,vec,30,der1,0d0,csplin_dif(1,ilam))
            endif
            ind=ind+30
         enddo
         ifirst=1
       endif
* this routine is unreliable if R < 2.3
       if (r<2.3d0) then
          stop('R < 2.3 bohr, potential unreliable, abort')
       endif
* r^-6 fit to isotropic part of Vsum
       c6sum=-2.223833d7
       c6sig=-2.42587d7
* switching function for long-range
       switch_lr=0.5*(tanh(0.5*(r-25))+1d0)
* switching function for short-range
       switch_sr=0.5*(tanh(20*(r-2.9))+1d0)

* damp out all anisotropic terms at both short and long-range
       
* determine splined coefficients at R=r
       ind=1
       do ilam=1,13
       call dcopy(30,vlsum(ind),1,vec,1)
          call dsplint(rr,vec,csplin_sum(1,ilam),30,r,vvx)
          vvx=(one-switch_lr)*vvx
          if (ilam.eq.1) then
*           merge with asymptotic form
             vvx=vvx+switch_lr*c6sum/(r**6)
          else
*           kill anisotropic terms at short range
             vvx=vvx*switch_sr
          endif
          vsum(ilam)=vvx
          call dcopy(30,vlsig(ind),1,vec,1)
          call dsplint(rr,vec,csplin_sig(1,ilam),30,r,vvx)
          vvx=(one-switch_lr)*vvx
          if (ilam.eq.1) then
*         merge with asymptotic form
             vvx=vvx+switch_lr*c6sig/(r**6)
          else
*           kill anisotropic terms at short range
             vvx=vvx*switch_sr
          endif
          vsig(ilam)=vvx
          if (ilam.le.7) then
             call dcopy(30,vlsigpi(ind),1,vec,1)
             call dsplint(rr,vec,csplin_sigpi(1,ilam),30,r,vvx)
             vsigpi(ilam)=switch_sr*(one-switch_lr)*vvx
          endif
          if (ilam.le.6) then
             call dcopy(30,vldif(ind),1,vec,1)
             call dsplint(rr,vec,csplin_dif(1,ilam),30,r,vvx)
*              divide by sqrt(2)
             vdif(ilam)=switch_sr*(one-switch_lr)*vvx/sqrt(2d0)
          endif
          ind=ind+30
       enddo
       call dcopy(13,vsig,1,vvl(1),1)
       call dcopy(13,vsum,1,vvl(14),1)
       call dcopy(6,vdif,1,vvl(27),1)
*        scale V1 term with FC factors
*
*   SET V1 TERMS TO ZERO

       call dscal(7,0.D0,vsigpi,1)
       call dcopy(7,vsigpi,1,vvl(33),1)     
*
*     vv0 term is a dummy
      vv0 = 0.d0

* convert to hartree
      econv=1./219474.6
      call dscal(39,econv,vvl,1)


      return
      end

