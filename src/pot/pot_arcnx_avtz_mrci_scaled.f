* System:  CN(X)+Ar, scaled ab initio MRCI+Q PES's
* Reference:
* M. H. Alexander, Xin Yang, P J. Dagdigian, A Berning,
* and H-J Werner J. Chem. Phys. 112, 781 (2000)

      include "common/syusr"
      include "common/bausr"
      include "common/ground"
      subroutine driver
      implicit double precision (a-h,o-z)
      common /cosysr/ xjunk(2),rshift,xfact
      common /covvl/ vvl(9)
1      print *, ' r (bohr)'
      read (5, *, end=99) r
      call pot(vv0,r)
      write (6, 100) vv0,vvl
100   format(' vsum',/,10(1pe16.8))
      goto 1
99    do i=1,200
         r=(i-1)*.1+4.5d0
         call pot(vv0,r)
         write (6,101) r,vv0
101      format(f6.2,1pe16.8)
      enddo
99    end
      subroutine loapot(iunit,filnam)
* ------------------------------------------------------------------------
      character*(*) filnam
      include "common/parbas"
      include "common/parpot"
      potnam='ALEXANDER CN(X)-Ar avtz+bondf scaled MRCI(D)'
      lammin(1)=1
      lammax(1)=9
      mproj(1)=0
      ntv(1)=1
      ivcol(1,1)=0
      ivrow(1,1)=0
      return
      end
* ----------------------------------------------------------------------
      subroutine pot (vv0, r)
*  subroutine to calculate the r-dependent coefficients in the
*  Ar-CN(X,B) potential of Alexander
*  in atomic units (distance and energy)
* ----------------------------------------------------------------------
*  on entry:
*    r:      interparticle distance
*  on return:
*  vv0        contains isotropic term (d00 term in vsum)
*  variable in common block /covvl/
*    vvl:     vector of length 6 to store r-dependence of each term
*             in potential expansion
*    vvl(1-8) expansion coefficients in dl0 (l=1:8) of vsum

* uses linear least squares routines from cmlib

* author:  millard alexander
* latest revision date:  8-Aug-2006
* ----------------------------------------------------------------------

      implicit double precision (a-h,o-z)
      parameter (kmax=19,kang=10)
      dimension rr(kmax),vx(kmax*kang),vb(kmax*kang),z(kmax),cx(kmax),
     :    coefx(kmax,kang),coefb(kmax,kang),xa(kmax)
      dimension d0(100),aa(100)
      dimension kpvt(10),qraux(10),work(10),rsd(10),xsum(10),vang(10)

      common /covvl/ vvl(9)
      data half, zero, one, alph /0.5d0, 0.d0, 1.d0, 1.2d0/
* coefficicients for d0 rotation matrices
* stored (by column) for each of 10 angles and for l=0:9
* angles are 0 15 30 60 90 120 135 150 165 180
* NOTE:  theta = 0 corresponds to CNAr
      data d0/
     : 1d0,1d0,1d0,1d0,1d0,1d0,1d0,1d0,1d0,1d0,1d0,9.6592583d-1,
     : 8.6602540d-1,5d-1,0d0,-5d-1,-7.0710678d-1,-8.6602540d-1,
     : -9.6592583d-1,-1d0,1d0,8.9951905d-1,6.25d-1,-1.25d-1,-5d-1,
     : -1.25d-1,2.50d-1,6.25d-1,8.9951905d-1,1d0,1d0,8.0416392d-1,
     : 3.2475953d-1,-4.375d-1,0d0,4.375d-1,1.7677670d-1,-3.2475953d-1,
     : -8.0416392d-1,-1d0,1d0,6.8469544d-1,2.3437500d-2,-2.8906250d-1,
     : 3.75d-1,-2.8906250d-1,-4.0625000d-1,2.3437500d-2,6.8469544d-1,
     : 1d0,1d0,5.4712587d-1,-2.2327217d-1,8.9843750d-2,0d0,
     : -8.9843750d-2,3.7565048d-1,2.2327217d-1,-5.4712587d-1,-1d0,1d0,
     : 3.9830599d-1,-3.7402344d-1,3.2324219d-1,-3.125d-1,3.2324219d-1,
     : -1.4843750d-1,-3.7402344d-1,3.9830599d-1,1d0,1d0,2.4554105d-1,
     : -4.1017805d-1,2.2314453d-1,0d0,-2.2314453d-1,-1.2705825d-1,
     : 4.1017805d-1,-2.4554105d-1,-1d0,1d0,9.6184327d-2,-3.3877563d-1,
     : -7.3638916d-2,2.7343750d-1,-7.3638916d-2,2.9833984d-1,
     : -3.3877563d-1,9.6184327d-2,1d0,1d0,-4.2767847d-2,-1.8957520d-1,
     : -2.6789856d-1,0d0,2.6789856d-1,-2.8553579d-1,1.8957520d-1,
     : 4.2767847d-2,-1d0/

* coefficients for expansion of potential, ordered by angles, each column corresponds
* to theta from 0 (1st column) to 180 (last column)
* rows correspond to values of R
* R=[4.75 5 5.25, 5.5, 5.75, 6.00, 6.25, 6.5, 6.75, 7.00, 
*    7.25, 7.5, 7.75, 8.00, 8.5, 9.00, 10, 12, 40]
* independent variable is x=exp(-0.2*r)
      
      data xa /
     : 3.3546263d-4, 9.0717953d-2, 1.3533528d-1, 1.6529889d-1,
     : 1.8268352d-1, 2.0189652d-1, 2.1224797d-1, 2.2313016d-1,
     : 2.3457029d-1, 2.4659696d-1, 2.5924026d-1, 2.7253179d-1,
     : 2.8650480d-1, 3.0119421d-1, 3.1663677d-1, 3.3287108d-1,
     : 3.4993775d-1, 3.6787944d-1, 3.8674102d-1/
* scaled (s=1.21) avtz+bondf mrci pes
      data vx  /
* theta = 0
     : 0d0, -7.7956264d+0, -2.8746704d+1, -5.7539260d+1, -7.8455084d+1,
     : -9.7754927d+1, -1.0132402d+2, -9.4067408d+1, -6.6293419d+1,
     : -1.9410538d+0, 1.2482329d+2, 3.5477842d+2, 7.5111236d+2,
     : 1.4095982d+3, 2.4692651d+3, 4.1183776d+3, 6.5778911d+3,
     : 1.0028886d+4, 1.4518627d+4,
* theta = 15
     : 0d0, -1.5620100d+0, -2.7923354d+1, -5.5988292d+1, -7.6647727d+1,
     : -9.6841946d+1, -1.0190589d+2, -9.7521914d+1, -7.4866248d+1,
     : -1.9270626d+1, 9.2899629d+1, 2.9896152d+2, 6.5691843d+2,
     : 1.2549457d+3, 2.2221842d+3, 3.7357496d+3, 6.0110426d+3,
     : 9.0948938d+3, 1.3349963d+4,
* theta = 30
     : 0d0, -7.1539829d+0, -2.5817253d+1, -5.1830396d+1, -7.1744147d+1,
     : -9.3570426d+1, -1.0177221d+2, -1.0362727d+2, -9.2415790d+1,
     : -5.6873712d+1, 2.1321008d+1, 1.7129201d+2, 4.3872603d+2,
     : 8.9389682d+2, 1.6416097d+3, 2.8309635d+3, 4.6567341d+3,
     : 7.3322357d+3, 1.0999526d+4,
* theta = 60
     : 0d0, -6.0217373d+0, -2.0390519d+1, -4.1021897d+1, -5.8106967d+1,
     : -8.0101004d+1, -9.1906588d+1, -1.0248433d+2, -1.0896338d+2,
     : -1.0623940d+2, -8.5668251d+1, -3.3041205d+1, 7.4559998d+1,
     : 2.7350052d+2, 6.2059669d+2, 1.2029332d+3, 2.1502389d+3,
     : 3.6466663d+3, 5.9300958d+3,
* theta = 90
     :  0d0, -5.6088926d+0, -1.8472511d+1, -3.7042972d+1, -5.2787249d+1,
     : -7.3754475d+1, -8.5689599d+1, -9.7509047d+1, -1.0736350d+2,
     : -1.1185947d+2, -1.0510992d+2, -7.7269629d+1, -1.2306825d+1,
     : 1.1537121d+2, 3.4601652d+2, 7.4203929d+2, 1.3984334d+3,
     : 2.4554395d+3, 4.1088867d+3,

* theta = 120
     : 0d0, -1.7063223d+0, -2.2636997d+1, -4.5808343d+1, -6.4976570d+1,
     : -8.9593479d+1, -1.0280717d+2, -1.1471821d+2, -1.2235683d+2,
     : -1.2064602d+2, -1.0128696d+2, -5.1068504d+1, 5.0492883d+1,
     : 2.3440138d+2, 5.4621490d+2, 1.0502560d+3, 1.8330626d+3,
     : 3.0041587d+3, 4.6948659d+3,
* theta = 135
     : 0d0, -7.3698909d+0, -2.6397259d+1, -5.3615848d+1, -7.5364645d+1,
     : -1.0170459d+2, -1.1427626d+2, -1.2337062d+2, -1.2458966d+2,
     : -1.1077684d+2, -7.0575790d+1, 1.3522034d+1, 1.6776058d+2,
     : 4.3007530d+2, 8.5336113d+2, 1.5079968d+3, 2.4857174d+3,
     : 3.9092151d+3, 5.9602030d+3,
* theta = 150
     : 0d0, -8.2614911d+0, -3.0246130d+1, -6.1041579d+1, -8.4641447d+1,
     : -1.1008678d+2, -1.1947349d+2, -1.2189744d+2, -1.1094789d+2,
     : -7.6493135d+1, -2.8824504d+0, 1.3338678d+2, 3.6666204d+2,
     : 7.4496322d+2, 1.3342346d+3, 2.2254107d+3, 3.5507398d+3,
     : 5.5192811d+3, 8.4776410d+3,
* theta = 165
     : 0d0, -8.9322832d+0, -3.3249424d+1, -6.6321706d+1, -9.0461915d+1,
     : -1.1280491d+2, -1.1755699d+2, -1.1173308d+2, -8.6932769d+1,
     : -2.9989307d+1, 7.9238890d+1, 2.7046169d+2, 5.8641031d+2,
     : 1.0871051d+3, 1.8584469d+3, 3.0293597d+3, 4.8067027d+3,
     : 7.5377238d+3, 1.1796934d+4,
* theta = 180
     : 0d0, -9.1643124d+0, -3.4392284d+1, -6.8271180d+1, -9.2476743d+1,
     : -1.1306918d+2, -1.1548237d+2, -1.0564824d+2, -7.4375682d+1,
     : -7.2106790d+0, 1.1801617d+2, 3.3389129d+2, 6.8706301d+2,
     : 1.2437827d+3, 2.1012965d+3, 3.4105522d+3, 5.4214555d+3,
     : 8.5600818d+3, 1.3540425d+4/
      data vb / 
* theta = 0
     : 0d0, -7.5324574d+0, -2.8592733d+1, -6.0228857d+1, -8.7477023d+1,
     : -1.2520744d+2, -1.4836761d+2, -1.7394630d+2, -2.0077910d+2,
     : -2.2659416d+2, -2.4761212d+2, -2.5767675d+2, -2.4574683d+2,
     : -1.8863235d+2, -3.1153792d+1, 3.6600501d+2, 1.3504679d+3,
     : 3.7229727d+3, 9.0367711d+3,
* theta = 15
     : 0d0, -1.7053264d+0, -2.7788584d+1, -5.8228075d+1, -8.4358950d+1,
     : -1.2056110d+2, -1.4266461d+2, -1.6684871d+2, -1.9172093d+2,
     : -2.1461729d+2, -2.3109666d+2, -2.3397062d+2, -2.1069614d+2,
     : -1.3648021d+2, 4.4122140d+1, 4.6590710d+2, 1.4649993d+3,
     : 3.7290671d+3, 8.5972380d+3,
* theta = 30
     : 0d0, -7.0337008d+0, -2.5645895d+1, -5.3125681d+1, -7.6559939d+1,
     : -1.0869284d+2, -1.2793706d+2, -1.4837438d+2, -1.6816206d+2,
     : -1.8392768d+2, -1.8999046d+2, -1.7710247d+2, -1.2975821d+2,
     : -2.0379220d+1, 2.0436571d+2, 6.5680117d+2, 1.5863978d+3,
     : 3.5339560d+3, 7.4915180d+3,
* theta = 60
     : 0d0, -5.9941507d+0, -2.0376969d+1, -4.1107065d+1, -5.8373868d+1,
     : -8.1119394d+1, -9.3887568d+1, -1.0626321d+2, -1.1601554d+2,
     : -1.1911754d+2, -1.0872860d+2, -7.3613421d+1, 4.3792651d+0,
     : 1.5433886d+2, 4.2287997d+2, 8.8522377d+2, 1.6635822d+3,
     : 2.9570039d+3, 5.0853661d+3,
* theta = 90
     : 0d0, -5.8599308d+0, -1.9239845d+1, -3.8053352d+1, -5.3439108d+1,
     : -7.2991644d+1, -8.3419572d+1, -9.2838282d+1, -9.8982402d+1,
     : -9.7884719d+1, -8.2874988d+1, -4.3075388d+1, 3.8864476d+1,
     : 1.9014916d+2, 4.5290194d+2, 8.9169850d+2, 1.6043787d+3,
     : 2.7369064d+3, 4.5032715d+3,
* theta = 120
     : 0d0, -1.7837703d+0, -2.5429484d+1, -4.9613259d+1, -6.7922229d+1,
     : -8.8383683d+1, -9.6990256d+1, -1.0143891d+2, -9.7435439d+1,
     : -7.8085511d+1, -3.2606840d+1, 5.5570309d+1, 2.1156661d+2,
     : 4.7306355d+2, 8.9609846d+2, 1.5633838d+3, 2.5963498d+3,
     : 4.1728802d+3, 6.5503138d+3,
* theta = 135
     : 0d0, -8.7865382d+0, -3.0730214d+1, -5.9019868d+1, -7.8351081d+1,
     : -9.5018413d+1, -9.7218272d+1, -8.9639825d+1, -6.4816130d+1,
     : -1.1183834d+1, 8.8922454d+1, 2.6217855d+2, 5.4839335d+2,
     : 1.0064199d+3, 1.7226578d+3, 2.8237050d+3, 4.4945138d+3,
     : 6.9999413d+3, 1.0697297d+4,
* theta = 150
     : 0d0, -1.0153008d+1, -3.6427855d+1, -6.8090703d+1, -8.6476408d+1,
     : -9.3418790d+1, -8.3327316d+1, -5.4491043d+1, 5.5139934d+0,
     : 1.1574777d+2, 3.0523341d+2, 6.1783511d+2, 1.1192461d+3,
     : 1.9071859d+3, 3.1269555d+3, 4.9942049d+3, 7.8225759d+3,
     : 1.2040235d+4, 1.8158049d+4,
* theta = 165
     : 0d0, -1.1272510d+1, -4.0975214d+1, -7.4464351d+1, -9.0556890d+1,
     : -8.5598400d+1, -6.1784196d+1, -9.9870180d+0, 8.7399665d+1,
     : 2.5754265d+2, 5.4204118d+2, 1.0041776d+3, 1.7396592d+3,
     : 2.8935872d+3, 4.6870986d+3, 7.4550600d+3, 1.1686864d+4,
     : 1.8042668d+4, 2.7274896d+4,
* theta = 180
     : 0d0, -1.1682199d+1, -4.2704937d+1, -7.6714506d+1, -9.1634819d+1,
     : -8.1191956d+1, -5.1166794d+1, 1.0940851d+1, 1.2499902d+2,
     : 3.2179007d+2, 6.4876220d+2, 1.1783095d+3, 2.0204355d+3,
     : 3.3435541d+3, 5.4075329d+3, 8.6102358d+3, 1.3539644d+4,
     : 2.1007929d+4, 3.2023820d+4/
      data rr /
     : 40d0, 12d0, 10d0, 9d0, 8.5d0, 8d0, 7.75d0, 7.5d0, 7.25d0, 7d0,
     : 6.75d0, 6.5d0, 6.25d0, 6d0, 5.75d0, 5.5d0, 5.25d0, 5d0, 4.75d0 /
* spline fit to obtain coefficients

      data ispline /0/
      nspline=kmax 
      nang=kang
      if (ispline.eq.0) then
        ind=0
        do ith=1,nang
            call dcopy(nspline,vx(ind+1),1,z,1)
* initial derivative at small r (large x)
            dvxe=(z(2)-z(1))/(xa(2)-xa(1))
            dvxn=(z(nspline)-z(nspline-1))/(xa(nspline)-xa(nspline-1))
            call dspline(xa,z,nspline,0d0,dvxn,cx)
            call dcopy(nspline,cx,1,coefx(1,ith),1)
            ind=ind+nspline
        enddo
        ispline=1
      endif

* determine potentials at angles
      x=exp(-0.2d0*r)
      ind=0
      do ith=1,nang
         if (r.lt.rr(nspline)) then
            vspline=vx(ind+nspline)
         else
            call dcopy(nspline,vx(ind+1),1,z,1)
            call dsplint(xa,z,cx,nspline,x,vspline)
         endif
         ind=ind+nspline
         vang(ith)=vspline
         if (ith.eq.1) then
            vv0=vspline
         else 
            vvl(ith-1)=vspline
         endif
      enddo
*      return
* solve simultaneous equations for solutions
* first for vsigma
      tol=1.e-10
      call dcopy(100,d0,1,aa,1)
      call dqrank(aa,10,10,10,tol,kr,kpvt,qraux,work)
      call dqrlss(aa,10,10,10,kr,vang,xsum,rsd,kpvt,qraux)
* convert to hartree
      conv=1.d0/219474.6
      call dscal(10,conv,xsum,1)
      vv0=xsum(1)
      call dcopy(9,xsum(2),1,vvl,1)
      end
