*  system:  CD3-He PES, averaed over v=0 bending wave function, computed by Q. Ma
*
*  modification of pot_ch3he_ccsdt.f
*
*  CD3 defined to lie in xy plane, with origin at center of mass (C atom)
*  x axis is C3 symmetry axis
*  z axis lies along one of the C-D bonds
*  theta = 0 has the He lying above the CD3 plane
*  theta = 90 has all 5 atoms coplanar
*
*  Note:  this pot routine requires a data file to be in hibxx/bin/progs/potdata:
*         cd3he_ccsdt_v0avg.dat
*
*  Refs:  M.H.Alexander and P.J.Dagdigian, J. Chem. Phys. 135, 064306 (2011)
*         Q.Ma, P.J.Dagdigian, and M.H.Alexander, J. Chem. Phys. 138, 104317 (2013).
*
* ------------------------------------------------------------------------
      subroutine driver
      implicit double precision (a-h,o-z)
      common /covvl/ vvl(11)
      include "common/parpot"
      s4pi = sqrt ( 4.d0 * acos(-1.d0) )
      potnam='Dagdigian/Ma CD3(v=0)-He PES'
      print *, potnam
1     print *, 'R (bohr):'
      read (5, *, end=99) r
      if (r.le.0.d0) goto 99
      call pot(vv0,r)
*  potential is returned in atomic units (hartree)
*  convert from atomic units for printout
      econv=219474.6d0
      write (6, 100) vv0*econv*s4pi, (econv*vvl(i), i=1,11)
100   format(' v(lam,0):',5(1pe16.8)/' v(lam,3):',4(1pe16.8)/
     :    ' v(lam,6):'2(1pe16.8)/' v(lam,9):',1(1pe16.8))
      goto 1
99    rr=3.5d0
      dr=0.5d0
      open (unit=12,file='cd3he_ccsdt_v0avg.dat')
      write(12,109)
109   format(' R/bohr y00  y20  y40  y60  y80  y33  y53  y73',
     :  '  y93  y66  y86  y99')
      do i=1,40
        call pot(vv0,rr)
        write (12,110) rr,vv0*econv*s4pi, (econv*vvl(j),j=1,11)
110     format(f7.2,12(1pe16.8))
        rr = rr + dr
      enddo
      close(12)
      end
* ------------------------------------------------------------------------
      include "common/syusr"
      include "common/ground"
      include "common/bausr"
* ------------------------------------------------------------------------
      subroutine loapot(iunit,filnam)
      implicit double precision (a-h,o-z)
      character*(*) filnam
      include "common/parbas"
      include "common/parpot" 
      common /conlam/ nlam, nlammx, lamnum(2)
      common /cosysi/ nscode, isicod, nterm
      potnam='Dagdigian/Ma CD3(v=0)-He PES'
*
      nterm = 4
      mproj(1) = 0
      mproj(2) = 3
      mproj(3) = 6
      mproj(4) = 9
      lammin(1) = 2
      lammin(2) = 3
      lammin(3) = 6
      lammin(4) = 9
      lammax(1) = 8
      lammax(2) = 9
      lammax(3) = 8
      lammax(4) = 9
*
      ipotsy = 3
*
      ntv(1)=1
      ivcol(1,1)=0
      ivrow(1,1)=0
*  calculate total number of anisotropic terms
      nlam = 0
*  because of planar symmetry of CH3, only every other lambda
*  included
      dl = 2
      do i=1,nterm
        lmin = lammin(i)
        lmax = lammax(i)
        do lb = lmin, lmax, dl
*  lambda + mu must be even
          if (lb+mproj(i) .eq. 2*(lb+mproj(i))/2) then
            nlam = nlam + 1
          end if
        end do
      end do
      nlammx = nlam
      return
      end
* ----------------------------------------------------------------------
      subroutine pot (vv0, r)
*  subroutine to calculate the r-dependent coefficients
*  in atomic units (distance and energy)
* ----------------------------------------------------------------------
*  on entry:
*    r:          interparticle distance
*  on return:
*    vv0         contains isotropic term (Y00)
*  variable in common block /covvl/
*    vvl:        vector of length 11 to store r-dependence of each term
*                in potential expansion
*    vvl(1-4):   expansion coefficients in Yl0 (l=2:8:2) of v(lam,0)
*    vvl(5-8):   expansion coefficients in [Yl3 - Y(l,-3)] (l=3:9:3) of v(lam,3)
*    vvl(9,10):  expansion coefficients in [Yl6 + Y(l,-6)] (l=6:8:2) of v(lam,6)
*    vvl(11):    expansion coefficients in [Yl9 - Y(l,-9)] (l=9)     of v(lam,9)
*  variable in common block /coloapot/
*    s4pi:       normalization factor for isotropic potential
*
*  uses linear least squares routines from lapack
*
* author:  paul dagdigian
* latest revision date:  march-4-2011
*
      implicit double precision (a-h,o-z)
      dimension iwork(1000),ylm(70,12)
      dimension swork(12), work(1812)
      dimension y00(70),y20(70),y40(70),y60(70),y80(70)
      dimension y33(70),y53(70),y73(70),y93(70)
      dimension y66(70),y86(70),y99(70)
*
      common /covvl/ vvl(11)
      common /vspline/ vsp_jacek(70)
      common /vvalue/  vv(1330),v(19,70), vvec(19)
      data c6 /1.0403914232209d7/
*
*  coefficients for Ylm terms - all (lambda,mu) combinations up to lambda .le. 9
*  and mu .le. 9, with lambda + mu = even and mu a multiple of 3 
*  (for a total of 11 anisotropic terms)
*  determined on a grid of 10 theta and 6 phi values:
*    th = [0:10:90];   %grid of 10 angles
*    ph = [0:10:60];   %grid of  7 angles
*  All values of Ylm have been normalized
*  Note:  The ylm terms for mu .gt. 0 are defined as:
*           [Y(lambda,mu) + (-1)^mu * Y(lambda, -mu)]/2
*
       data y00/
     : 2.8209479d-01,  2.8209479d-01,  2.8209479d-01,  2.8209479d-01,
     : 2.8209479d-01,  2.8209479d-01,  2.8209479d-01,  2.8209479d-01,
     : 2.8209479d-01,  2.8209479d-01,  2.8209479d-01,  2.8209479d-01,
     : 2.8209479d-01,  2.8209479d-01,  2.8209479d-01,  2.8209479d-01,
     : 2.8209479d-01,  2.8209479d-01,  2.8209479d-01,  2.8209479d-01,
     : 2.8209479d-01,  2.8209479d-01,  2.8209479d-01,  2.8209479d-01,
     : 2.8209479d-01,  2.8209479d-01,  2.8209479d-01,  2.8209479d-01,
     : 2.8209479d-01,  2.8209479d-01,  2.8209479d-01,  2.8209479d-01,
     : 2.8209479d-01,  2.8209479d-01,  2.8209479d-01,  2.8209479d-01,
     : 2.8209479d-01,  2.8209479d-01,  2.8209479d-01,  2.8209479d-01,
     : 2.8209479d-01,  2.8209479d-01,  2.8209479d-01,  2.8209479d-01,
     : 2.8209479d-01,  2.8209479d-01,  2.8209479d-01,  2.8209479d-01,
     : 2.8209479d-01,  2.8209479d-01,  2.8209479d-01,  2.8209479d-01,
     : 2.8209479d-01,  2.8209479d-01,  2.8209479d-01,  2.8209479d-01,
     : 2.8209479d-01,  2.8209479d-01,  2.8209479d-01,  2.8209479d-01,
     : 2.8209479d-01,  2.8209479d-01,  2.8209479d-01,  2.8209479d-01,
     : 2.8209479d-01,  2.8209479d-01,  2.8209479d-01,  2.8209479d-01,
     : 2.8209479d-01,  2.8209479d-01 /
       data y20/
     : 6.3078313d-01,  6.3078313d-01,  6.3078313d-01,  6.3078313d-01,
     : 6.3078313d-01,  6.3078313d-01,  6.3078313d-01,  6.0225247d-01,
     : 6.0225247d-01,  6.0225247d-01,  6.0225247d-01,  6.0225247d-01,
     : 6.0225247d-01,  6.0225247d-01,  5.2010172d-01,  5.2010172d-01,
     : 5.2010172d-01,  5.2010172d-01,  5.2010172d-01,  5.2010172d-01,
     : 5.2010172d-01,  3.9423946d-01,  3.9423946d-01,  3.9423946d-01,
     : 3.9423946d-01,  3.9423946d-01,  3.9423946d-01,  3.9423946d-01,
     : 2.3984654d-01,  2.3984654d-01,  2.3984654d-01,  2.3984654d-01,
     : 2.3984654d-01,  2.3984654d-01,  2.3984654d-01,  7.5545027d-02,
     : 7.5545027d-02,  7.5545027d-02,  7.5545027d-02,  7.5545027d-02,
     : 7.5545027d-02,  7.5545027d-02, -7.8847891d-02, -7.8847891d-02,
     :-7.8847891d-02, -7.8847891d-02, -7.8847891d-02, -7.8847891d-02,
     :-7.8847891d-02, -2.0471015d-01, -2.0471015d-01, -2.0471015d-01,
     :-2.0471015d-01, -2.0471015d-01, -2.0471015d-01, -2.0471015d-01,
     :-2.8686091d-01, -2.8686091d-01, -2.8686091d-01, -2.8686091d-01,
     :-2.8686091d-01, -2.8686091d-01, -2.8686091d-01, -3.1539157d-01,
     :-3.1539157d-01, -3.1539157d-01, -3.1539157d-01, -3.1539157d-01,
     :-3.1539157d-01, -3.1539157d-01 /
       data y40/
     : 8.4628438d-01,  8.4628438d-01,  8.4628438d-01,  8.4628438d-01,
     : 8.4628438d-01,  8.4628438d-01,  8.4628438d-01,  7.2205787d-01,
     : 7.2205787d-01,  7.2205787d-01,  7.2205787d-01,  7.2205787d-01,
     : 7.2205787d-01,  7.2205787d-01,  4.0196624d-01,  4.0196624d-01,
     : 4.0196624d-01,  4.0196624d-01,  4.0196624d-01,  4.0196624d-01,
     : 4.0196624d-01,  1.9834790d-02,  1.9834790d-02,  1.9834790d-02,
     : 1.9834790d-02,  1.9834790d-02,  1.9834790d-02,  1.9834790d-02,
     :-2.6996839d-01, -2.6996839d-01, -2.6996839d-01, -2.6996839d-01,
     :-2.6996839d-01, -2.6996839d-01, -2.6996839d-01, -3.6181573d-01,
     :-3.6181573d-01, -3.6181573d-01, -3.6181573d-01, -3.6181573d-01,
     :-3.6181573d-01, -3.6181573d-01, -2.4462908d-01, -2.4462908d-01,
     :-2.4462908d-01, -2.4462908d-01, -2.4462908d-01, -2.4462908d-01,
     :-2.4462908d-01, -3.2159156d-03, -3.2159156d-03, -3.2159156d-03,
     :-3.2159156d-03, -3.2159156d-03, -3.2159156d-03, -3.2159156d-03,
     : 2.2502838d-01,  2.2502838d-01,  2.2502838d-01,  2.2502838d-01,
     : 2.2502838d-01,  2.2502838d-01,  2.2502838d-01,  3.1735664d-01,
     : 3.1735664d-01,  3.1735664d-01,  3.1735664d-01,  3.1735664d-01,
     : 3.1735664d-01,  3.1735664d-01 /
       data y60/
     : 1.0171072d+00,  1.0171072d+00,  1.0171072d+00,  1.0171072d+00,
     : 1.0171072d+00,  1.0171072d+00,  1.0171072d+00,  7.1652290d-01,
     : 7.1652290d-01,  7.1652290d-01,  7.1652290d-01,  7.1652290d-01,
     : 7.1652290d-01,  7.1652290d-01,  7.3133063d-02,  7.3133063d-02,
     : 7.3133063d-02,  7.3133063d-02,  7.3133063d-02,  7.3133063d-02,
     : 7.3133063d-02, -3.8042194d-01, -3.8042194d-01, -3.8042194d-01,
     :-3.8042194d-01, -3.8042194d-01, -3.8042194d-01, -3.8042194d-01,
     :-3.2910613d-01, -3.2910613d-01, -3.2910613d-01, -3.2910613d-01,
     :-3.2910613d-01, -3.2910613d-01, -3.2910613d-01,  5.7342740d-02,
     : 5.7342740d-02,  5.7342740d-02,  5.7342740d-02,  5.7342740d-02,
     : 5.7342740d-02,  5.7342740d-02,  3.2877197d-01,  3.2877197d-01,
     : 3.2877197d-01,  3.2877197d-01,  3.2877197d-01,  3.2877197d-01,
     : 3.2877197d-01,  2.1245027d-01,  2.1245027d-01,  2.1245027d-01,
     : 2.1245027d-01,  2.1245027d-01,  2.1245027d-01,  2.1245027d-01,
     :-1.3438157d-01, -1.3438157d-01, -1.3438157d-01, -1.3438157d-01,
     :-1.3438157d-01, -1.3438157d-01, -1.3438157d-01, -3.1784601d-01,
     :-3.1784601d-01, -3.1784601d-01, -3.1784601d-01, -3.1784601d-01,
     :-3.1784601d-01, -3.1784601d-01 /
       data y80/
     : 1.1631066d+00,  1.1631066d+00,  1.1631066d+00,  1.1631066d+00,
     : 1.1631066d+00,  1.1631066d+00,  1.1631066d+00,  6.0696266d-01,
     : 6.0696266d-01,  6.0696266d-01,  6.0696266d-01,  6.0696266d-01,
     : 6.0696266d-01,  6.0696266d-01, -2.9291611d-01, -2.9291611d-01,
     :-2.9291611d-01, -2.9291611d-01, -2.9291611d-01, -2.9291611d-01,
     :-2.9291611d-01, -3.9403218d-01, -3.9403218d-01, -3.9403218d-01,
     :-3.9403218d-01, -3.9403218d-01, -3.9403218d-01, -3.9403218d-01,
     : 1.6123775d-01,  1.6123775d-01,  1.6123775d-01,  1.6123775d-01,
     : 1.6123775d-01,  1.6123775d-01,  1.6123775d-01,  3.4274692d-01,
     : 3.4274692d-01,  3.4274692d-01,  3.4274692d-01,  3.4274692d-01,
     : 3.4274692d-01,  3.4274692d-01, -8.5649911d-02, -8.5649911d-02,
     :-8.5649911d-02, -8.5649911d-02, -8.5649911d-02, -8.5649911d-02,
     :-8.5649911d-02, -3.2336134d-01, -3.2336134d-01, -3.2336134d-01,
     :-3.2336134d-01, -3.2336134d-01, -3.2336134d-01, -3.2336134d-01,
     : 2.7109515d-02,  2.7109515d-02,  2.7109515d-02,  2.7109515d-02,
     : 2.7109515d-02,  2.7109515d-02,  2.7109515d-02,  3.1803697d-01,
     : 3.1803697d-01,  3.1803697d-01,  3.1803697d-01,  3.1803697d-01,
     : 3.1803697d-01,  3.1803697d-01 /
       data y33/
     :-0.0000000d+00, -0.0000000d+00, -0.0000000d+00, -0.0000000d+00,
     : 0.0000000d+00,  0.0000000d+00,  0.0000000d+00, -4.3692791d-03,
     :-3.7839067d-03, -2.1846395d-03, -2.6754118d-19,  2.1846395d-03,
     : 3.7839067d-03,  4.3692791d-03, -3.3385213d-02, -2.8912442d-02,
     :-1.6692606d-02, -2.0442547d-18,  1.6692606d-02,  2.8912442d-02,
     : 3.3385213d-02, -1.0430596d-01, -9.0331608d-02, -5.2152978d-02,
     :-6.3868978d-18,  5.2152978d-02,  9.0331608d-02,  1.0430596d-01,
     :-2.2161624d-01, -1.9192529d-01, -1.1080812d-01, -1.3570081d-17,
     : 1.1080812d-01,  1.9192529d-01,  2.2161624d-01, -3.7511203d-01,
     :-3.2485655d-01, -1.8755602d-01, -2.2968987d-17,  1.8755602d-01,
     : 3.2485655d-01,  3.7511203d-01, -5.4198965d-01, -4.6937680d-01,
     :-2.7099482d-01, -3.3187294d-17,  2.7099482d-01,  4.6937680d-01,
     : 5.4198965d-01, -6.9239918d-01, -5.9963528d-01, -3.4619959d-01,
     :-4.2397222d-17,  3.4619959d-01,  5.9963528d-01,  6.9239918d-01,
     :-7.9699110d-01, -6.9021454d-01, -3.9849555d-01, -4.8801630d-17,
     : 3.9849555d-01,  6.9021454d-01,  7.9699110d-01, -8.3444765d-01,
     :-7.2265286d-01, -4.1722382d-01, -5.1095182d-17,  4.1722382d-01,
     : 7.2265286d-01,  8.3444765d-01 /
       data y53/
     :-0.0000000d+00, -0.0000000d+00, -0.0000000d+00, -0.0000000d+00,
     : 0.0000000d+00,  0.0000000d+00,  0.0000000d+00, -2.7999347d-02,
     :-2.4248146d-02, -1.3999674d-02, -1.7144656d-18,  1.3999674d-02,
     : 2.4248146d-02,  2.7999347d-02, -1.9230931d-01, -1.6654474d-01,
     :-9.6154653d-02, -1.1775549d-17,  9.6154653d-02,  1.6654474d-01,
     : 1.9230931d-01, -4.9729410d-01, -4.3066932d-01, -2.4864705d-01,
     :-3.0450481d-17,  2.4864705d-01,  4.3066932d-01,  4.9729410d-01,
     :-7.8672952d-01, -6.8132775d-01, -3.9336476d-01, -4.8173289d-17,
     : 3.9336476d-01,  6.8132775d-01,  7.8672952d-01, -8.4555132d-01,
     :-7.3226893d-01, -4.2277566d-01, -5.1775086d-17,  4.2277566d-01,
     : 7.3226893d-01,  8.4555132d-01, -5.6174259d-01, -4.8648336d-01,
     :-2.8087130d-01, -3.4396813d-17,  2.8087130d-01,  4.8648336d-01,
     : 5.6174259d-01, -3.0312857d-02, -2.6251704d-02, -1.5156428d-02,
     :-1.8561271d-18,  1.5156428d-02,  2.6251704d-02,  3.0312857d-02,
     : 4.8149192d-01,  4.1698423d-01,  2.4074596d-01,  2.9482877d-17,
     :-2.4074596d-01, -4.1698423d-01, -4.8149192d-01,  6.9188744d-01,
     : 5.9919210d-01,  3.4594372d-01,  4.2365887d-17, -3.4594372d-01,
     :-5.9919210d-01, -6.9188744d-01 /
       data y73/
     :-0.0000000d+00, -0.0000000d+00, -0.0000000d+00, -0.0000000d+00,
     : 0.0000000d+00,  0.0000000d+00,  0.0000000d+00, -8.5151245d-02,
     :-7.3743141d-02, -4.2575622d-02, -5.2140100d-18,  4.2575622d-02,
     : 7.3743141d-02,  8.5151245d-02, -4.9770749d-01, -4.3102733d-01,
     :-2.4885375d-01, -3.0475794d-17,  2.4885375d-01,  4.3102733d-01,
     : 4.9770749d-01, -9.3865333d-01, -8.1289763d-01, -4.6932666d-01,
     :-5.7475940d-17,  4.6932666d-01,  8.1289763d-01,  9.3865333d-01,
     :-7.9411623d-01, -6.8772482d-01, -3.9705811d-01, -4.8625595d-17,
     : 3.9705811d-01,  6.8772482d-01,  7.9411623d-01, -1.4177925d-02,
     :-1.2278444d-02, -7.0889627d-03, -8.6814755d-19,  7.0889627d-03,
     : 1.2278444d-02,  1.4177925d-02,  6.5570748d-01,  5.6785933d-01,
     : 3.2785374d-01,  4.0150503d-17, -3.2785374d-01, -5.6785933d-01,
     :-6.5570748d-01,  5.0742464d-01,  4.3944263d-01,  2.5371232d-01,
     : 3.1070798d-17, -2.5371232d-01, -4.3944263d-01, -5.0742464d-01,
     :-2.4089529d-01, -2.0862144d-01, -1.2044765d-01, -1.4750582d-17,
     : 1.2044765d-01,  2.0862144d-01,  2.4089529d-01, -6.6379904d-01,
     :-5.7486683d-01, -3.3189952d-01, -4.0645968d-17,  3.3189952d-01,
     : 5.7486683d-01,  6.6379904d-01 /
       data y93/
     :-0.0000000d+00, -0.0000000d+00, -0.0000000d+00, -0.0000000d+00,
     : 0.0000000d+00,  0.0000000d+00,  0.0000000d+00, -1.8808198d-01,
     :-1.6288377d-01, -9.4040991d-02, -1.1516700d-17,  9.4040991d-02,
     : 1.6288377d-01,  1.8808198d-01, -8.7654022d-01, -7.5910610d-01,
     :-4.3827011d-01, -5.3672609d-17,  4.3827011d-01,  7.5910610d-01,
     : 8.7654022d-01, -9.6285275d-01, -8.3385495d-01, -4.8142638d-01,
     :-5.8957727d-17,  4.8142638d-01,  8.3385495d-01,  9.6285275d-01,
     : 1.0488495d-01,  9.0833030d-02,  5.2442474d-02,  6.4223508d-18,
     :-5.2442474d-02, -9.0833030d-02, -1.0488495d-01,  7.5940393d-01,
     : 6.5766309d-01,  3.7970196d-01,  4.6500080d-17, -3.7970196d-01,
     :-6.5766309d-01, -7.5940393d-01, -6.6266618d-03, -5.7388575d-03,
     :-3.3133309d-03, -4.0576601d-19,  3.3133309d-03,  5.7388575d-03,
     : 6.6266618d-03, -6.7592308d-01, -5.8536656d-01, -3.3796154d-01,
     :-4.1388352d-17,  3.3796154d-01,  5.8536656d-01,  6.7592308d-01,
     :-2.9624980d-03, -2.5655986d-03, -1.4812490d-03, -1.8140069d-19,
     : 1.4812490d-03,  2.5655986d-03,  2.9624980d-03,  6.5295445d-01,
     : 5.6547514d-01,  3.2647723d-01,  3.9981929d-17, -3.2647723d-01,
     :-5.6547514d-01, -6.5295445d-01 /
       data y66/
     : 0.0000000d+00,  0.0000000d+00, -0.0000000d+00, -0.0000000d+00,
     :-0.0000000d+00,  0.0000000d+00,  0.0000000d+00,  2.6489523d-05,
     : 1.3244761d-05, -1.3244761d-05, -2.6489523d-05, -1.3244761d-05,
     : 1.3244761d-05,  2.6489523d-05,  1.5465461d-03,  7.7327303d-04,
     :-7.7327303d-04, -1.5465461d-03, -7.7327303d-04,  7.7327303d-04,
     : 1.5465461d-03,  1.5096379d-02,  7.5481893d-03, -7.5481893d-03,
     :-1.5096379d-02, -7.5481893d-03,  7.5481893d-03,  1.5096379d-02,
     : 6.8148725d-02,  3.4074362d-02, -3.4074362d-02, -6.8148725d-02,
     :-3.4074362d-02,  3.4074362d-02,  6.8148725d-02,  1.9524348d-01,
     : 9.7621742d-02, -9.7621742d-02, -1.9524348d-01, -9.7621742d-02,
     : 9.7621742d-02,  1.9524348d-01,  4.0760222d-01,  2.0380111d-01,
     :-2.0380111d-01, -4.0760222d-01, -2.0380111d-01,  2.0380111d-01,
     : 4.0760222d-01,  6.6522360d-01,  3.3261180d-01, -3.3261180d-01,
     :-6.6522360d-01, -3.3261180d-01,  3.3261180d-01,  6.6522360d-01,
     : 8.8137658d-01,  4.4068829d-01, -4.4068829d-01, -8.8137658d-01,
     :-4.4068829d-01,  4.4068829d-01,  8.8137658d-01,  9.6616823d-01,
     : 4.8308411d-01, -4.8308411d-01, -9.6616823d-01, -4.8308411d-01,
     : 4.8308411d-01,  9.6616823d-01 /
       data y86/
     : 0.0000000d+00,  0.0000000d+00, -0.0000000d+00, -0.0000000d+00,
     :-0.0000000d+00,  0.0000000d+00,  0.0000000d+00,  2.7963078d-04,
     : 1.3981539d-04, -1.3981539d-04, -2.7963078d-04, -1.3981539d-04,
     : 1.3981539d-04,  2.7963078d-04,  1.4756349d-02,  7.3781745d-03,
     :-7.3781745d-03, -1.4756349d-02, -7.3781745d-03,  7.3781745d-03,
     : 1.4756349d-02,  1.2057078d-01,  6.0285392d-02, -6.0285392d-02,
     :-1.2057078d-01, -6.0285392d-02,  6.0285392d-02,  1.2057078d-01,
     : 4.1431364d-01,  2.0715682d-01, -2.0715682d-01, -4.1431364d-01,
     :-2.0715682d-01,  2.0715682d-01,  4.1431364d-01,  7.9072975d-01,
     : 3.9536488d-01, -3.9536488d-01, -7.9072975d-01, -3.9536488d-01,
     : 3.9536488d-01,  7.9072975d-01,  8.7340300d-01,  4.3670150d-01,
     :-4.3670150d-01, -8.7340300d-01, -4.3670150d-01,  4.3670150d-01,
     : 8.7340300d-01,  3.9117246d-01,  1.9558623d-01, -1.9558623d-01,
     :-3.9117246d-01, -1.9558623d-01,  1.9558623d-01,  3.9117246d-01,
     :-3.7613648d-01, -1.8806824d-01,  1.8806824d-01,  3.7613648d-01,
     : 1.8806824d-01, -1.8806824d-01, -3.7613648d-01, -7.5283222d-01,
     :-3.7641611d-01,  3.7641611d-01,  7.5283222d-01,  3.7641611d-01,
     :-3.7641611d-01, -7.5283222d-01 /
       data y99/
     :-0.0000000d+00, -0.0000000d+00,  0.0000000d+00,  0.0000000d+00,
     :-0.0000000d+00, -0.0000000d+00,  0.0000000d+00, -1.5204476d-07,
     :-9.3100563d-24,  1.5204476d-07,  2.7930169d-23, -1.5204476d-07,
     :-4.6550281d-23,  1.5204476d-07, -6.7827302d-05, -4.1532244d-21,
     : 6.7827302d-05,  1.2459673d-20, -6.7827302d-05, -2.0766122d-20,
     : 6.7827302d-05, -2.0685662d-03, -1.2666315d-19,  2.0685662d-03,
     : 3.7998944d-19, -2.0685662d-03, -6.3331574d-19,  2.0685662d-03,
     :-1.9840237d-02, -1.2148641d-18,  1.9840237d-02,  3.6445924d-18,
     :-1.9840237d-02, -6.0743206d-18,  1.9840237d-02, -9.6211078d-02,
     :-5.8912294d-18,  9.6211078d-02,  1.7673688d-17, -9.6211078d-02,
     :-2.9456147d-17,  9.6211078d-02, -2.9021180d-01, -1.7770348d-17,
     : 2.9021180d-01,  5.3311043d-17, -2.9021180d-01, -8.8851738d-17,
     : 2.9021180d-01, -6.0507851d-01, -3.7050373d-17,  6.0507851d-01,
     : 1.1115112d-16, -6.0507851d-01, -1.8525186d-16,  6.0507851d-01,
     :-9.2278922d-01, -5.6504543d-17,  9.2278922d-01,  1.6951363d-16,
     :-9.2278922d-01, -2.8252272d-16,  9.2278922d-01, -1.0591059d+00,
     :-6.4851531d-17,  1.0591059d+00,  1.9455459d-16, -1.0591059d+00,
     :-3.2425766d-16,  1.0591059d+00 /
*
*  determine matrix of ylm's for use in least squares fitting,  use here 
*  only up through lambda = 9. ordering is y00, y20, y40, y60, y80, 
*      y33, y53, y73, y93, y66, y86, y99
*
      call dcopy(70,y00,1,ylm(1,1),1)
      call dcopy(70,y20,1,ylm(1,2),1)
      call dcopy(70,y40,1,ylm(1,3),1)
      call dcopy(70,y60,1,ylm(1,4),1)
      call dcopy(70,y80,1,ylm(1,5),1)
      call dcopy(70,y33,1,ylm(1,6),1)
      call dcopy(70,y53,1,ylm(1,7),1)
      call dcopy(70,y73,1,ylm(1,8),1)
      call dcopy(70,y93,1,ylm(1,9),1)
      call dcopy(70,y66,1,ylm(1,10),1)
      call dcopy(70,y86,1,ylm(1,11),1)
      call dcopy(70,y99,1,ylm(1,12),1)
*          
*  call subroutine spline_ch3he to get pot values at distance r      
      call spline_ch3he(vsp_jacek,r)
*      
      lwork=1812
      rcond=1.d-6
      call dgelsd(70,12,1,ylm,70,vsp_jacek,70,swork,rcond,irank,work
     : ,lwork,iwork,info)
*
*  convert to atomic units and fill vlm coefficients
      tohat=1.d0/219474.6d0
*  save anisotropic terms
      call dcopy(11,vsp_jacek(2),1,vvl,1)
*
* at r=15.5, merge spherical potential to long-range behaviour and damp
* all the anisotropic terms 
      fact=0.5d0*(tanh((r-15.5d0))+1d0)
      s4pi = sqrt ( 4.d0 * acos(-1.d0) )
      vv0=vsp_jacek(1)*(1d0-fact)-fact*c6/r**6
      vv0=vv0*tohat/s4pi
      call dscal(11,(1d0-fact),vvl,1)
      call dscal(11,tohat,vvl,1)

      return
      end
* ----------------------------------------------------------------------
      subroutine spline_ch3he(vsp_jacek, r)
c  spline_ch3he.f
c  based on spline_ch2he_3.f, using Jacek's code to do spline_fit of pot
c  example:
c    K=57
c    call splinej(K,Rp,XX,b0,c0,d0)
c    VNO=sevalj(K, r, Rp, XX, b0,c0,d0)
c  where,
c  K  the number of points to be fitted
c  Rp, XX   original data, Rp & XX should have the same dimensions
c  r  new distance, where pot need to be calculated by spline-Fitchbur
c  VNO  pot at r, output
      implicit double precision (a-h,o-z)   
      integer k
      dimension b0(19,70),c0(19,70),a0(19,70),rr(19)
      dimension vsp_jacek(70)
      dimension vv(1330),v(19,70),vvec(19,70)
      data rr /3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,11,
     :  12,13,15,20/
      data ifirst /0/
      if (ifirst.eq.0) then
         open (unit=10,file=
     :     'potdata/cd3he_ccsdt_v0avg.dat')
         read (10,*) vv
         close(10)
*
         do i=1,70
            do j=1,19         
              k=(i-1)*19+j
              v(j,i)=vv(k)
            enddo
         enddo          
*
         do j=1,70
            call dcopy(19,v(1,j),1,vvec(1,j),1)
* vvec contains potentials at all 19 points (rows) for each 70 theta/phi (columns)
* determine spline coefficients for all 70 theta/phi values
            call spline(19,rr,vvec(1,j),a0(1,j),b0(1,j),c0(1,j))
         enddo
         ifirst=1
      endif
      do j=1,70
* using previously determined spline coefficients to determine potential at all 70 theta/phi values
          vsp_jacek(j)=seval(19,r,rr,vvec(1,j),a0(1,j),b0(1,j),c0(1,j))
      enddo             
      return 
      end   



